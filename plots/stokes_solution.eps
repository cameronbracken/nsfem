%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: stokes_solution.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Cameron Bracken
%%CreationDate: 4/24/08
%%BoundingBox: 0 0 538 425
%%HiResBoundingBox: 0 0 538 425
%%CropBox: 0 0 538 425
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%AI3_Cropmarks: 191.0000 36.0000 357.0000 389.0000
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font Helvetica
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-04-24T20:48:41-07:00</xap:CreateDate>
         <xap:ModifyDate>2008-04-24T20:48:41-07:00</xap:ModifyDate>
         <xap:MetadataDate>2008-04-24T20:48:41-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>192</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FWDfmB+cvkzyHqFrY6+1ys95EZ4PQi9VSoYqankKGuZWl0WXOSMYuvMD70&#xA;W8t8rfnh+W+k+b/MevPqmo3UWuvEYbQ2hX0/T5GrsZWDkepwSirRQBvm2j7LdoSFjH/sof8AFIMw&#xA;yzzD+c3k7zL5Y1PSbEX0b6hbSW4laBSAJVKmoE8Tbg02YZRk7A1kOcP9lH9bh5O0sEPqlXwP6k88&#xA;p+e7Kx8t6bp72t7eyWVtFbyXSxWkKuY0C1EYnoo22AzBy6HLj+oV8Q4EvaXQxNHJv/Vl/wASxP8A&#xA;MPS284a3ZalaSalp4gSON4QsEinh61JFAvI1V0M4dDT7aKTWmajPr8OL65V8D+pysPbGmyfTK/hL&#xA;9T0xvOYERkOj34jHVq2n8Liua8+0mhBrxN/6sv8AiXbYYHJ9O7ynyjqmm+TPMD6jez311brYfUPT&#xA;eCJpWImEqMZnupmonx7CnIuS1eIOZMO2dLPlP7Jfqdni7D1eT6YX8Y/rU/zL/Njyh5ksdOtrW6vd&#xA;OlsL6O9eY2/NqRK4Hp8Z1UOGIILA07cT8QyRrcR5H7C5f+hTtGr8Pb+tD/ik0/JL8zPJcNvpfkS2&#xA;v7q91ad7p4JJLYwwj+8umjQGSYoqIppU/dWmXQyxlyLrdV2ZnwC8kaHvB+4vacscB2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8of85kxyf4r8uvxPA2MoDUNKibcV+nOm&#xA;9m8kYzlxEDl+ljJ4Xa/aQeBFc9R0+uwDH9cf9MGmfJ6Z5ZvbOKEGSdEpQmrCu3tmj1urxE/XH5h5&#xA;LtDFMnYF63oeuaKtkA2oWynbYzRj+OcZ2nliQaIeJ1GjzHJtCXyKd2nmHQFZQ2pWo5Gg/fR+FfH2&#xA;zyztnFOV0CXpuytPkFXGQ+CdS+ZPLv6Odf0rZ8vD14q/8SzgsmkzeJ9EvkX0/skgAXs8q82avpUr&#xA;SCK8hehp8MintXx986DR6fIKuJ+T6L2bqsQ5yj8w8v1O5t6ufVUih6EHuc6PFjl3F6z8/g8M/vIf&#xA;6YJz+QoLfnZ5bK/EA16SRuAP0fcDNtpQQXzz2kywnjPCQd+hfaeZ7w7sVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVWTzLDDJMwZljUuyorO5CitFRQWY+AAqcVY3oX5keUNX0y&#xA;3vxfxaf9Z9Qx2t/JFBPSKV4WbiXIZecbDkpI267HFUw/xh5S2/3N2G5IH+lQ9R1H2vbFXf4w8pUr&#xA;+m7ClaV+tQ9a0p9rxxV3+MPKW/8AubsNiAf9Kh6noPte+KuPnHyiDxOuaeG8PrUNe3+V7jFXf4w8&#xA;pb/7m7DYgH/Soep6D7Xvirv8YeUt/wDc3YbEA/6VD1PQfa98VcfOHlIVrrdgOIqf9Kh2Hj9rFVS2&#xA;8z+Wrq7js7bVrKe8mr6NtHcRPI/FSx4orFjRVJ27DFUzxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KrJoYp4XhmQSRSqUkjYVVlYUIIPYjFWKadpGmaP5lg03S7ZLSxt4LNY&#xA;LeIURAV1E0A+nFU1t/8Ajx/7aN5/2M4q7/pVf9vH/u44q64/4/v+2jZ/9i2KtXCryvmoOQ1G0APe&#xA;h+q1/Virdx/x/f8AbRs/+xbFWrk0TUXP2Y7+1kc+CItszMfZVBJxVvVf+lz/ANs5P+xjFULqoH+K&#xA;9K9poqf9ImoYqyPFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxvzVdec&#xA;LfUdOfQ4Bc2RjulvoQsZb1iii0YtJJFRBISXA7d/FVjP5f3HnWe7sn84QiLWjFD9Zr6avQPqQhqs&#xA;I9PeOlSKfLFWY2//AB4/9tG8/wCxnFWohzhtYSfgl1G45gd/SlnmX/h41xVu4/4/v+2jZ/8AYtir&#xA;rj/j+/7aNn/2LYq64/4/v+2jZ/8AYtirV2R9R8wjv8e3/RnHireq/wDS5/7Zyf8AYxiqE1Yyf4u0&#xA;kBQY/Vj5MSQQfqmoUoKb9++KskxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2Kqb3NvHNFDJKiTTcvRiZgGfgKtxU7mg60xVihuxf+bIrrSru3mtZILXjcL+/jYgaivwtG6jYg&#xA;g75OJj1B/HwKDaLgt72T6iZLvjTUbwKYI1Wh/wBKBJ9T1slxxHKPzP6qWi6C1nH1AG+mq2o3gHww&#xA;/wDL0f8AffgMHGP5o+39a15t/U7j9HNIb6cu+ojmxEJJ43wjX/dfZVAHyw+IP5o+39a15uns7it9&#xA;/p0//HQtBSkP/Ltv/d4+IP5o+39a15tXNrOkepytfTenDe28sh4w7JGlu7t/d70VSdsHGP5o+39a&#xA;15t6tazgayTezmmnKT8MO/8AvRttHjxj+aPt/Wtea3Vba9U60qXfqf7jV5CdEfY/WO0Yh8PfDxxP&#xA;OPyP67Wip3y3y+bdL9eSKRPWj+xG0ZH+iahTq8le+RkY9Afn+wKLZTkEuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVj/mbyZYa/eWV5PNLb3FlHcwJJCI+RhvFWOdCXV6ckWm&#xA;3z60xVjfk7yVp3k/VbbRNPmnmgt44SsszLX9+2pSt8CBI9iaD4f44qyLTLGCzSyjh5cG1O7NCSaE&#xA;Lcr+IXevffrirms4bk6aZq1j1O8aOp6MGuWVgBtVSu1e1R3OKq8FCllG1eD6ld8lNSDwe5kWvyZA&#xA;w9wMVUEsYLZ9SaMEGXUbMyEmvJq25Ln/ACiW3+jwxVdrdtFLZa9bTgNG0H1uh+yawNEFYf5LQcvu&#xA;xVfqaiNdZUH7Glxjmx5NQfWd2J3P34qpalZQR3Wu3Kitw+mryJJ3r64Fe1AEAG3j4nFVurIp83aS&#xA;9TVZYwACQN7TUOq1oenfFWSYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FWP+Y/OVjoGqabaX0ZS11CO6ke+LKEi+qor8Sv23aTlRQo6+9BirGfKvna28zX2m67bWc0Z1K0tp&#xA;YrPZ2URtqUbK0h4xhgR0LD2rkoxvrSCaZDp7alNNp9IoooZVu9QhDOzGssgKcwqqA3C5INGI370y&#xA;VQ7yx9S3S7i+A0Uy2vqo1nJcN6MnNjK3o1lYOIxU+q9dydzhEYnkfmP1WtkdFbSrmK6tNFlhblJN&#xA;NJd3CAMChmhlkeqsOSqHnUCvYr45CUSObIEFWmo1reXJH7pr+GQk/srbSwxyMadADAzfLfIpX36R&#xA;PealBK/pC6sYokcAsxq06niqnk3HmNh45KMSTQQTSEhvZ9TntZI7PjBqWnu1ws0hj5qDGVC8Q7jj&#xA;67jdV6/LJ8ERzPy3/V9jHiJ5BD+prN3YxBYYpbnU9IbnWYryaNV4kUj2JNy1d6e47iod5+X7U3Lu&#xA;/HyU59UiuvNWin05ImnaKWJHWoKfU788gy8l/bGxNfbBKFbg2FErZfkGTsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVaaNGILKGKmq1FaHrtirGLua2t/OihyF/c2hRAKsfh1G&#xA;vFRuTv2GSjEnkxlIDmhlvJW0lRFDKGi0iGG0dQI6y3v7tRxdlI+OFAu3c4eDzCOPyKMubuKRtXFo&#xA;fRmEVvptvGQY2SST7EgUgEIDdp0H7PywSgQmMwUUUiHmeBoEVUtrf6o/HYfvqzBNtgYhbrRfCSvh&#xA;WUd4kd2/3BTsQ6jS+V78xIX9db2SALsXWWSV4ytP51YEfPK2TV3KjeYtOuSRJbLEYonBHENdhmWT&#xA;l3/3mCAdy+W8oe8/dTDnL3Ic3MFlHbJI1DpuoNB6SVZvSnBWFEVQxYIlzFUdqewyEYE8kymBzasb&#xA;t4bmzrBKPTuLuyKEL8EchNxFRQ5b4YoU4jj9k4eDzCOPyKX2NzDNqPlwI26paVQghh/oN/vRqNQ9&#xA;jTBKBHNMZgs1yLJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksc8z3Xmy2&#xA;1PTH0eE3GmmO6XUY444pJBIUUWrD1ZYPhVySyhhUdxirCfLc3nSdp7jzEDHrZ0GRpwyRwzIq3s5j&#xA;VzHWPl6YAbioB7HuZCurCRPQMuhs3huBp0cyER3VtZxVUsyQWcP1yINVqneqcjU7164du4/j4MLl&#xA;dcUb937ULJDb3zWE97K9rHC8mt/WleqoGkJgEnTdonK/HXZKLtXCNuW6mXSW3n+P1Kt3cXCaNbmV&#xA;mtdW1C5kecVAaFmgdmJrsVt7cDw5BQNmOTjDmB1G3zCeK6vof0Iq0vm0y1SwjnhSKxjVY7VkllaK&#xA;FDREnuVPCMhKKS4NPtEt1y6OnBA2O/WwPlHmf0+TKygVt1vbO50tXe2e1ihNqBsxVJmaxoUOxgmT&#xA;03+Lcrvsa5UYEDhPf+j+xiZUbVIxLcRuLdTJf6rY/vGkbiIb20NUUuR9tWk6U5D06nuchLfyj0/H&#xA;4/QxEqNDeXXu/Hl8+dugWSK+k1BLje6uLO/RJalaXo+pqpUsm8cYNKUrtWtMjt3FJlIczEfj3hQA&#xA;uI/MPlqNlQxie7tg9KvxsYbmKM1+HjyEh5bGu3TuDVbFlHivcfH8ftZvkWx2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVg2rzWd35l1OaGSGeF/L54TKRIDSeYHgVPiOxx4&#xA;qac0Qavh+O6OvZXiu75lCH6q097GrQkjnFZwxhaVGx9Yk48fva+AVW1f1SsmtYokuLSEqIw9lpgh&#xA;DBhJDEFll5KQgIaKZ+VKdPc4fEHUtZFcqHuNj5GhXuIP2oHVxczXV7LFGTcl47DS5QzKqS7DnzI5&#xA;bSSkORX+7XY8d83BljH1Heunf/b+tphmPGIEUT+PsH47x0P5exiNJZNTuF1FACtxAI4kRwGrwXiz&#xA;qp5mo5/SNqVHVzJ8u52dJTplrqWnzRJec5b/AEi5jtjeRqqpNBccIhso+H4ZVkYAfaG9TmRnzRnE&#xA;S2HePx0/sddlzGOTho8r/H4/QnKrHFOxqvo2mpJJHAz8FpeRCNiAORIaa4dzy6muYByBnH1Dff40&#xA;PlvfnxfrUYI/QjghVUCt6FqpEbH4LC/EQJ335rKDkeP3tsYAchHf+ifwVJlVfMflugTl9e1WpVeD&#xA;fZn2K74eO2WKAB2EfgKPyZtgch2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuIBBBFQeoxV5xZeWtP8vajdaRYhmt7Ly6yQs3EOEe5nk4/CFFAT0yud932oIT2+jl+s6mkauxk&#xA;S7hjVQprLJa28gTYHdgjHI3Lul/sVrzVpplFzLKjBn+uWlxDRmYNFdIloGPE9/jp06DtlMpnl195&#xA;J+W33gLwIO7vJLKWdYULPY3SXUCHflDcAs/E7D4yZ0SvcfTlEJT4wb9P4/H6S5ODSCV1zTmPzZ5e&#xA;ezF0b2OMFeZhc8Zx029H+8ruKALvtTqM2dtBiQa6pB+kV1OSeRoWT9IXcEFtG2xe3WjNy4jblCks&#xA;m55Abdc1uczOSwTQ+X3X/Zy6i/LowAJS+pMriVXubrm1Ha9toY5Gcqoit0S7ap3FB+83r7ZZHIRs&#xA;ftJH/FA/AuPwIOC4S7jt7i3LtCsxcPSlVudUQxUDfF0hatcvuXdL7P0saU5kQ+ZPLLlaut9qwVm6&#xA;iqzVp92SgTe/2n9CQGaZal2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsK&#xA;85fmfp/lbzLpWi3do8q6lFNL9ZEiJxMaOyqiPTmWMfFviHGq9a4qxzyz5zi86Pd67DZ/VfrGgzIb&#xA;aQmRR6N3cRGkoVdjxruoPtlWSHFWwPvZBl0VvcQatNNLIJIjqSSlWOyrPaGCIrRSeLO6x9KVFfHK&#xA;vB/oR/H+amx3lDPY+vYQadNI0Ud9ayaTN6AozyWblKRn9jmnrENQBdq4TGhv/pR+P1DvZRF8vm3N&#xA;BO2nW+pgfWr/AE6OQashC1nWOUCWHpuA0DGM0rRaftms+Df8fjo248lC+XT7DfytdNomiXEpLSRi&#xA;3lpJwdibhXYUoIeJLswpuSeXdWPxEbd/63KE51dWf9j8+g+Vd4GylY2cUd7L5imeSPT47ea1sbav&#xA;KiQiPjKoqF5t9Wbj17UNGpiY9O/8Bxp5LJN3X6fq+0/JEj1LWFUuIw8mm2txqWoWpIMZuJ+VBGf9&#xA;9tynVdjQU5CuARPIbeR5fD8V5W0S8247A2zG3jiid4zplmxX4S8ts/rOdgW2hZTv2GDwv6Efx/mo&#xA;sd5QrvXzF5Y2UCW71KVOCsf3ckc7xsWoKBl+zXr2yePHwnlEe78BBZrlzF2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrXiidlZ0VmT7LEAkbg7fSBirF5be0TzyqIqxubS2iR&#xA;Uoh9NjeyPxpQj44kqR/HISiDsWcTIbjkorC8elesZnUR6XZ3UIIHxtZs8zKSVLUBKDrUcsHB5leP&#xA;yCMu7eKy/SkiCklm8WqRvWrCILSSOrVIMnoyg9vjr1rhjADkiUyUZpx4a7eOBSLUY0ng6ksbekMj&#xA;ewIMZXxBrjDfdnk2qPd9/wCPtat5pLLyxOYaKdPiuYretD8Nqzxxlug+zGK5NqWajZKo0jTLZeaW&#xA;rpcFGO5hswAAD/P6jx08cjMdR0bMZF0eR/H3oZ0t9RX1iOR1HUVihck8kisiSyV6gN9WkNB3ffvg&#xA;MYyCLlA0utoGlvIHEz+tLf3U0iDgaR20b2fIEqT/AL7rvWpwcB7z9n6l4x3D7UstEt49W8tqP79o&#xA;7VvjPJ+P1G+ruSdq06bYRGIPmplIjyZtk2DsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVYR5z0T8xLvzRpF/5b1GO2022imS8t5ZWRS8isiu0QjkWahdWHL7PDb7WKpT5G0PzT&#xA;YXVnp/my9XUdSijhM0/N5XPJ9TaE+sRGSUQ0+z4U6YDEHmyjIxNhlGn2VZNPtZJpDHHa3dmyt6bh&#xA;vRliiYVdSx5emTucjwnvLLjHcPt/W3pllHO+lvdl7trrTSbn1zyWQx+jw5pQIePrP1Fd8fDB57p8&#xA;Ujlt7v180RYlkh0JyWM6hrK45EndYWMoNRuRLbD4v65NqblHHTr6y6Kbz0HcdSl7KjsR4ELckfMV&#xA;9sVRE88cOqXVzOf3VjZK6mg+FZHkaX51ECfdiqCtNMWK40mB/wBzPbWLtO8bColUQxhn2oxp6gBY&#xA;eOQMBz5FsjlIFHcdx/H3IW2M1vY2VyJ5GNrpMk84pGvxOInHIhDTmY33r448J7z9n6lEx/NH2/rU&#xA;m05NP8w6HawspSEwRykqeblbK/VW5Fj2U9a/hhEQOTGUzLmy/JMXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYqld95n0Gw1mx0W7vEh1PUQ7Wds3KriNSx+IDiuymnIitDStDi&#xA;qQ2GuaXrPmS21HSbqO7tLu2tZLWVSQsiqNRUlaitOXemNpo1aYaXHcxR2KTzidv0neUkpxJ+G55C&#xA;gNB8fKngNsULVhumm0kwSrHBDqF4rIFBBANwAvsFRSBQ9adhTFUTB8Mdk52RNSu+bUoBze5Ra/N3&#xA;A9ycVUFiu0bUzcyrKj6nZvGvGhQ1tvhr3CjjQ9a1PyVXa5HNPaa80EhhItFtmkFCwKRyStwBqu6T&#xA;gAnv8t1V2oCcQ6v6xBm/RcYkKdC9LjlxDe/TFVPVY7sXmtyesGgOmKogIoBtPRuVCa8g1fYjw3VW&#xA;arLEPN+lRc19UyxsI6jkVFrqAJp1pvgtPCavoyXCh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2Kse8xeQfK/mHUrTUtVtnlu7JGjhZJpYhweoIdY2UNszDf+Y4qk+leVPL+i67&#xA;a6Pp9miafZW9qltFJWYor/pKRlDSF2pyPjgIB5sozMTYNJvb6fbD6iF5ov6RuwESSRFAH1noqsFH&#xA;0YOAM/Gl1o/AOt7GE/UPimH+5G829aX/AJev8rHhC+MfL5D9TmsoVsZYS0weHUYw376Wn727SZaf&#xA;H/JKPpx4QvjHy+Q/U3PZQ/6d8Uv/AB0bQf30v/Lt/lY8IXxT5fIfqaubCJotUiLyhZryCBiJpa8J&#xA;o7eN/wBrrxc48IXxj5f6Ufqa1Wwtz+miry1GnopYTS7MBO1D8XgwND448IXxj5f6Ufqb1axgH6ZL&#xA;GQqNOQnlNKQf96K8gWoR88eAL40vL5D9Sjf2VnD5s0owwRxkTR0KIqkcrS/r0HfiMIAHJhOcpbk2&#xA;yjCxdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirCfOPnXzHonmrR9OstIa&#xA;80q9jla8vBFcycHVW4fHAkojCuE5VVi3L4RUbqpd5E8xazr97Y6nq9kLS7uYYSyIrxKFR9SSPlFK&#xA;TIjOo5cTWncg7Yqy2AA/UPbUbyn/AE9Yq5KraQTjrDqMvwnv61zJAfuE1foxV1x/x/b0/wByNn/2&#xA;K4q3cf8AH9/20bP/ALFsVdcf8f3/AG0bP/sWxVq7NbTXIwKvNKIIx4vNbwxoP+CYYq3qv/S5/wC2&#xA;cn/YxiqE1ZmHm7SV4EgyxkuKUFLTUNjvXevYYqyTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FWMXlxHD51XmHNYbOnCN36LqP8gbASyjAn+0KWlajPxs/raSEnULp1KQT&#xA;UHIXPJN0qeLd/D6ceJn4R8vmP1rrvUJv0Wn1VHqNRLvzgn+IDUKhBRNuX829PA48SPCPl8x+tET6&#xA;hB/p3wzf8dG0P9xN/wAu3+RjxL4R8vmP1oddQn9TUjcI/ptqNm0QSCeq724KmqfyhT86+2PEvhHy&#xA;+Y/W7U7+Vo7wWgdZDqVoS8kExAAFuegTuwAPsdseJfCPl8x+tWk1GJkvC0cyM2oWZZfRmND/AKNU&#xA;V4Y8S+EfL5j9ajf6hN9Y1z1UcwPp49ICCYMnH1wKnhvz3btx6b9niXwj5fMfrXX13FN5s0sIsgPr&#xA;R/bikjG1rqHd1XEFEsZHd8wyjCwdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdiqH1C1a7sLm0SZrd7iJ4lnj2eMupUOvTda1GKvIfy/0xtI83t5DbUrwahpVm929/b/AFdbdgJR&#xA;IqJb3EVzIiKuqlUb1KMVf4RxxV6Svli5X06a5f8A7qV50+Gx2eTnyP8AvN/xY2Ku/wAMXPo+j+nL&#xA;/wBP1fXpxsft+r61f95v598Vc3li5b1K65f/AL2VJ3+Gx3ePhxP+83/Fa4q8s1j8zbSxvPMcU19f&#xA;rLot7ArpJPYRiZRK8ck5QWbuph/R/PgquzKyU/vKYq9Tbyxct6ldcv8A97Kk7/DY7vHw4n/eb/it&#xA;cVc3li5b1K65f/vZUnf4bHd4+HE/7zf8VrirpvLFzN6/qa5fn6zEIJfhsRVBy2/3m2/vDiqVarbn&#xA;TfNflhrq81C/fUb2W1iZzZpBHJFp95OplWOGOVqoJAoU0rux2AKrMsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVaEaBzIFAdgFZ6bkLUgE+3I4q3irsVdiqm1rbOWLQox&#xA;YhmJUGrDjQn3HBfuHhiqpirsVdirRVSQSASpqpPY0pt9+Kt4q7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:2700E35ACE13DD1189EEE6F4A12411BA</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:2800E35ACE13DD1189EEE6F4A12411BA</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:2600E35ACE13DD1189EEE6F4A12411BA</stRef:instanceID>
            <stRef:documentID>uuid:2500E35ACE13DD1189EEE6F4A12411BA</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -425 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 425 li
538 425 li
538 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 415.167 mo
538 415.167 li
538 12 li
0 12 li
0 415.167 li
cp
clp
0 12 mo
0 415.25 li
538.083 415.25 li
538.083 12 li
0 12 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
209.25 370.833 mo
209.25 94.25 li
347.5 94.25 li
347.5 370.833 li
209.25 370.833 li
cp
false sop
0 0 0 0 cmyk
ef
0.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
209.25 370.833 mo
209.25 94.25 li
347.5 94.25 li
347.5 370.833 li
209.25 370.833 li
@
274 219.917 mo
273.5 219.583 li
273.5 220.083 mo
274 219.917 li
273.083 219.917 mo
273.5 220.083 li
273.5 219.583 mo
273.083 219.917 li
286.75 219.917 mo
286.083 219.5 li
286.083 220.75 mo
286.75 219.917 li
284.667 220.5 mo
286.083 220.75 li
283.25 220.583 mo
284.667 220.5 li
281.833 220.833 mo
283.25 220.583 li
280.5 220.833 mo
281.833 220.833 li
279.083 220.5 mo
280.5 220.833 li
277.667 220.083 mo
279.083 220.5 li
276.583 219.917 mo
277.667 220.083 li
276.25 219.417 mo
276.583 219.917 li
275.75 217.167 mo
276.25 219.417 li
276.25 216.667 mo
275.75 217.167 li
277.667 215.25 mo
276.25 216.667 li
279.083 215.917 mo
277.667 215.25 li
280.25 217.167 mo
279.083 215.917 li
280.5 217.667 mo
280.25 217.167 li
281.833 218.5 mo
280.5 217.667 li
283.25 219 mo
281.833 218.5 li
284.667 219.333 mo
283.25 219 li
286.083 219.5 mo
284.667 219.333 li
1 0.976471 0.0862745 0.0941176 cmyk
@
288 219.917 mo
287.417 218.833 li
287.75 222.75 mo
288 219.917 li
287.417 223.333 mo
287.75 222.75 li
286.083 223 mo
287.417 223.333 li
285 222.75 mo
286.083 223 li
284.667 222.583 mo
285 222.75 li
283.25 222.167 mo
284.667 222.583 li
281.833 222 mo
283.25 222.167 li
280.5 221.917 mo
281.833 222 li
279.083 221.583 mo
280.5 221.917 li
277.667 221.333 mo
279.083 221.583 li
276.25 221.167 mo
277.667 221.333 li
274.917 221.083 mo
276.25 221.167 li
273.5 221.417 mo
274.917 221.083 li
272.083 220.75 mo
273.5 221.417 li
270.667 220.25 mo
272.083 220.75 li
270.083 219.917 mo
270.667 220.25 li
270.667 218.833 mo
270.083 219.917 li
272.083 217.417 mo
270.667 218.833 li
272.417 217.167 mo
272.083 217.417 li
273.5 216.5 mo
272.417 217.167 li
274.917 215.333 mo
273.5 216.5 li
276.083 214.333 mo
274.917 215.333 li
276.25 214.167 mo
276.083 214.333 li
277.667 213.167 mo
276.25 214.167 li
278.75 214.333 mo
277.667 213.167 li
279.083 214.583 mo
278.75 214.333 li
280.5 215.083 mo
279.083 214.583 li
281.833 215.833 mo
280.5 215.083 li
283.25 216.5 mo
281.833 215.833 li
283.917 217.167 mo
283.25 216.5 li
284.667 217.417 mo
283.917 217.167 li
286.083 218 mo
284.667 217.417 li
287.417 218.833 mo
286.083 218 li
0.960784 0.898039 0 0 cmyk
@
gsave
209.25 370.917 mo
347.583 370.917 li
347.583 94.25 li
209.25 94.25 li
209.25 370.917 li
cp
clp
270.667 215 mo
269.333 216.083 li
271.75 214.333 mo
270.667 215 li
272.083 214 mo
271.75 214.333 li
273.5 212.917 mo
272.083 214 li
274.917 212.083 mo
273.5 212.917 li
276 211.583 mo
274.917 212.083 li
276.25 211.25 mo
276 211.583 li
277.667 210.5 mo
276.25 211.25 li
279.083 210.667 mo
277.667 210.5 li
280.5 210.75 mo
279.083 210.667 li
281.833 210.833 mo
280.5 210.75 li
283 211.583 mo
281.833 210.833 li
283.25 211.667 mo
283 211.583 li
284.667 212.583 mo
283.25 211.667 li
286.083 213.667 mo
284.667 212.583 li
286.417 214.333 mo
286.083 213.667 li
287.25 217.167 mo
286.417 214.333 li
287.417 217.25 mo
287.25 217.167 li
288.833 219.917 mo
287.417 217.25 li
288.167 222.75 mo
288.833 219.917 li
287.417 224.417 mo
288.167 222.75 li
286.083 224.083 mo
287.417 224.417 li
284.667 223.75 mo
286.083 224.083 li
283.25 223.5 mo
284.667 223.75 li
281.833 223.25 mo
283.25 223.5 li
280.5 223 mo
281.833 223.25 li
279.083 222.75 mo
280.5 223 li
279.083 222.75 mo
279.083 222.75 li
277.667 222.5 mo
279.083 222.75 li
276.25 222.417 mo
277.667 222.5 li
274.917 222.5 mo
276.25 222.417 li
273.5 222.667 mo
274.917 222.5 li
272.083 221.833 mo
273.5 222.667 li
270.667 221.75 mo
272.083 221.833 li
269.333 221.917 mo
270.667 221.75 li
268.5 219.917 mo
269.333 221.917 li
268.417 217.167 mo
268.5 219.917 li
269.333 216.083 mo
268.417 217.167 li
0.894118 0.796078 0 0 cmyk
@
290.833 217.167 mo
290.25 215.333 li
290.25 218.333 mo
290.833 217.167 li
289.667 219.917 mo
290.25 218.333 li
288.833 221.667 mo
289.667 219.917 li
288.583 222.75 mo
288.833 221.667 li
288.833 225 mo
288.583 222.75 li
290.25 225.333 mo
288.833 225 li
290.417 225.5 mo
290.25 225.333 li
290.25 225.583 mo
290.417 225.5 li
288.833 225.667 mo
290.25 225.583 li
288.167 225.5 mo
288.833 225.667 li
287.417 225.417 mo
288.167 225.5 li
286.083 225.167 mo
287.417 225.417 li
284.667 224.917 mo
286.083 225.167 li
283.25 224.667 mo
284.667 224.917 li
281.833 224.417 mo
283.25 224.667 li
280.5 224.167 mo
281.833 224.417 li
279.083 223.917 mo
280.5 224.167 li
277.667 223.75 mo
279.083 223.917 li
276.25 223.667 mo
277.667 223.75 li
274.917 223.75 mo
276.25 223.667 li
273.5 224 mo
274.917 223.75 li
272.083 223.167 mo
273.5 224 li
270.667 223.333 mo
272.083 223.167 li
269.333 223.333 mo
270.667 223.333 li
267.917 222.833 mo
269.333 223.333 li
267.833 222.75 mo
267.917 222.833 li
267.333 219.917 mo
267.833 222.75 li
266.917 217.167 mo
267.333 219.917 li
266.667 214.333 mo
266.917 217.167 li
267.917 211.833 mo
266.667 214.333 li
268.083 211.583 mo
267.917 211.833 li
269.333 209.583 mo
268.083 211.583 li
269.75 208.75 mo
269.333 209.583 li
270.667 207.333 mo
269.75 208.75 li
272.083 206.583 mo
270.667 207.333 li
273.167 206 mo
272.083 206.583 li
273.5 205.667 mo
273.167 206 li
274.917 204.75 mo
273.5 205.667 li
276.25 204.083 mo
274.917 204.75 li
277.667 203.25 mo
276.25 204.083 li
279.083 203.667 mo
277.667 203.25 li
280.5 204.083 mo
279.083 203.667 li
281.833 204.333 mo
280.5 204.083 li
283.25 205.083 mo
281.833 204.333 li
283.917 206 mo
283.25 205.083 li
284.667 206.583 mo
283.917 206 li
286.083 208.417 mo
284.667 206.583 li
286.25 208.75 mo
286.083 208.417 li
287.417 209.5 mo
286.25 208.75 li
288.75 211.583 mo
287.417 209.5 li
288.833 211.917 mo
288.75 211.583 li
289.5 214.333 mo
288.833 211.917 li
290.25 215.333 mo
289.5 214.333 li
346.083 138.083 mo
347.5 138.25 li
344.75 137.833 mo
346.083 138.083 li
343.333 137.667 mo
344.75 137.833 li
341.917 137.5 mo
343.333 137.667 li
340.5 137.25 mo
341.917 137.5 li
339.167 137.083 mo
340.5 137.25 li
337.75 136.917 mo
339.167 137.083 li
336.333 136.667 mo
337.75 136.917 li
334.917 136.5 mo
336.333 136.667 li
333.583 136.333 mo
334.917 136.5 li
332.167 136.167 mo
333.583 136.333 li
331.333 136.083 mo
332.167 136.167 li
330.75 136.083 mo
331.333 136.083 li
329.333 136 mo
330.75 136.083 li
328 135.833 mo
329.333 136 li
326.583 135.75 mo
328 135.833 li
325.167 135.667 mo
326.583 135.75 li
323.75 135.583 mo
325.167 135.667 li
322.417 135.5 mo
323.75 135.583 li
321 135.417 mo
322.417 135.5 li
319.583 135.417 mo
321 135.417 li
318.167 135.333 mo
319.583 135.417 li
316.75 135.333 mo
318.167 135.333 li
315.417 135.25 mo
316.75 135.333 li
314 135.25 mo
315.417 135.25 li
312.583 135.25 mo
314 135.25 li
311.167 135.25 mo
312.583 135.25 li
309.833 135.167 mo
311.167 135.25 li
308.417 135.167 mo
309.833 135.167 li
307 135.167 mo
308.417 135.167 li
305.583 135.167 mo
307 135.167 li
304.25 135.167 mo
305.583 135.167 li
302.833 135.167 mo
304.25 135.167 li
301.417 135.25 mo
302.833 135.167 li
300 135.25 mo
301.417 135.25 li
298.667 135.333 mo
300 135.25 li
297.25 135.333 mo
298.667 135.333 li
295.833 135.333 mo
297.25 135.333 li
294.417 135.417 mo
295.833 135.333 li
293.083 135.417 mo
294.417 135.417 li
291.667 135.417 mo
293.083 135.417 li
290.25 135.417 mo
291.667 135.417 li
288.833 135.417 mo
290.25 135.417 li
287.417 135.417 mo
288.833 135.417 li
286.083 135.417 mo
287.417 135.417 li
284.667 135.417 mo
286.083 135.417 li
283.25 135.417 mo
284.667 135.417 li
281.833 135.417 mo
283.25 135.417 li
280.5 135.417 mo
281.833 135.417 li
279.083 135.417 mo
280.5 135.417 li
277.667 135.417 mo
279.083 135.417 li
276.25 135.5 mo
277.667 135.417 li
274.917 135.5 mo
276.25 135.5 li
273.5 135.583 mo
274.917 135.5 li
272.083 135.583 mo
273.5 135.583 li
270.667 135.583 mo
272.083 135.583 li
269.333 135.583 mo
270.667 135.583 li
267.917 135.583 mo
269.333 135.583 li
266.5 135.583 mo
267.917 135.583 li
265.083 135.583 mo
266.5 135.583 li
263.667 135.583 mo
265.083 135.583 li
262.333 135.583 mo
263.667 135.583 li
260.917 135.5 mo
262.333 135.583 li
259.5 135.5 mo
260.917 135.5 li
258.083 135.5 mo
259.5 135.5 li
256.75 135.5 mo
258.083 135.5 li
255.333 135.417 mo
256.75 135.5 li
253.917 135.333 mo
255.333 135.417 li
252.5 135.25 mo
253.917 135.333 li
251.167 135.167 mo
252.5 135.25 li
249.75 135.083 mo
251.167 135.167 li
248.333 135 mo
249.75 135.083 li
246.917 135 mo
248.333 135 li
245.583 135 mo
246.917 135 li
244.167 135 mo
245.583 135 li
242.75 135.083 mo
244.167 135 li
241.333 135.167 mo
242.75 135.083 li
240 135.167 mo
241.333 135.167 li
238.583 135.25 mo
240 135.167 li
237.167 135.333 mo
238.583 135.25 li
235.75 135.417 mo
237.167 135.333 li
234.333 135.5 mo
235.75 135.417 li
233 135.583 mo
234.333 135.5 li
231.583 135.667 mo
233 135.583 li
230.167 135.75 mo
231.583 135.667 li
228.75 135.833 mo
230.167 135.75 li
227.417 135.917 mo
228.75 135.833 li
226 136.083 mo
227.417 135.917 li
225.083 136.083 mo
226 136.083 li
224.583 136.167 mo
225.083 136.083 li
223.167 136.333 mo
224.583 136.167 li
221.833 136.5 mo
223.167 136.333 li
220.417 136.667 mo
221.833 136.5 li
219 136.833 mo
220.417 136.667 li
217.583 137 mo
219 136.833 li
216.25 137.167 mo
217.583 137 li
214.833 137.333 mo
216.25 137.167 li
213.417 137.583 mo
214.833 137.333 li
212 137.833 mo
213.417 137.583 li
210.667 138.083 mo
212 137.833 li
209.25 138.333 mo
210.667 138.083 li
0.862745 0.737255 0 0 cmyk
@
346.083 178.417 mo
347.5 179.333 li
345.417 178 mo
346.083 178.417 li
344.75 177.5 mo
345.417 178 li
343.333 176.5 mo
344.75 177.5 li
341.917 175.833 mo
343.333 176.5 li
340.5 175.25 mo
341.917 175.833 li
340.417 175.25 mo
340.5 175.25 li
339.167 174.667 mo
340.417 175.25 li
337.75 174.167 mo
339.167 174.667 li
336.333 173.583 mo
337.75 174.167 li
334.917 173.083 mo
336.333 173.583 li
333.583 172.75 mo
334.917 173.083 li
332.167 172.583 mo
333.583 172.75 li
331.417 172.417 mo
332.167 172.583 li
330.75 172.333 mo
331.417 172.417 li
329.333 172.083 mo
330.75 172.333 li
328 171.833 mo
329.333 172.083 li
326.583 171.75 mo
328 171.833 li
325.167 171.833 mo
326.583 171.75 li
323.75 171.917 mo
325.167 171.833 li
322.417 172 mo
323.75 171.917 li
321 172.083 mo
322.417 172 li
319.583 172.167 mo
321 172.083 li
318.167 172.25 mo
319.583 172.167 li
316.75 172.333 mo
318.167 172.25 li
315.667 172.417 mo
316.75 172.333 li
315.417 172.417 mo
315.667 172.417 li
314 172.583 mo
315.417 172.417 li
312.583 172.917 mo
314 172.583 li
311.167 173.583 mo
312.583 172.917 li
309.833 174.25 mo
311.167 173.583 li
308.417 175 mo
309.833 174.25 li
308 175.25 mo
308.417 175 li
307 175.583 mo
308 175.25 li
305.583 176 mo
307 175.583 li
304.25 176.5 mo
305.583 176 li
302.833 176.917 mo
304.25 176.5 li
301.417 177.417 mo
302.833 176.917 li
300 177.833 mo
301.417 177.417 li
299.583 178 mo
300 177.833 li
298.667 178.667 mo
299.583 178 li
297.5 180.833 mo
298.667 178.667 li
297.25 181.5 mo
297.5 180.833 li
296.25 183.583 mo
297.25 181.5 li
295.833 184.417 mo
296.25 183.583 li
294.417 186 mo
295.833 184.417 li
294.083 186.417 mo
294.417 186 li
293.083 189.167 mo
294.083 186.417 li
293.75 192 mo
293.083 189.167 li
293.083 194.667 mo
293.75 192 li
293 194.75 mo
293.083 194.667 li
292.583 197.583 mo
293 194.75 li
293.083 199.167 mo
292.583 197.583 li
293.417 200.333 mo
293.083 199.167 li
294.417 202.083 mo
293.417 200.333 li
294.75 203.167 mo
294.417 202.083 li
294.417 205.167 mo
294.75 203.167 li
294.333 206 mo
294.417 205.167 li
293.833 208.75 mo
294.333 206 li
293.833 211.583 mo
293.833 208.75 li
293.917 214.333 mo
293.833 211.583 li
293.083 216.417 mo
293.917 214.333 li
292.833 217.167 mo
293.083 216.417 li
291.667 219.667 mo
292.833 217.167 li
291.583 219.917 mo
291.667 219.667 li
290.333 222.75 mo
291.583 219.917 li
291.667 224 mo
290.333 222.75 li
292.5 225.5 mo
291.667 224 li
291.667 225.917 mo
292.5 225.5 li
290.25 226.917 mo
291.667 225.917 li
288.833 226.833 mo
290.25 226.917 li
287.417 226.583 mo
288.833 226.833 li
286.083 226.333 mo
287.417 226.583 li
284.667 226.083 mo
286.083 226.333 li
283.25 225.833 mo
284.667 226.083 li
281.833 225.583 mo
283.25 225.833 li
281.5 225.5 mo
281.833 225.583 li
280.5 225.333 mo
281.5 225.5 li
279.083 225.167 mo
280.5 225.333 li
277.667 225.083 mo
279.083 225.167 li
276.25 224.917 mo
277.667 225.083 li
274.917 225 mo
276.25 224.917 li
273.5 225.25 mo
274.917 225 li
272.083 225.417 mo
273.5 225.25 li
270.667 225.083 mo
272.083 225.417 li
269.333 224.25 mo
270.667 225.083 li
267.917 224 mo
269.333 224.25 li
266.75 225.5 mo
267.917 224 li
266.5 225.667 mo
266.75 225.5 li
266.083 225.5 mo
266.5 225.667 li
266.167 222.75 mo
266.083 225.5 li
265.083 220.25 mo
266.167 222.75 li
265 219.917 mo
265.083 220.25 li
263.75 217.167 mo
265 219.917 li
263.667 217.083 mo
263.75 217.167 li
262.75 214.333 mo
263.667 217.083 li
263 211.583 mo
262.75 214.333 li
263.167 208.75 mo
263 211.583 li
263.083 206 mo
263.167 208.75 li
263.583 203.167 mo
263.083 206 li
263.667 201.583 mo
263.583 203.167 li
263.833 200.333 mo
263.667 201.583 li
263.667 199.75 mo
263.833 200.333 li
263.417 197.583 mo
263.667 199.75 li
263.583 194.75 mo
263.417 197.583 li
263.667 194.333 mo
263.583 194.75 li
264.417 192 mo
263.667 194.333 li
263.667 190.25 mo
264.417 192 li
263.25 189.167 mo
263.667 190.25 li
262.5 186.417 mo
263.25 189.167 li
262.333 186 mo
262.5 186.417 li
260.917 183.833 mo
262.333 186 li
260.833 183.583 mo
260.917 183.833 li
259.5 181.583 mo
260.833 183.583 li
259 180.833 mo
259.5 181.583 li
258.083 179.5 mo
259 180.833 li
256.75 178.25 mo
258.083 179.5 li
256.25 178 mo
256.75 178.25 li
255.333 177.583 mo
256.25 178 li
253.917 177 mo
255.333 177.583 li
252.5 176.417 mo
253.917 177 li
251.167 175.833 mo
252.5 176.417 li
249.75 175.333 mo
251.167 175.833 li
249.333 175.25 mo
249.75 175.333 li
248.333 174.833 mo
249.333 175.25 li
246.917 174.333 mo
248.333 174.833 li
245.583 173.667 mo
246.917 174.333 li
244.167 173.083 mo
245.583 173.667 li
242.75 172.917 mo
244.167 173.083 li
241.333 172.75 mo
242.75 172.917 li
240 172.583 mo
241.333 172.75 li
238.833 172.417 mo
240 172.583 li
238.583 172.417 mo
238.833 172.417 li
237.167 172.167 mo
238.583 172.417 li
235.75 172 mo
237.167 172.167 li
234.333 171.75 mo
235.75 172 li
233 171.583 mo
234.333 171.75 li
231.583 171.583 mo
233 171.583 li
230.167 171.75 mo
231.583 171.583 li
228.75 171.917 mo
230.167 171.75 li
227.417 172.083 mo
228.75 171.917 li
226 172.25 mo
227.417 172.083 li
224.833 172.417 mo
226 172.25 li
224.583 172.5 mo
224.833 172.417 li
223.167 172.75 mo
224.583 172.5 li
221.833 173.167 mo
223.167 172.75 li
220.417 173.583 mo
221.833 173.167 li
219 174.083 mo
220.417 173.583 li
217.583 174.5 mo
219 174.083 li
216.25 175.083 mo
217.583 174.5 li
215.833 175.25 mo
216.25 175.083 li
214.833 175.75 mo
215.833 175.25 li
213.417 176.583 mo
214.833 175.75 li
212 177.5 mo
213.417 176.583 li
210.75 178 mo
212 177.5 li
210.667 178.083 mo
210.75 178 li
209.25 178.5 mo
210.667 178.083 li
0.819608 0.635294 0 0 cmyk
@
346.417 197.583 mo
347.5 198.25 li
346.083 197.333 mo
346.417 197.583 li
344.75 196.25 mo
346.083 197.333 li
343.333 195.667 mo
344.75 196.25 li
341.917 195.083 mo
343.333 195.667 li
341.083 194.75 mo
341.917 195.083 li
340.5 194.583 mo
341.083 194.75 li
339.167 193.917 mo
340.5 194.583 li
337.75 193.417 mo
339.167 193.917 li
336.333 193.167 mo
337.75 193.417 li
334.917 192.917 mo
336.333 193.167 li
333.583 192.75 mo
334.917 192.917 li
332.167 192.5 mo
333.583 192.75 li
330.75 192.333 mo
332.167 192.5 li
329.333 192.083 mo
330.75 192.333 li
328.333 192 mo
329.333 192.083 li
328 191.917 mo
328.333 192 li
326.583 192 mo
328 191.917 li
326.5 192 mo
326.583 192 li
325.167 192.167 mo
326.5 192 li
323.75 192.333 mo
325.167 192.167 li
322.417 192.5 mo
323.75 192.333 li
321 192.583 mo
322.417 192.5 li
319.583 193.083 mo
321 192.583 li
318.167 193.667 mo
319.583 193.083 li
316.75 194.167 mo
318.167 193.667 li
315.417 194.583 mo
316.75 194.167 li
314.917 194.75 mo
315.417 194.583 li
314 195.083 mo
314.917 194.75 li
312.583 195.667 mo
314 195.083 li
311.167 196.833 mo
312.583 195.667 li
310.417 197.583 mo
311.167 196.833 li
309.833 198.167 mo
310.417 197.583 li
308.417 199.5 mo
309.833 198.167 li
307.5 200.333 mo
308.417 199.5 li
307 200.75 mo
307.5 200.333 li
305.583 202.167 mo
307 200.75 li
305 203.167 mo
305.583 202.167 li
304.25 204.583 mo
305 203.167 li
303.417 206 mo
304.25 204.583 li
302.833 206.833 mo
303.417 206 li
301.5 208.75 mo
302.833 206.833 li
301.417 208.833 mo
301.5 208.75 li
300 211 mo
301.417 208.833 li
299.667 211.583 mo
300 211 li
298.667 213.417 mo
299.667 211.583 li
298.25 214.333 mo
298.667 213.417 li
297.333 217.167 mo
298.25 214.333 li
297.25 217.25 mo
297.333 217.167 li
295.833 218.75 mo
297.25 217.25 li
294.833 219.917 mo
295.833 218.75 li
294.417 220.667 mo
294.833 219.917 li
293.583 222.75 mo
294.417 220.667 li
294.083 225.5 mo
293.583 222.75 li
293.083 226.083 mo
294.083 225.5 li
291.667 226.667 mo
293.083 226.083 li
290.25 228.25 mo
291.667 226.667 li
288.833 228 mo
290.25 228.25 li
287.417 227.75 mo
288.833 228 li
286.083 227.5 mo
287.417 227.75 li
284.667 227.25 mo
286.083 227.5 li
283.25 227 mo
284.667 227.25 li
281.833 226.75 mo
283.25 227 li
280.5 226.583 mo
281.833 226.75 li
279.083 226.417 mo
280.5 226.583 li
277.667 226.333 mo
279.083 226.417 li
276.25 226.167 mo
277.667 226.333 li
274.917 226.25 mo
276.25 226.167 li
273.5 226.5 mo
274.917 226.25 li
272.083 226.667 mo
273.5 226.5 li
270.667 226.667 mo
272.083 226.667 li
269.75 225.5 mo
270.667 226.667 li
269.333 225.167 mo
269.75 225.5 li
267.917 225.25 mo
269.333 225.167 li
267.667 225.5 mo
267.917 225.25 li
266.5 226.333 mo
267.667 225.5 li
265.083 227.167 mo
266.5 226.333 li
264.333 225.5 mo
265.083 227.167 li
263.667 224.167 mo
264.333 225.5 li
262.333 222.917 mo
263.667 224.167 li
262.083 222.75 mo
262.333 222.917 li
260.917 220 mo
262.083 222.75 li
260.917 219.917 mo
260.917 220 li
259.667 217.167 mo
260.917 219.917 li
259.5 216.583 mo
259.667 217.167 li
258.25 214.333 mo
259.5 216.583 li
258.083 214.083 mo
258.25 214.333 li
257.083 211.583 mo
258.083 214.083 li
256.75 210.917 mo
257.083 211.583 li
255.417 208.75 mo
256.75 210.917 li
255.333 208.583 mo
255.417 208.75 li
253.917 206.167 mo
255.333 208.583 li
253.75 206 mo
253.917 206.167 li
252.5 204 mo
253.75 206 li
251.667 203.167 mo
252.5 204 li
251.167 202.5 mo
251.667 203.167 li
249.75 200.833 mo
251.167 202.5 li
249.25 200.333 mo
249.75 200.833 li
248.333 199.5 mo
249.25 200.333 li
246.917 198.25 mo
248.333 199.5 li
246.25 197.583 mo
246.917 198.25 li
245.583 197 mo
246.25 197.583 li
244.167 196 mo
245.583 197 li
242.75 195.167 mo
244.167 196 li
241.917 194.75 mo
242.75 195.167 li
241.333 194.583 mo
241.917 194.75 li
240 194.083 mo
241.333 194.583 li
238.583 193.667 mo
240 194.083 li
237.167 193.25 mo
238.583 193.667 li
235.75 192.917 mo
237.167 193.25 li
234.333 192.5 mo
235.75 192.917 li
233 192.25 mo
234.333 192.5 li
231.583 192 mo
233 192.25 li
231.583 192 mo
231.583 192 li
230.167 191.833 mo
231.583 192 li
228.75 191.833 mo
230.167 191.833 li
227.417 192 mo
228.75 191.833 li
227.25 192 mo
227.417 192 li
226 192.25 mo
227.25 192 li
224.583 192.417 mo
226 192.25 li
223.167 192.667 mo
224.583 192.417 li
221.833 192.917 mo
223.167 192.667 li
220.417 193.167 mo
221.833 192.917 li
219 193.333 mo
220.417 193.167 li
217.583 193.917 mo
219 193.333 li
216.25 194.583 mo
217.583 193.917 li
215.667 194.75 mo
216.25 194.583 li
214.833 195.083 mo
215.667 194.75 li
213.417 195.583 mo
214.833 195.083 li
212 196.25 mo
213.417 195.583 li
210.667 197.25 mo
212 196.25 li
210.167 197.583 mo
210.667 197.25 li
209.25 198.167 mo
210.167 197.583 li
0.729412 0.411765 0 0 cmyk
@
346.083 208 mo
347.5 208.5 li
344.75 207.5 mo
346.083 208 li
343.333 206.917 mo
344.75 207.5 li
341.917 206.417 mo
343.333 206.917 li
340.75 206 mo
341.917 206.417 li
340.5 205.833 mo
340.75 206 li
339.167 205.5 mo
340.5 205.833 li
337.75 205.25 mo
339.167 205.5 li
336.333 205.083 mo
337.75 205.25 li
334.917 204.917 mo
336.333 205.083 li
333.583 204.667 mo
334.917 204.917 li
332.167 204.417 mo
333.583 204.667 li
330.75 204.417 mo
332.167 204.417 li
329.333 204.5 mo
330.75 204.417 li
328 204.583 mo
329.333 204.5 li
326.583 204.667 mo
328 204.583 li
325.167 204.75 mo
326.583 204.667 li
323.75 204.917 mo
325.167 204.75 li
322.417 205.333 mo
323.75 204.917 li
321 205.75 mo
322.417 205.333 li
320.167 206 mo
321 205.75 li
319.583 206.083 mo
320.167 206 li
318.167 206.5 mo
319.583 206.083 li
316.75 206.833 mo
318.167 206.5 li
315.417 207.417 mo
316.75 206.833 li
314 208.25 mo
315.417 207.417 li
313.25 208.75 mo
314 208.25 li
312.583 209.167 mo
313.25 208.75 li
311.167 210 mo
312.583 209.167 li
309.833 210.833 mo
311.167 210 li
308.917 211.583 mo
309.833 210.833 li
308.417 211.917 mo
308.917 211.583 li
307 213.083 mo
308.417 211.917 li
305.917 214.333 mo
307 213.083 li
305.583 214.583 mo
305.917 214.333 li
304.25 215.833 mo
305.583 214.583 li
303.083 217.167 mo
304.25 215.833 li
302.833 217.333 mo
303.083 217.167 li
301.417 218.5 mo
302.833 217.333 li
300 219.583 mo
301.417 218.5 li
299.583 219.917 mo
300 219.583 li
298.667 220.75 mo
299.583 219.917 li
297.25 222.25 mo
298.667 220.75 li
296.917 222.75 mo
297.25 222.25 li
295.833 224.333 mo
296.917 222.75 li
295.5 225.5 mo
295.833 224.333 li
294.417 226.333 mo
295.5 225.5 li
293.083 226.833 mo
294.417 226.333 li
291.667 227.5 mo
293.083 226.833 li
290.917 228.333 mo
291.667 227.5 li
290.25 229.417 mo
290.917 228.333 li
288.833 229.167 mo
290.25 229.417 li
287.417 228.917 mo
288.833 229.167 li
286.083 228.667 mo
287.417 228.917 li
284.667 228.417 mo
286.083 228.667 li
284 228.333 mo
284.667 228.417 li
283.25 228.167 mo
284 228.333 li
281.833 228 mo
283.25 228.167 li
280.5 227.833 mo
281.833 228 li
279.083 227.667 mo
280.5 227.833 li
277.667 227.583 mo
279.083 227.667 li
276.25 227.417 mo
277.667 227.583 li
274.917 227.5 mo
276.25 227.417 li
273.5 227.75 mo
274.917 227.5 li
272.083 228 mo
273.5 227.75 li
270.667 228.167 mo
272.083 228 li
269.917 228.333 mo
270.667 228.167 li
269.333 228.417 mo
269.917 228.333 li
269.167 228.333 mo
269.333 228.417 li
267.917 226.75 mo
269.167 228.333 li
266.5 227 mo
267.917 226.75 li
265.5 228.333 mo
266.5 227 li
265.083 228.75 mo
265.5 228.333 li
264 228.333 mo
265.083 228.75 li
263.667 227.667 mo
264 228.333 li
262.333 225.833 mo
263.667 227.667 li
261.833 225.5 mo
262.333 225.833 li
260.917 224.75 mo
261.833 225.5 li
259.5 223.583 mo
260.917 224.75 li
258.5 222.75 mo
259.5 223.583 li
258.083 222 mo
258.5 222.75 li
256.75 219.917 mo
258.083 222 li
256.75 219.917 mo
256.75 219.917 li
255.333 218.083 mo
256.75 219.917 li
254.417 217.167 mo
255.333 218.083 li
253.917 216.667 mo
254.417 217.167 li
252.5 215.583 mo
253.917 216.667 li
251.167 214.583 mo
252.5 215.583 li
250.833 214.333 mo
251.167 214.583 li
249.75 213.417 mo
250.833 214.333 li
248.333 212.417 mo
249.75 213.417 li
246.917 211.583 mo
248.333 212.417 li
246.917 211.5 mo
246.917 211.583 li
245.583 209.917 mo
246.917 211.5 li
244.167 208.917 mo
245.583 209.917 li
243.833 208.75 mo
244.167 208.917 li
242.75 208.25 mo
243.833 208.75 li
241.333 207.75 mo
242.75 208.25 li
240 207.083 mo
241.333 207.75 li
238.583 206.583 mo
240 207.083 li
237.167 206.167 mo
238.583 206.583 li
236.667 206 mo
237.167 206.167 li
235.75 205.5 mo
236.667 206 li
234.333 205.25 mo
235.75 205.5 li
233 205 mo
234.333 205.25 li
231.583 204.833 mo
233 205 li
230.167 204.667 mo
231.583 204.833 li
228.75 204.5 mo
230.167 204.667 li
227.417 204.417 mo
228.75 204.5 li
226 204.417 mo
227.417 204.417 li
224.583 204.417 mo
226 204.417 li
223.167 204.583 mo
224.583 204.417 li
221.833 204.833 mo
223.167 204.583 li
220.417 205 mo
221.833 204.833 li
219 205.167 mo
220.417 205 li
217.583 205.333 mo
219 205.167 li
216.25 205.833 mo
217.583 205.333 li
215.833 206 mo
216.25 205.833 li
214.833 206.333 mo
215.833 206 li
213.417 206.833 mo
214.833 206.333 li
212 207.333 mo
213.417 206.833 li
210.667 207.917 mo
212 207.333 li
209.25 208.417 mo
210.667 207.917 li
0.619608 0 0 0 cmyk
@
346.083 215.75 mo
347.5 216 li
344.75 215.417 mo
346.083 215.75 li
343.333 215.167 mo
344.75 215.417 li
341.917 214.833 mo
343.333 215.167 li
340.5 214.583 mo
341.917 214.833 li
339.5 214.333 mo
340.5 214.583 li
339.167 214.25 mo
339.5 214.333 li
337.75 214.083 mo
339.167 214.25 li
336.333 214 mo
337.75 214.083 li
334.917 213.833 mo
336.333 214 li
333.583 213.667 mo
334.917 213.833 li
332.167 213.583 mo
333.583 213.667 li
330.75 213.667 mo
332.167 213.583 li
329.333 213.75 mo
330.75 213.667 li
328 213.833 mo
329.333 213.75 li
326.583 214 mo
328 213.833 li
325.167 214.167 mo
326.583 214 li
324.167 214.333 mo
325.167 214.167 li
323.75 214.417 mo
324.167 214.333 li
322.417 214.583 mo
323.75 214.417 li
321 214.75 mo
322.417 214.583 li
319.583 214.917 mo
321 214.75 li
318.167 215.417 mo
319.583 214.917 li
316.75 215.917 mo
318.167 215.417 li
315.417 216.417 mo
316.75 215.917 li
314 216.917 mo
315.417 216.417 li
313.333 217.167 mo
314 216.917 li
312.583 217.333 mo
313.333 217.167 li
311.167 217.833 mo
312.583 217.333 li
309.833 218.25 mo
311.167 217.833 li
308.417 218.75 mo
309.833 218.25 li
307 219.75 mo
308.417 218.75 li
306.833 219.917 mo
307 219.75 li
305.583 220.917 mo
306.833 219.917 li
304.25 222 mo
305.583 220.917 li
303.25 222.75 mo
304.25 222 li
302.833 223 mo
303.25 222.75 li
301.417 224 mo
302.833 223 li
300 225 mo
301.417 224 li
298.667 225.417 mo
300 225 li
298.333 225.5 mo
298.667 225.417 li
297.25 225.667 mo
298.333 225.5 li
295.833 226.75 mo
297.25 225.667 li
294.417 227.333 mo
295.833 226.75 li
293.083 227.667 mo
294.417 227.333 li
291.667 228.333 mo
293.083 227.667 li
291.667 228.417 mo
291.667 228.333 li
290.25 230.583 mo
291.667 228.417 li
288.833 230.333 mo
290.25 230.583 li
287.417 230.083 mo
288.833 230.333 li
286.083 229.833 mo
287.417 230.083 li
284.667 229.583 mo
286.083 229.833 li
283.25 229.417 mo
284.667 229.583 li
281.833 229.25 mo
283.25 229.417 li
280.5 229.083 mo
281.833 229.25 li
279.083 229 mo
280.5 229.083 li
277.667 228.833 mo
279.083 229 li
276.25 228.667 mo
277.667 228.833 li
274.917 228.75 mo
276.25 228.667 li
273.5 229 mo
274.917 228.75 li
272.083 229.25 mo
273.5 229 li
270.667 229.417 mo
272.083 229.25 li
269.333 229.667 mo
270.667 229.417 li
267.917 228.333 mo
269.333 229.667 li
267.917 228.333 mo
267.917 228.333 li
266.5 227.667 mo
267.917 228.333 li
266 228.333 mo
266.5 227.667 li
265.083 229.333 mo
266 228.333 li
263.667 228.917 mo
265.083 229.333 li
262.417 228.333 mo
263.667 228.917 li
262.333 228.167 mo
262.417 228.333 li
260.917 226.75 mo
262.333 228.167 li
259.5 226 mo
260.917 226.75 li
258.583 225.5 mo
259.5 226 li
258.083 225.167 mo
258.583 225.5 li
256.75 224 mo
258.083 225.167 li
255.333 223.083 mo
256.75 224 li
254.333 222.75 mo
255.333 223.083 li
253.917 222.5 mo
254.333 222.75 li
252.5 221.833 mo
253.917 222.5 li
251.167 221.083 mo
252.5 221.833 li
249.75 220.333 mo
251.167 221.083 li
248.917 219.917 mo
249.75 220.333 li
248.333 219.5 mo
248.917 219.917 li
246.917 218.667 mo
248.333 219.5 li
245.583 218 mo
246.917 218.667 li
244.167 217.417 mo
245.583 218 li
243.333 217.167 mo
244.167 217.417 li
242.75 216.917 mo
243.333 217.167 li
241.333 216.333 mo
242.75 216.917 li
240 215.833 mo
241.333 216.333 li
238.583 215.417 mo
240 215.833 li
237.167 215.083 mo
238.583 215.417 li
235.75 214.833 mo
237.167 215.083 li
234.333 214.5 mo
235.75 214.833 li
233.75 214.333 mo
234.333 214.5 li
233 214.167 mo
233.75 214.333 li
231.583 213.917 mo
233 214.167 li
230.167 213.833 mo
231.583 213.917 li
228.75 213.75 mo
230.167 213.833 li
227.417 213.583 mo
228.75 213.75 li
226 213.5 mo
227.417 213.583 li
224.583 213.583 mo
226 213.5 li
223.167 213.75 mo
224.583 213.583 li
221.833 213.833 mo
223.167 213.75 li
220.417 213.917 mo
221.833 213.833 li
219 214 mo
220.417 213.917 li
217.583 214.25 mo
219 214 li
217.25 214.333 mo
217.583 214.25 li
216.25 214.583 mo
217.25 214.333 li
214.833 214.833 mo
216.25 214.583 li
213.417 215.167 mo
214.833 214.833 li
212 215.417 mo
213.417 215.167 li
210.667 215.75 mo
212 215.417 li
209.25 216 mo
210.667 215.75 li
0.517647 0 0.12549 0 cmyk
@
346.75 222.75 mo
347.5 222.833 li
346.083 222.667 mo
346.75 222.75 li
344.75 222.417 mo
346.083 222.667 li
343.333 222.25 mo
344.75 222.417 li
341.917 222 mo
343.333 222.25 li
340.5 221.833 mo
341.917 222 li
339.167 221.583 mo
340.5 221.833 li
337.75 221.5 mo
339.167 221.583 li
336.333 221.417 mo
337.75 221.5 li
334.917 221.417 mo
336.333 221.417 li
333.583 221.333 mo
334.917 221.417 li
332.167 221.333 mo
333.583 221.333 li
330.75 221.333 mo
332.167 221.333 li
329.333 221.25 mo
330.75 221.333 li
328 221.25 mo
329.333 221.25 li
326.583 221.25 mo
328 221.25 li
325.167 221.417 mo
326.583 221.25 li
323.75 221.583 mo
325.167 221.417 li
322.417 221.833 mo
323.75 221.583 li
321 222.25 mo
322.417 221.833 li
319.583 222.583 mo
321 222.25 li
318.917 222.75 mo
319.583 222.583 li
318.167 222.917 mo
318.917 222.75 li
316.75 223.167 mo
318.167 222.917 li
315.417 223.417 mo
316.75 223.167 li
314 223.667 mo
315.417 223.417 li
312.583 223.917 mo
314 223.667 li
311.167 224.167 mo
312.583 223.917 li
309.833 224.333 mo
311.167 224.167 li
308.417 224.5 mo
309.833 224.333 li
307 225.25 mo
308.417 224.5 li
306.667 225.5 mo
307 225.25 li
305.583 226.167 mo
306.667 225.5 li
304.25 226.833 mo
305.583 226.167 li
302.833 227.25 mo
304.25 226.833 li
301.417 227.667 mo
302.833 227.25 li
300 228 mo
301.417 227.667 li
298.667 228.25 mo
300 228 li
297.667 228.333 mo
298.667 228.25 li
297.25 228.333 mo
297.667 228.333 li
295.833 228.5 mo
297.25 228.333 li
294.417 228.583 mo
295.833 228.5 li
293.083 229 mo
294.417 228.583 li
292.5 231.083 mo
293.083 229 li
291.667 232 mo
292.5 231.083 li
290.25 231.833 mo
291.667 232 li
288.833 231.583 mo
290.25 231.833 li
287.417 231.333 mo
288.833 231.583 li
286.417 231.083 mo
287.417 231.333 li
286.083 231.083 mo
286.417 231.083 li
284.667 230.833 mo
286.083 231.083 li
283.25 230.667 mo
284.667 230.833 li
281.833 230.5 mo
283.25 230.667 li
280.5 230.333 mo
281.833 230.5 li
279.083 230.25 mo
280.5 230.333 li
277.667 230.083 mo
279.083 230.25 li
276.25 229.917 mo
277.667 230.083 li
274.917 230.083 mo
276.25 229.917 li
273.5 230.25 mo
274.917 230.083 li
272.083 230.5 mo
273.5 230.25 li
270.667 230.667 mo
272.083 230.5 li
269.333 230.917 mo
270.667 230.667 li
268.167 231.083 mo
269.333 230.917 li
267.917 231.167 mo
268.167 231.083 li
267.75 231.083 mo
267.917 231.167 li
266.5 228.75 mo
267.75 231.083 li
265.083 230 mo
266.5 228.75 li
263.667 229.667 mo
265.083 230 li
262.333 229.417 mo
263.667 229.667 li
260.917 228.417 mo
262.333 229.417 li
260.75 228.333 mo
260.917 228.417 li
259.5 227.583 mo
260.75 228.333 li
258.083 227.75 mo
259.5 227.583 li
256.75 227.5 mo
258.083 227.75 li
255.333 227.083 mo
256.75 227.5 li
253.917 226.667 mo
255.333 227.083 li
252.5 226.167 mo
253.917 226.667 li
251.167 225.75 mo
252.5 226.167 li
250.5 225.5 mo
251.167 225.75 li
249.75 225.25 mo
250.5 225.5 li
248.333 224.833 mo
249.75 225.25 li
246.917 224.5 mo
248.333 224.833 li
245.583 224.083 mo
246.917 224.5 li
244.167 223.75 mo
245.583 224.083 li
242.75 223.417 mo
244.167 223.75 li
241.333 223.083 mo
242.75 223.417 li
240.083 222.75 mo
241.333 223.083 li
240 222.667 mo
240.083 222.75 li
238.583 222.5 mo
240 222.667 li
237.167 222.417 mo
238.583 222.5 li
235.75 222.167 mo
237.167 222.417 li
234.333 221.833 mo
235.75 222.167 li
233 221.583 mo
234.333 221.833 li
231.583 221.417 mo
233 221.583 li
230.167 221.417 mo
231.583 221.417 li
228.75 221.333 mo
230.167 221.417 li
227.417 221.25 mo
228.75 221.333 li
226 221.25 mo
227.417 221.25 li
224.583 221.333 mo
226 221.25 li
223.167 221.333 mo
224.583 221.333 li
221.833 221.417 mo
223.167 221.333 li
220.417 221.417 mo
221.833 221.417 li
219 221.5 mo
220.417 221.417 li
217.583 221.583 mo
219 221.5 li
216.25 221.667 mo
217.583 221.583 li
214.833 221.833 mo
216.25 221.667 li
213.417 222.083 mo
214.833 221.833 li
212 222.417 mo
213.417 222.083 li
210.75 222.75 mo
212 222.417 li
210.667 222.75 mo
210.75 222.75 li
209.25 222.833 mo
210.667 222.75 li
0.52549 0 0.352941 0 cmyk
@
346.083 228.583 mo
347.5 228.75 li
344.75 228.583 mo
346.083 228.583 li
343.333 228.583 mo
344.75 228.583 li
341.917 228.583 mo
343.333 228.583 li
340.5 228.417 mo
341.917 228.583 li
339.167 228.333 mo
340.5 228.417 li
338.167 228.333 mo
339.167 228.333 li
337.75 228.333 mo
338.167 228.333 li
336.333 228.25 mo
337.75 228.333 li
334.917 228.25 mo
336.333 228.25 li
333.583 228.167 mo
334.917 228.25 li
332.167 228.167 mo
333.583 228.167 li
330.75 228.167 mo
332.167 228.167 li
329.333 228.167 mo
330.75 228.167 li
328 228.25 mo
329.333 228.167 li
326.583 228.167 mo
328 228.25 li
325.167 228.167 mo
326.583 228.167 li
323.75 228.167 mo
325.167 228.167 li
322.417 228.25 mo
323.75 228.167 li
322 228.333 mo
322.417 228.25 li
321 228.417 mo
322 228.333 li
319.583 228.583 mo
321 228.417 li
318.167 228.667 mo
319.583 228.583 li
316.75 228.833 mo
318.167 228.667 li
315.417 228.917 mo
316.75 228.833 li
314 229.083 mo
315.417 228.917 li
312.583 229.167 mo
314 229.083 li
311.167 229.333 mo
312.583 229.167 li
309.833 229.417 mo
311.167 229.333 li
308.417 229.583 mo
309.833 229.417 li
307 229.75 mo
308.417 229.583 li
305.583 229.833 mo
307 229.75 li
304.25 230 mo
305.583 229.833 li
302.833 230.167 mo
304.25 230 li
301.417 230.417 mo
302.833 230.167 li
300 230.667 mo
301.417 230.417 li
298.667 230.917 mo
300 230.667 li
297.25 231.083 mo
298.667 230.917 li
296.667 231.083 mo
297.25 231.083 li
295.833 231.25 mo
296.667 231.083 li
294.417 231.333 mo
295.833 231.25 li
293.083 231.917 mo
294.417 231.333 li
291.667 233.167 mo
293.083 231.917 li
290.25 233 mo
291.667 233.167 li
288.833 232.75 mo
290.25 233 li
287.417 232.5 mo
288.833 232.75 li
286.083 232.25 mo
287.417 232.5 li
284.667 232 mo
286.083 232.25 li
283.25 231.917 mo
284.667 232 li
281.833 231.75 mo
283.25 231.917 li
280.5 231.583 mo
281.833 231.75 li
279.083 231.5 mo
280.5 231.583 li
277.667 231.333 mo
279.083 231.5 li
276.25 231.25 mo
277.667 231.333 li
274.917 231.333 mo
276.25 231.25 li
273.5 231.5 mo
274.917 231.333 li
272.083 231.75 mo
273.5 231.5 li
270.667 232 mo
272.083 231.75 li
269.333 232.167 mo
270.667 232 li
267.917 232.417 mo
269.333 232.167 li
266.5 232.25 mo
267.917 232.417 li
265.833 231.083 mo
266.5 232.25 li
265.083 230.583 mo
265.833 231.083 li
263.667 230.417 mo
265.083 230.583 li
262.333 230.667 mo
263.667 230.417 li
260.917 230.833 mo
262.333 230.667 li
259.5 230.5 mo
260.917 230.833 li
258.083 230.5 mo
259.5 230.5 li
256.75 230.5 mo
258.083 230.5 li
255.333 230.583 mo
256.75 230.5 li
253.917 230.667 mo
255.333 230.583 li
252.5 230.75 mo
253.917 230.667 li
251.167 230.333 mo
252.5 230.75 li
249.75 229.917 mo
251.167 230.333 li
248.333 229.5 mo
249.75 229.917 li
246.917 229.25 mo
248.333 229.5 li
245.583 228.917 mo
246.917 229.25 li
244.167 228.833 mo
245.583 228.917 li
242.75 228.833 mo
244.167 228.833 li
241.333 228.75 mo
242.75 228.833 li
240 228.75 mo
241.333 228.75 li
238.583 228.75 mo
240 228.75 li
237.167 228.75 mo
238.583 228.75 li
235.75 228.667 mo
237.167 228.75 li
234.333 228.5 mo
235.75 228.667 li
233 228.333 mo
234.333 228.5 li
231.583 228.333 mo
233 228.333 li
231.167 228.333 mo
231.583 228.333 li
230.167 228.25 mo
231.167 228.333 li
228.75 228.25 mo
230.167 228.25 li
227.417 228.25 mo
228.75 228.25 li
226 228.25 mo
227.417 228.25 li
224.583 228.25 mo
226 228.25 li
223.167 228.25 mo
224.583 228.25 li
222.083 228.333 mo
223.167 228.25 li
221.833 228.333 mo
222.083 228.333 li
220.417 228.333 mo
221.833 228.333 li
219 228.333 mo
220.417 228.333 li
217.583 228.417 mo
219 228.333 li
216.25 228.5 mo
217.583 228.417 li
214.833 228.583 mo
216.25 228.5 li
213.417 228.583 mo
214.833 228.583 li
212 228.583 mo
213.417 228.583 li
210.667 228.667 mo
212 228.583 li
209.25 228.75 mo
210.667 228.667 li
0.466667 0 0.670588 0 cmyk
@
346.083 234.667 mo
347.5 234.583 li
344.75 234.667 mo
346.083 234.667 li
343.333 234.667 mo
344.75 234.667 li
341.917 234.75 mo
343.333 234.667 li
340.5 234.75 mo
341.917 234.75 li
339.167 234.833 mo
340.5 234.75 li
337.75 234.917 mo
339.167 234.833 li
336.333 234.917 mo
337.75 234.917 li
334.917 235 mo
336.333 234.917 li
333.583 234.917 mo
334.917 235 li
332.167 234.917 mo
333.583 234.917 li
330.75 234.917 mo
332.167 234.917 li
329.333 234.917 mo
330.75 234.917 li
328 234.917 mo
329.333 234.917 li
326.583 234.917 mo
328 234.917 li
325.167 234.833 mo
326.583 234.917 li
323.75 234.75 mo
325.167 234.833 li
322.417 234.75 mo
323.75 234.75 li
321 234.667 mo
322.417 234.75 li
319.583 234.667 mo
321 234.667 li
318.167 234.667 mo
319.583 234.667 li
316.75 234.583 mo
318.167 234.667 li
315.417 234.583 mo
316.75 234.583 li
314 234.5 mo
315.417 234.583 li
312.583 234.417 mo
314 234.5 li
311.167 234.417 mo
312.583 234.417 li
309.833 234.5 mo
311.167 234.417 li
308.417 234.25 mo
309.833 234.5 li
307 234 mo
308.417 234.25 li
306.667 233.917 mo
307 234 li
305.583 233.667 mo
306.667 233.917 li
304.25 233.417 mo
305.583 233.667 li
302.833 233.333 mo
304.25 233.417 li
301.417 233.25 mo
302.833 233.333 li
300 233.417 mo
301.417 233.25 li
298.667 233.583 mo
300 233.417 li
298 233.917 mo
298.667 233.583 li
297.25 234.083 mo
298 233.917 li
295.833 234.417 mo
297.25 234.083 li
294.417 234.083 mo
295.833 234.417 li
293.5 233.917 mo
294.417 234.083 li
293.083 233.75 mo
293.5 233.917 li
292.75 233.917 mo
293.083 233.75 li
291.667 234.167 mo
292.75 233.917 li
290.25 234.167 mo
291.667 234.167 li
288.833 233.917 mo
290.25 234.167 li
288.833 233.917 mo
288.833 233.917 li
287.417 233.667 mo
288.833 233.917 li
286.083 233.417 mo
287.417 233.667 li
284.667 233.25 mo
286.083 233.417 li
283.25 233.167 mo
284.667 233.25 li
281.833 233 mo
283.25 233.167 li
280.5 232.917 mo
281.833 233 li
279.083 232.75 mo
280.5 232.917 li
277.667 232.583 mo
279.083 232.75 li
276.25 232.5 mo
277.667 232.583 li
274.917 232.583 mo
276.25 232.5 li
273.5 232.75 mo
274.917 232.583 li
272.083 233 mo
273.5 232.75 li
270.667 233.25 mo
272.083 233 li
269.333 233.417 mo
270.667 233.25 li
267.917 233.667 mo
269.333 233.417 li
266.5 233.917 mo
267.917 233.667 li
266.417 233.917 mo
266.5 233.917 li
265.083 234 mo
266.417 233.917 li
263.667 233.917 mo
265.083 234 li
263 233.917 mo
263.667 233.917 li
262.333 233.75 mo
263 233.917 li
260.917 233.667 mo
262.333 233.75 li
259.5 233.417 mo
260.917 233.667 li
258.083 233.25 mo
259.5 233.417 li
256.75 233.333 mo
258.083 233.25 li
255.333 233.417 mo
256.75 233.333 li
253.917 233.583 mo
255.333 233.417 li
252.5 233.667 mo
253.917 233.583 li
251.167 233.833 mo
252.5 233.667 li
250.917 233.917 mo
251.167 233.833 li
249.75 234.333 mo
250.917 233.917 li
248.333 234.417 mo
249.75 234.333 li
246.917 234.5 mo
248.333 234.417 li
245.583 234.5 mo
246.917 234.5 li
244.167 234.5 mo
245.583 234.5 li
242.75 234.5 mo
244.167 234.5 li
241.333 234.5 mo
242.75 234.5 li
240 234.583 mo
241.333 234.5 li
238.583 234.667 mo
240 234.583 li
237.167 234.75 mo
238.583 234.667 li
235.75 234.833 mo
237.167 234.75 li
234.333 234.917 mo
235.75 234.833 li
233 234.917 mo
234.333 234.917 li
231.583 234.917 mo
233 234.917 li
230.167 234.917 mo
231.583 234.917 li
228.75 234.917 mo
230.167 234.917 li
227.417 234.917 mo
228.75 234.917 li
226 234.917 mo
227.417 234.917 li
224.583 234.917 mo
226 234.917 li
223.167 234.917 mo
224.583 234.917 li
221.833 234.917 mo
223.167 234.917 li
220.417 234.917 mo
221.833 234.917 li
219 234.833 mo
220.417 234.917 li
217.583 234.75 mo
219 234.833 li
216.25 234.667 mo
217.583 234.75 li
214.833 234.667 mo
216.25 234.667 li
213.417 234.75 mo
214.833 234.667 li
212 234.75 mo
213.417 234.75 li
210.667 234.667 mo
212 234.75 li
209.25 234.583 mo
210.667 234.667 li
0.376471 0 0.866667 0 cmyk
@
346.083 240.667 mo
347.5 240.5 li
344.75 240.917 mo
346.083 240.667 li
343.333 241.083 mo
344.75 240.917 li
341.917 241.25 mo
343.333 241.083 li
340.5 241.333 mo
341.917 241.25 li
339.167 241.417 mo
340.5 241.333 li
337.75 241.5 mo
339.167 241.417 li
336.333 241.583 mo
337.75 241.5 li
334.917 241.75 mo
336.333 241.583 li
333.583 241.833 mo
334.917 241.75 li
332.167 241.75 mo
333.583 241.833 li
330.75 241.75 mo
332.167 241.75 li
329.333 241.75 mo
330.75 241.75 li
328 241.667 mo
329.333 241.75 li
326.583 241.583 mo
328 241.667 li
325.167 241.583 mo
326.583 241.583 li
323.75 241.5 mo
325.167 241.583 li
322.417 241.333 mo
323.75 241.5 li
321 241.083 mo
322.417 241.333 li
319.583 240.833 mo
321 241.083 li
318.167 240.583 mo
319.583 240.833 li
316.75 240.333 mo
318.167 240.583 li
315.417 240.083 mo
316.75 240.333 li
314 239.917 mo
315.417 240.083 li
312.583 239.667 mo
314 239.917 li
311.167 239.5 mo
312.583 239.667 li
311 239.5 mo
311.167 239.5 li
309.833 239.333 mo
311 239.5 li
308.417 238.75 mo
309.833 239.333 li
307 238.167 mo
308.417 238.75 li
305.583 237.75 mo
307 238.167 li
304.25 237.5 mo
305.583 237.75 li
302.833 237.25 mo
304.25 237.5 li
301.417 237 mo
302.833 237.25 li
300 236.667 mo
301.417 237 li
300 236.667 mo
300 236.667 li
298.667 236.083 mo
300 236.667 li
297.25 235.667 mo
298.667 236.083 li
295.833 235.5 mo
297.25 235.667 li
294.417 235.083 mo
295.833 235.5 li
293.083 234.75 mo
294.417 235.083 li
291.667 234.917 mo
293.083 234.75 li
290.25 235.333 mo
291.667 234.917 li
288.833 235.083 mo
290.25 235.333 li
287.417 234.833 mo
288.833 235.083 li
286.083 234.667 mo
287.417 234.833 li
284.667 234.583 mo
286.083 234.667 li
283.25 234.417 mo
284.667 234.583 li
281.833 234.25 mo
283.25 234.417 li
280.5 234.167 mo
281.833 234.25 li
279.083 234 mo
280.5 234.167 li
278 233.917 mo
279.083 234 li
277.667 233.833 mo
278 233.917 li
276.25 233.75 mo
277.667 233.833 li
274.917 233.833 mo
276.25 233.75 li
274.417 233.917 mo
274.917 233.833 li
273.5 234.083 mo
274.417 233.917 li
272.083 234.25 mo
273.5 234.083 li
270.667 234.5 mo
272.083 234.25 li
269.333 234.667 mo
270.667 234.5 li
267.917 234.917 mo
269.333 234.667 li
266.5 235.083 mo
267.917 234.917 li
265.083 234.917 mo
266.5 235.083 li
263.667 235 mo
265.083 234.917 li
262.333 235.25 mo
263.667 235 li
260.917 235.667 mo
262.333 235.25 li
259.5 236.25 mo
260.917 235.667 li
258.083 236.083 mo
259.5 236.25 li
256.75 236.167 mo
258.083 236.083 li
255.333 236.333 mo
256.75 236.167 li
254.167 236.667 mo
255.333 236.333 li
253.917 236.75 mo
254.167 236.667 li
252.5 237.333 mo
253.917 236.75 li
251.167 237.917 mo
252.5 237.333 li
249.75 238.417 mo
251.167 237.917 li
248.333 238.917 mo
249.75 238.417 li
246.917 239.083 mo
248.333 238.917 li
245.583 239.333 mo
246.917 239.083 li
244.5 239.5 mo
245.583 239.333 li
244.167 239.583 mo
244.5 239.5 li
242.75 239.833 mo
244.167 239.583 li
241.333 240.083 mo
242.75 239.833 li
240 240.417 mo
241.333 240.083 li
238.583 240.667 mo
240 240.417 li
237.167 241 mo
238.583 240.667 li
235.75 241.167 mo
237.167 241 li
234.333 241.25 mo
235.75 241.167 li
233 241.417 mo
234.333 241.25 li
231.583 241.5 mo
233 241.417 li
230.167 241.583 mo
231.583 241.5 li
228.75 241.667 mo
230.167 241.583 li
227.417 241.75 mo
228.75 241.667 li
226 241.75 mo
227.417 241.75 li
224.583 241.75 mo
226 241.75 li
223.167 241.75 mo
224.583 241.75 li
221.833 241.75 mo
223.167 241.75 li
220.417 241.667 mo
221.833 241.75 li
219 241.667 mo
220.417 241.667 li
217.583 241.5 mo
219 241.667 li
216.25 241.417 mo
217.583 241.5 li
214.833 241.333 mo
216.25 241.417 li
213.417 241.083 mo
214.833 241.333 li
212 240.833 mo
213.417 241.083 li
210.667 240.583 mo
212 240.833 li
209.25 240.5 mo
210.667 240.583 li
0.180392 0 1 0 cmyk
@
346.083 247.25 mo
347.5 247 li
344.75 247.5 mo
346.083 247.25 li
343.333 247.833 mo
344.75 247.5 li
343 247.833 mo
343.333 247.833 li
341.917 248.083 mo
343 247.833 li
340.5 248.333 mo
341.917 248.083 li
339.167 248.583 mo
340.5 248.333 li
337.75 248.75 mo
339.167 248.583 li
336.333 248.833 mo
337.75 248.75 li
334.917 249 mo
336.333 248.833 li
333.583 249.167 mo
334.917 249 li
332.167 249.25 mo
333.583 249.167 li
330.75 249.333 mo
332.167 249.25 li
329.333 249.25 mo
330.75 249.333 li
328 249.083 mo
329.333 249.25 li
326.583 248.917 mo
328 249.083 li
325.167 248.833 mo
326.583 248.917 li
323.75 248.667 mo
325.167 248.833 li
322.417 248.333 mo
323.75 248.667 li
321 248 mo
322.417 248.333 li
320.583 247.833 mo
321 248 li
319.583 247.667 mo
320.583 247.833 li
318.167 247.333 mo
319.583 247.667 li
316.75 247 mo
318.167 247.333 li
315.417 246.583 mo
316.75 247 li
314 246.167 mo
315.417 246.583 li
312.583 245.75 mo
314 246.167 li
311.167 245.167 mo
312.583 245.75 li
310.917 245.083 mo
311.167 245.167 li
309.833 244.667 mo
310.917 245.083 li
308.417 243.917 mo
309.833 244.667 li
307 243.083 mo
308.417 243.917 li
305.667 242.25 mo
307 243.083 li
305.583 242.25 mo
305.667 242.25 li
304.25 241.583 mo
305.583 242.25 li
302.833 241.167 mo
304.25 241.583 li
301.417 240.583 mo
302.833 241.167 li
300 239.917 mo
301.417 240.583 li
299.167 239.5 mo
300 239.917 li
298.667 239.25 mo
299.167 239.5 li
297.25 238 mo
298.667 239.25 li
296.167 236.667 mo
297.25 238 li
295.833 236.583 mo
296.167 236.667 li
294.417 236.167 mo
295.833 236.583 li
293.083 235.75 mo
294.417 236.167 li
291.667 235.667 mo
293.083 235.75 li
290.25 236.5 mo
291.667 235.667 li
288.833 236.25 mo
290.25 236.5 li
287.417 236.083 mo
288.833 236.25 li
286.083 235.917 mo
287.417 236.083 li
284.667 235.833 mo
286.083 235.917 li
283.25 235.667 mo
284.667 235.833 li
281.833 235.5 mo
283.25 235.667 li
280.5 235.417 mo
281.833 235.5 li
279.083 235.25 mo
280.5 235.417 li
277.667 235.167 mo
279.083 235.25 li
276.25 235 mo
277.667 235.167 li
274.917 235.083 mo
276.25 235 li
273.5 235.333 mo
274.917 235.083 li
272.083 235.5 mo
273.5 235.333 li
270.667 235.75 mo
272.083 235.5 li
269.333 236 mo
270.667 235.75 li
267.917 236.167 mo
269.333 236 li
266.5 236.333 mo
267.917 236.167 li
265.083 235.833 mo
266.5 236.333 li
263.667 236.167 mo
265.083 235.833 li
262.333 236.667 mo
263.667 236.167 li
262.333 236.667 mo
262.333 236.667 li
260.917 237.583 mo
262.333 236.667 li
259.5 238.417 mo
260.917 237.583 li
258.083 239 mo
259.5 238.417 li
257.25 239.5 mo
258.083 239 li
256.75 239.833 mo
257.25 239.5 li
255.333 240.5 mo
256.75 239.833 li
253.917 241.083 mo
255.333 240.5 li
252.5 241.583 mo
253.917 241.083 li
251.333 242.25 mo
252.5 241.583 li
251.167 242.417 mo
251.333 242.25 li
249.75 243.333 mo
251.167 242.417 li
248.333 244.333 mo
249.75 243.333 li
246.917 244.667 mo
248.333 244.333 li
245.667 245.083 mo
246.917 244.667 li
245.583 245.083 mo
245.667 245.083 li
244.167 245.583 mo
245.583 245.083 li
242.75 246.083 mo
244.167 245.583 li
241.333 246.583 mo
242.75 246.083 li
240 247.083 mo
241.333 246.583 li
238.583 247.583 mo
240 247.083 li
237.167 247.833 mo
238.583 247.583 li
237.167 247.833 mo
237.167 247.833 li
235.75 248.083 mo
237.167 247.833 li
234.333 248.417 mo
235.75 248.083 li
233 248.667 mo
234.333 248.417 li
231.583 248.833 mo
233 248.667 li
230.167 248.917 mo
231.583 248.833 li
228.75 249.083 mo
230.167 248.917 li
227.417 249.25 mo
228.75 249.083 li
226 249.167 mo
227.417 249.25 li
224.583 249.083 mo
226 249.167 li
223.167 249 mo
224.583 249.083 li
221.833 248.917 mo
223.167 249 li
220.417 248.75 mo
221.833 248.917 li
219 248.667 mo
220.417 248.75 li
217.583 248.583 mo
219 248.667 li
216.25 248.333 mo
217.583 248.583 li
214.833 248.083 mo
216.25 248.333 li
213.667 247.833 mo
214.833 248.083 li
213.417 247.833 mo
213.667 247.833 li
212 247.583 mo
213.417 247.833 li
210.667 247.333 mo
212 247.583 li
209.25 246.917 mo
210.667 247.333 li
0.0352941 0 0.956863 0 cmyk
@
346.083 254.667 mo
347.5 254.333 li
344.75 255.083 mo
346.083 254.667 li
343.333 255.583 mo
344.75 255.083 li
341.917 256.083 mo
343.333 255.583 li
341.5 256.25 mo
341.917 256.083 li
340.5 256.583 mo
341.5 256.25 li
339.167 256.833 mo
340.5 256.583 li
337.75 257.083 mo
339.167 256.833 li
336.333 257.25 mo
337.75 257.083 li
334.917 257.5 mo
336.333 257.25 li
333.583 257.667 mo
334.917 257.5 li
332.167 257.917 mo
333.583 257.667 li
330.75 257.833 mo
332.167 257.917 li
329.333 257.75 mo
330.75 257.833 li
328 257.583 mo
329.333 257.75 li
326.583 257.417 mo
328 257.583 li
325.167 257.25 mo
326.583 257.417 li
323.75 257.083 mo
325.167 257.25 li
322.417 256.917 mo
323.75 257.083 li
321 256.75 mo
322.417 256.917 li
319.583 256.417 mo
321 256.75 li
319.167 256.25 mo
319.583 256.417 li
318.167 255.917 mo
319.167 256.25 li
316.75 255.333 mo
318.167 255.917 li
315.417 254.75 mo
316.75 255.333 li
314 254.167 mo
315.417 254.75 li
312.583 253.583 mo
314 254.167 li
312.333 253.417 mo
312.583 253.583 li
311.167 252.667 mo
312.333 253.417 li
309.833 251.75 mo
311.167 252.667 li
308.417 250.833 mo
309.833 251.75 li
308.083 250.667 mo
308.417 250.833 li
307 250.083 mo
308.083 250.667 li
305.583 249.417 mo
307 250.083 li
304.25 248.083 mo
305.583 249.417 li
304 247.833 mo
304.25 248.083 li
302.833 246.417 mo
304 247.833 li
301.75 245.083 mo
302.833 246.417 li
301.417 244.75 mo
301.75 245.083 li
300 243.5 mo
301.417 244.75 li
298.667 242.5 mo
300 243.5 li
298.333 242.25 mo
298.667 242.5 li
297.25 241.667 mo
298.333 242.25 li
295.833 240.25 mo
297.25 241.667 li
295.167 239.5 mo
295.833 240.25 li
294.417 238.583 mo
295.167 239.5 li
293.083 236.917 mo
294.417 238.583 li
292.833 236.667 mo
293.083 236.917 li
291.667 236.417 mo
292.833 236.667 li
291.25 236.667 mo
291.667 236.417 li
290.25 237.667 mo
291.25 236.667 li
288.833 237.5 mo
290.25 237.667 li
287.417 237.333 mo
288.833 237.5 li
286.083 237.167 mo
287.417 237.333 li
284.667 237.083 mo
286.083 237.167 li
283.25 236.917 mo
284.667 237.083 li
281.833 236.833 mo
283.25 236.917 li
280.75 236.667 mo
281.833 236.833 li
280.5 236.667 mo
280.75 236.667 li
279.083 236.5 mo
280.5 236.667 li
277.667 236.417 mo
279.083 236.5 li
276.25 236.25 mo
277.667 236.417 li
274.917 236.333 mo
276.25 236.25 li
273.5 236.583 mo
274.917 236.333 li
272.667 236.667 mo
273.5 236.583 li
272.083 236.75 mo
272.667 236.667 li
270.667 237 mo
272.083 236.75 li
269.333 237.25 mo
270.667 237 li
267.917 237.333 mo
269.333 237.25 li
266.5 237.333 mo
267.917 237.333 li
265.083 236.667 mo
266.5 237.333 li
263.667 237.667 mo
265.083 236.667 li
262.333 238.583 mo
263.667 237.667 li
260.917 239.5 mo
262.333 238.583 li
260.917 239.5 mo
260.917 239.5 li
259.5 241.417 mo
260.917 239.5 li
258.5 242.25 mo
259.5 241.417 li
258.083 242.583 mo
258.5 242.25 li
256.75 243.75 mo
258.083 242.583 li
255.333 244.917 mo
256.75 243.75 li
255 245.083 mo
255.333 244.917 li
253.917 246 mo
255 245.083 li
252.5 247.167 mo
253.917 246 li
251.667 247.833 mo
252.5 247.167 li
251.167 248.333 mo
251.667 247.833 li
249.75 249.5 mo
251.167 248.333 li
248.417 250.667 mo
249.75 249.5 li
248.333 250.75 mo
248.417 250.667 li
246.917 252 mo
248.333 250.75 li
245.583 252.917 mo
246.917 252 li
244.167 253.417 mo
245.583 252.917 li
244.167 253.417 mo
244.167 253.417 li
242.75 254 mo
244.167 253.417 li
241.333 254.667 mo
242.75 254 li
240 255.25 mo
241.333 254.667 li
238.583 255.833 mo
240 255.25 li
237.5 256.25 mo
238.583 255.833 li
237.167 256.333 mo
237.5 256.25 li
235.75 256.667 mo
237.167 256.333 li
234.333 256.917 mo
235.75 256.667 li
233 257.333 mo
234.333 256.917 li
231.583 257.5 mo
233 257.333 li
230.167 257.583 mo
231.583 257.5 li
228.75 257.75 mo
230.167 257.583 li
227.417 257.917 mo
228.75 257.75 li
226 257.833 mo
227.417 257.917 li
224.583 257.75 mo
226 257.833 li
223.167 257.667 mo
224.583 257.75 li
221.833 257.583 mo
223.167 257.667 li
220.417 257.583 mo
221.833 257.583 li
219 257.25 mo
220.417 257.583 li
217.583 256.917 mo
219 257.25 li
216.25 256.5 mo
217.583 256.917 li
215 256.25 mo
216.25 256.5 li
214.833 256.25 mo
215 256.25 li
213.417 255.583 mo
214.833 256.25 li
212 255.167 mo
213.417 255.583 li
210.667 254.583 mo
212 255.167 li
209.25 254.167 mo
210.667 254.583 li
0 0.266667 1 0 cmyk
@
346.083 264.583 mo
347.5 263.667 li
346 264.667 mo
346.083 264.583 li
344.75 265.167 mo
346 264.667 li
343.333 265.833 mo
344.75 265.167 li
341.917 266.5 mo
343.333 265.833 li
340.5 266.917 mo
341.917 266.5 li
339.167 267.25 mo
340.5 266.917 li
338.667 267.417 mo
339.167 267.25 li
337.75 267.667 mo
338.667 267.417 li
336.333 268.083 mo
337.75 267.667 li
334.917 268.5 mo
336.333 268.083 li
333.583 268.75 mo
334.917 268.5 li
332.167 268.917 mo
333.583 268.75 li
330.75 269 mo
332.167 268.917 li
329.333 269 mo
330.75 269 li
328 269 mo
329.333 269 li
326.583 268.917 mo
328 269 li
325.167 268.917 mo
326.583 268.917 li
323.75 268.833 mo
325.167 268.917 li
322.417 268.667 mo
323.75 268.833 li
321 268.583 mo
322.417 268.667 li
319.583 268 mo
321 268.583 li
318.583 267.417 mo
319.583 268 li
318.167 267.25 mo
318.583 267.417 li
316.75 266.583 mo
318.167 267.25 li
315.417 266 mo
316.75 266.583 li
314 265.417 mo
315.417 266 li
312.583 264.667 mo
314 265.417 li
312.5 264.667 mo
312.583 264.667 li
311.167 263.583 mo
312.5 264.667 li
309.833 262.417 mo
311.167 263.583 li
309.083 261.833 mo
309.833 262.417 li
308.417 261.25 mo
309.083 261.833 li
307 259.667 mo
308.417 261.25 li
306.583 259 mo
307 259.667 li
305.583 258.25 mo
306.583 259 li
304.25 256.917 mo
305.583 258.25 li
303.583 256.25 mo
304.25 256.917 li
302.833 254.833 mo
303.583 256.25 li
302.333 253.417 mo
302.833 254.833 li
301.417 251.75 mo
302.333 253.417 li
300.833 250.667 mo
301.417 251.75 li
300 249.5 mo
300.833 250.667 li
299.083 247.833 mo
300 249.5 li
298.667 247.417 mo
299.083 247.833 li
297.25 245.583 mo
298.667 247.417 li
296.917 245.083 mo
297.25 245.583 li
295.833 244.167 mo
296.917 245.083 li
294.417 242.583 mo
295.833 244.167 li
294.167 242.25 mo
294.417 242.583 li
293.083 240.917 mo
294.167 242.25 li
291.667 239.5 mo
293.083 240.917 li
291.583 239.5 mo
291.667 239.5 li
290.25 238.833 mo
291.583 239.5 li
288.833 238.75 mo
290.25 238.833 li
287.417 238.583 mo
288.833 238.75 li
286.083 238.5 mo
287.417 238.583 li
284.667 238.333 mo
286.083 238.5 li
283.25 238.167 mo
284.667 238.333 li
281.833 238.083 mo
283.25 238.167 li
280.5 237.917 mo
281.833 238.083 li
279.083 237.75 mo
280.5 237.917 li
277.667 237.667 mo
279.083 237.75 li
276.25 237.5 mo
277.667 237.667 li
274.917 237.583 mo
276.25 237.5 li
273.5 237.833 mo
274.917 237.583 li
272.083 238.083 mo
273.5 237.833 li
270.667 238.25 mo
272.083 238.083 li
269.333 238.417 mo
270.667 238.25 li
267.917 238.417 mo
269.333 238.417 li
266.5 238.25 mo
267.917 238.417 li
265.083 238.667 mo
266.5 238.25 li
263.917 239.5 mo
265.083 238.667 li
263.667 239.917 mo
263.917 239.5 li
262.333 242.25 mo
263.667 239.917 li
262.333 242.25 mo
262.333 242.25 li
260.917 244 mo
262.333 242.25 li
259.583 245.083 mo
260.917 244 li
259.5 245.333 mo
259.583 245.083 li
258.5 247.833 mo
259.5 245.333 li
258.083 248.833 mo
258.5 247.833 li
256.75 250.583 mo
258.083 248.833 li
256.667 250.667 mo
256.75 250.583 li
255.333 252.083 mo
256.667 250.667 li
253.917 253.333 mo
255.333 252.083 li
253.75 253.417 mo
253.917 253.333 li
252.5 256.083 mo
253.75 253.417 li
252.417 256.25 mo
252.5 256.083 li
251.167 258.5 mo
252.417 256.25 li
250.75 259 mo
251.167 258.5 li
249.75 260.167 mo
250.75 259 li
248.333 261.333 mo
249.75 260.167 li
247.667 261.833 mo
248.333 261.333 li
246.917 262.417 mo
247.667 261.833 li
245.583 263.333 mo
246.917 262.417 li
244.167 264.333 mo
245.583 263.333 li
243.75 264.667 mo
244.167 264.333 li
242.75 265.583 mo
243.75 264.667 li
241.333 266.083 mo
242.75 265.583 li
240 266.5 mo
241.333 266.083 li
238.583 266.833 mo
240 266.5 li
237.167 267.25 mo
238.583 266.833 li
236.5 267.417 mo
237.167 267.25 li
235.75 267.75 mo
236.5 267.417 li
234.333 268.25 mo
235.75 267.75 li
233 268.667 mo
234.333 268.25 li
231.583 269.083 mo
233 268.667 li
230.167 269.167 mo
231.583 269.083 li
228.75 269.083 mo
230.167 269.167 li
227.417 268.917 mo
228.75 269.083 li
226 268.833 mo
227.417 268.917 li
224.583 268.667 mo
226 268.833 li
223.167 268.583 mo
224.583 268.667 li
221.833 268.417 mo
223.167 268.583 li
220.417 268.333 mo
221.833 268.417 li
219 267.917 mo
220.417 268.333 li
217.75 267.417 mo
219 267.917 li
217.583 267.333 mo
217.75 267.417 li
216.25 266.833 mo
217.583 267.333 li
214.833 266.333 mo
216.25 266.833 li
213.417 265.833 mo
214.833 266.333 li
212 265.25 mo
213.417 265.833 li
211 264.667 mo
212 265.25 li
210.667 264.5 mo
211 264.667 li
209.25 263.75 mo
210.667 264.5 li
0 0.615686 1 0 cmyk
@
346.083 279.75 mo
347.5 278.667 li
344.75 280.583 mo
346.083 279.75 li
343.333 281.25 mo
344.75 280.583 li
343.083 281.417 mo
343.333 281.25 li
341.917 282.083 mo
343.083 281.417 li
340.5 283 mo
341.917 282.083 li
339.167 283.75 mo
340.5 283 li
338 284.167 mo
339.167 283.75 li
337.75 284.333 mo
338 284.167 li
336.333 285 mo
337.75 284.333 li
334.917 285.417 mo
336.333 285 li
333.583 285.583 mo
334.917 285.417 li
332.167 285.833 mo
333.583 285.583 li
330.75 286 mo
332.167 285.833 li
329.333 286.167 mo
330.75 286 li
328 286.333 mo
329.333 286.167 li
326.583 286.5 mo
328 286.333 li
325.167 286.583 mo
326.583 286.5 li
323.75 286.667 mo
325.167 286.583 li
322.417 286.75 mo
323.75 286.667 li
321 286.75 mo
322.417 286.75 li
319.583 286.5 mo
321 286.75 li
318.167 286.167 mo
319.583 286.5 li
316.75 285.5 mo
318.167 286.167 li
315.417 284.833 mo
316.75 285.5 li
314.083 284.167 mo
315.417 284.833 li
314 284.167 mo
314.083 284.167 li
312.583 283.5 mo
314 284.167 li
311.167 282.833 mo
312.583 283.5 li
309.833 282.25 mo
311.167 282.833 li
308.417 281.417 mo
309.833 282.25 li
308.25 281.417 mo
308.417 281.417 li
307 281.083 mo
308.25 281.417 li
305.583 280.417 mo
307 281.083 li
304.25 279 mo
305.583 280.417 li
303.917 278.583 mo
304.25 279 li
302.833 277.25 mo
303.917 278.583 li
301.667 275.833 mo
302.833 277.25 li
301.417 275.5 mo
301.667 275.833 li
300 273.75 mo
301.417 275.5 li
299.417 273 mo
300 273.75 li
298.667 270.25 mo
299.417 273 li
298.667 270.167 mo
298.667 270.25 li
297.25 267.583 mo
298.667 270.167 li
297.167 267.417 mo
297.25 267.583 li
297.083 264.667 mo
297.167 267.417 li
297.083 261.833 mo
297.083 264.667 li
296.25 259 mo
297.083 261.833 li
295.833 256.417 mo
296.25 259 li
295.833 256.25 mo
295.833 256.417 li
295.417 253.417 mo
295.833 256.25 li
294.5 250.667 mo
295.417 253.417 li
294.417 250.5 mo
294.5 250.667 li
293.5 247.833 mo
294.417 250.5 li
293.667 245.083 mo
293.5 247.833 li
293.083 244.333 mo
293.667 245.083 li
292.083 242.25 mo
293.083 244.333 li
291.667 241.667 mo
292.083 242.25 li
290.25 240.25 mo
291.667 241.667 li
288.833 239.917 mo
290.25 240.25 li
287.417 239.917 mo
288.833 239.917 li
286.083 239.75 mo
287.417 239.917 li
284.667 239.583 mo
286.083 239.75 li
283.583 239.5 mo
284.667 239.583 li
283.25 239.417 mo
283.583 239.5 li
281.833 239.333 mo
283.25 239.417 li
280.5 239.167 mo
281.833 239.333 li
279.083 239.083 mo
280.5 239.167 li
277.667 238.917 mo
279.083 239.083 li
276.25 238.75 mo
277.667 238.917 li
274.917 238.833 mo
276.25 238.75 li
273.5 239.083 mo
274.917 238.833 li
272.083 239.333 mo
273.5 239.083 li
270.917 239.5 mo
272.083 239.333 li
270.667 239.5 mo
270.917 239.5 li
269.333 239.667 mo
270.667 239.5 li
267.917 239.583 mo
269.333 239.667 li
267.75 239.5 mo
267.917 239.583 li
266.5 239.167 mo
267.75 239.5 li
265.917 239.5 mo
266.5 239.167 li
265.083 241.417 mo
265.917 239.5 li
264.667 242.25 mo
265.083 241.417 li
263.667 244.667 mo
264.667 242.25 li
263.417 245.083 mo
263.667 244.667 li
262.75 247.833 mo
263.417 245.083 li
262.333 249 mo
262.75 247.833 li
261.75 250.667 mo
262.333 249 li
261.75 253.417 mo
261.75 250.667 li
262.25 256.25 mo
261.75 253.417 li
261.083 259 mo
262.25 256.25 li
260.917 259.5 mo
261.083 259 li
260.167 261.833 mo
260.917 259.5 li
259.833 264.667 mo
260.167 261.833 li
259.667 267.417 mo
259.833 264.667 li
259.5 267.75 mo
259.667 267.417 li
258.167 270.25 mo
259.5 267.75 li
258.083 270.333 mo
258.167 270.25 li
257.083 273 mo
258.083 270.333 li
256.75 273.917 mo
257.083 273 li
255.917 275.833 mo
256.75 273.917 li
255.333 276.917 mo
255.917 275.833 li
254.333 278.583 mo
255.333 276.917 li
253.917 279.167 mo
254.333 278.583 li
252.5 280.583 mo
253.917 279.167 li
251.417 281.417 mo
252.5 280.583 li
251.167 281.583 mo
251.417 281.417 li
249.75 282.167 mo
251.167 281.583 li
248.333 282.667 mo
249.75 282.167 li
246.917 283.25 mo
248.333 282.667 li
245.583 283.833 mo
246.917 283.25 li
244.75 284.167 mo
245.583 283.833 li
244.167 284.417 mo
244.75 284.167 li
242.75 284.833 mo
244.167 284.417 li
241.333 285.167 mo
242.75 284.833 li
240 285.417 mo
241.333 285.167 li
238.583 285.667 mo
240 285.417 li
237.167 286.167 mo
238.583 285.667 li
235.75 286.25 mo
237.167 286.167 li
234.333 286.333 mo
235.75 286.25 li
233 286.333 mo
234.333 286.333 li
231.583 286.417 mo
233 286.333 li
230.167 286.5 mo
231.583 286.417 li
228.75 286.417 mo
230.167 286.5 li
227.417 286.25 mo
228.75 286.417 li
226 286 mo
227.417 286.25 li
224.583 285.75 mo
226 286 li
223.167 285.5 mo
224.583 285.75 li
221.833 285.25 mo
223.167 285.5 li
220.417 284.917 mo
221.833 285.25 li
219 284.417 mo
220.417 284.917 li
218.25 284.167 mo
219 284.417 li
217.583 283.917 mo
218.25 284.167 li
216.25 282.917 mo
217.583 283.917 li
214.833 282 mo
216.25 282.917 li
213.833 281.417 mo
214.833 282 li
213.417 281.167 mo
213.833 281.417 li
212 280.333 mo
213.417 281.167 li
210.667 279.417 mo
212 280.333 li
209.583 278.583 mo
210.667 279.417 li
209.25 278.417 mo
209.583 278.583 li
0 0.831372 1 0 cmyk
@
266.5 242.25 mo
266.5 242.167 li
265.917 245.083 mo
266.5 242.25 li
266.083 247.833 mo
265.917 245.083 li
265.75 250.667 mo
266.083 247.833 li
266.167 253.417 mo
265.75 250.667 li
266.5 254.75 mo
266.167 253.417 li
267.25 256.25 mo
266.5 254.75 li
267.917 257.417 mo
267.25 256.25 li
268.833 259 mo
267.917 257.417 li
269.333 259.667 mo
268.833 259 li
270.667 261.583 mo
269.333 259.667 li
271.75 261.833 mo
270.667 261.583 li
272.083 261.917 mo
271.75 261.833 li
273.5 262.25 mo
272.083 261.917 li
274.917 262.583 mo
273.5 262.25 li
276.25 263.25 mo
274.917 262.583 li
277.667 264 mo
276.25 263.25 li
279.083 264 mo
277.667 264 li
280.5 263.667 mo
279.083 264 li
281.833 263.167 mo
280.5 263.667 li
283.25 262.25 mo
281.833 263.167 li
283.667 261.833 mo
283.25 262.25 li
284.667 261.333 mo
283.667 261.833 li
286.083 260.333 mo
284.667 261.333 li
287.417 259.25 mo
286.083 260.333 li
287.75 259 mo
287.417 259.25 li
288.833 258.167 mo
287.75 259 li
289.667 256.25 mo
288.833 258.167 li
290.25 254.167 mo
289.667 256.25 li
290.5 253.417 mo
290.25 254.167 li
290.333 250.667 mo
290.5 253.417 li
290.417 247.833 mo
290.333 250.667 li
291.083 245.083 mo
290.417 247.833 li
290.667 242.25 mo
291.083 245.083 li
290.25 241.833 mo
290.667 242.25 li
288.833 241.083 mo
290.25 241.833 li
287.417 241.417 mo
288.833 241.083 li
286.083 241.167 mo
287.417 241.417 li
284.667 240.917 mo
286.083 241.167 li
283.25 240.75 mo
284.667 240.917 li
281.833 240.583 mo
283.25 240.75 li
280.5 240.417 mo
281.833 240.583 li
279.083 240.333 mo
280.5 240.417 li
277.667 240.167 mo
279.083 240.333 li
276.25 240 mo
277.667 240.167 li
274.917 240.167 mo
276.25 240 li
273.5 240.333 mo
274.917 240.167 li
272.083 240.583 mo
273.5 240.333 li
270.667 240.667 mo
272.083 240.583 li
269.333 240.75 mo
270.667 240.667 li
267.917 241.167 mo
269.333 240.75 li
266.5 242.167 mo
267.917 241.167 li
346.083 313.667 mo
347.5 313.167 li
344.75 314.083 mo
346.083 313.667 li
343.333 314.417 mo
344.75 314.083 li
341.917 314.917 mo
343.333 314.417 li
341.833 314.917 mo
341.917 314.917 li
340.5 315.333 mo
341.833 314.917 li
339.167 315.75 mo
340.5 315.333 li
337.75 316.083 mo
339.167 315.75 li
336.333 316.417 mo
337.75 316.083 li
334.917 316.667 mo
336.333 316.417 li
333.583 316.833 mo
334.917 316.667 li
332.167 317.083 mo
333.583 316.833 li
330.75 317.333 mo
332.167 317.083 li
329.333 317.5 mo
330.75 317.333 li
328 317.667 mo
329.333 317.5 li
327.583 317.75 mo
328 317.667 li
326.583 317.833 mo
327.583 317.75 li
325.167 318 mo
326.583 317.833 li
323.75 318 mo
325.167 318 li
322.417 318.083 mo
323.75 318 li
321 318.167 mo
322.417 318.083 li
319.583 318.25 mo
321 318.167 li
318.167 318.25 mo
319.583 318.25 li
316.75 318.25 mo
318.167 318.25 li
315.417 318.333 mo
316.75 318.25 li
314 318.333 mo
315.417 318.333 li
312.583 318.333 mo
314 318.333 li
311.167 318.333 mo
312.583 318.333 li
309.833 318.167 mo
311.167 318.333 li
308.417 318.083 mo
309.833 318.167 li
307 318 mo
308.417 318.083 li
305.583 317.917 mo
307 318 li
304.25 317.917 mo
305.583 317.917 li
302.833 317.917 mo
304.25 317.917 li
301.417 317.917 mo
302.833 317.917 li
300 317.833 mo
301.417 317.917 li
298.75 317.75 mo
300 317.833 li
298.667 317.667 mo
298.75 317.75 li
297.25 317.583 mo
298.667 317.667 li
295.833 317.5 mo
297.25 317.583 li
294.417 317.417 mo
295.833 317.5 li
293.083 317.333 mo
294.417 317.417 li
291.667 317.25 mo
293.083 317.333 li
290.25 317.167 mo
291.667 317.25 li
288.833 317.083 mo
290.25 317.167 li
287.417 317 mo
288.833 317.083 li
286.083 316.917 mo
287.417 317 li
284.667 316.917 mo
286.083 316.917 li
283.25 316.833 mo
284.667 316.917 li
281.833 316.833 mo
283.25 316.833 li
280.5 316.75 mo
281.833 316.833 li
279.083 316.75 mo
280.5 316.75 li
277.667 316.75 mo
279.083 316.75 li
276.25 316.75 mo
277.667 316.75 li
274.917 316.75 mo
276.25 316.75 li
273.5 316.833 mo
274.917 316.75 li
272.083 316.833 mo
273.5 316.833 li
270.667 316.917 mo
272.083 316.833 li
269.333 316.917 mo
270.667 316.917 li
267.917 317 mo
269.333 316.917 li
266.5 317.083 mo
267.917 317 li
265.083 317.25 mo
266.5 317.083 li
263.667 317.333 mo
265.083 317.25 li
262.333 317.417 mo
263.667 317.333 li
260.917 317.583 mo
262.333 317.417 li
259.5 317.667 mo
260.917 317.583 li
258.083 317.667 mo
259.5 317.667 li
257.583 317.75 mo
258.083 317.667 li
256.75 317.75 mo
257.583 317.75 li
255.333 317.75 mo
256.75 317.75 li
253.917 317.833 mo
255.333 317.75 li
252.5 317.833 mo
253.917 317.833 li
251.167 317.833 mo
252.5 317.833 li
249.75 317.917 mo
251.167 317.833 li
248.333 318.083 mo
249.75 317.917 li
246.917 318.25 mo
248.333 318.083 li
245.583 318.333 mo
246.917 318.25 li
244.167 318.417 mo
245.583 318.333 li
242.75 318.417 mo
244.167 318.417 li
241.333 318.5 mo
242.75 318.417 li
240 318.417 mo
241.333 318.5 li
238.583 318.333 mo
240 318.417 li
237.167 318.25 mo
238.583 318.333 li
235.75 318.25 mo
237.167 318.25 li
234.333 318.167 mo
235.75 318.25 li
233 318 mo
234.333 318.167 li
231.583 317.917 mo
233 318 li
230.167 317.833 mo
231.583 317.917 li
229.25 317.75 mo
230.167 317.833 li
228.75 317.667 mo
229.25 317.75 li
227.417 317.5 mo
228.75 317.667 li
226 317.333 mo
227.417 317.5 li
224.583 317.083 mo
226 317.333 li
223.167 316.917 mo
224.583 317.083 li
221.833 316.667 mo
223.167 316.917 li
220.417 316.417 mo
221.833 316.667 li
219 316.083 mo
220.417 316.417 li
217.583 315.75 mo
219 316.083 li
216.25 315.417 mo
217.583 315.75 li
214.833 315.167 mo
216.25 315.417 li
213.75 314.917 mo
214.833 315.167 li
213.417 314.833 mo
213.75 314.917 li
212 314.417 mo
213.417 314.833 li
210.667 314 mo
212 314.417 li
209.25 313.583 mo
210.667 314 li
0 0.956863 1 0 cmyk
@
268.667 242.25 mo
269.333 241.917 li
268.333 245.083 mo
268.667 242.25 li
268.417 247.833 mo
268.333 245.083 li
269.333 249.75 mo
268.417 247.833 li
270.417 250.667 mo
269.333 249.75 li
270.667 251 mo
270.417 250.667 li
272.083 252.5 mo
270.667 251 li
273.333 253.417 mo
272.083 252.5 li
273.5 253.667 mo
273.333 253.417 li
274.917 255.333 mo
273.5 253.667 li
276.083 256.25 mo
274.917 255.333 li
276.25 256.417 mo
276.083 256.25 li
277.667 257 mo
276.25 256.417 li
279.083 256.5 mo
277.667 257 li
279.583 256.25 mo
279.083 256.5 li
280.5 255.5 mo
279.583 256.25 li
281.833 254.417 mo
280.5 255.5 li
283 253.417 mo
281.833 254.417 li
283.25 253.333 mo
283 253.417 li
284.667 252.833 mo
283.25 253.333 li
286.083 252.25 mo
284.667 252.833 li
287.083 250.667 mo
286.083 252.25 li
287.417 249.25 mo
287.083 250.667 li
287.75 247.833 mo
287.417 249.25 li
288.5 245.083 mo
287.75 247.833 li
287.417 243.75 mo
288.5 245.083 li
286.083 242.75 mo
287.417 243.75 li
285 242.25 mo
286.083 242.75 li
284.667 242.167 mo
285 242.25 li
283.25 242 mo
284.667 242.167 li
281.833 241.833 mo
283.25 242 li
280.5 241.667 mo
281.833 241.833 li
279.083 241.583 mo
280.5 241.667 li
277.667 241.417 mo
279.083 241.583 li
276.25 241.333 mo
277.667 241.417 li
274.917 241.417 mo
276.25 241.333 li
273.5 241.583 mo
274.917 241.417 li
272.083 241.833 mo
273.5 241.583 li
270.667 241.75 mo
272.083 241.833 li
269.333 241.917 mo
270.667 241.75 li
288.5 242.25 mo
288.833 242.167 li
288.833 243.583 mo
288.5 242.25 li
289.083 242.25 mo
288.833 243.583 li
288.833 242.167 mo
289.083 242.25 li
346.083 361.833 mo
347.5 361.833 li
344.75 361.833 mo
346.083 361.833 li
343.333 361.833 mo
344.75 361.833 li
341.917 361.833 mo
343.333 361.833 li
340.5 361.833 mo
341.917 361.833 li
339.167 361.917 mo
340.5 361.833 li
337.75 361.917 mo
339.167 361.917 li
336.333 361.917 mo
337.75 361.917 li
334.917 362 mo
336.333 361.917 li
333.583 362 mo
334.917 362 li
332.167 362 mo
333.583 362 li
330.75 362.083 mo
332.167 362 li
329.333 362.083 mo
330.75 362.083 li
328 362.167 mo
329.333 362.083 li
326.583 362.167 mo
328 362.167 li
325.167 362.167 mo
326.583 362.167 li
323.75 362.167 mo
325.167 362.167 li
322.417 362.25 mo
323.75 362.167 li
321 362.25 mo
322.417 362.25 li
319.583 362.25 mo
321 362.25 li
318.167 362.25 mo
319.583 362.25 li
316.75 362.25 mo
318.167 362.25 li
315.417 362.25 mo
316.75 362.25 li
314 362.25 mo
315.417 362.25 li
312.583 362.25 mo
314 362.25 li
311.167 362.333 mo
312.583 362.25 li
309.833 362.333 mo
311.167 362.333 li
308.417 362.25 mo
309.833 362.333 li
307 362.25 mo
308.417 362.25 li
305.583 362.25 mo
307 362.25 li
304.25 362.167 mo
305.583 362.25 li
302.833 362.167 mo
304.25 362.167 li
301.417 362.083 mo
302.833 362.167 li
300 362.083 mo
301.417 362.083 li
298.667 362.167 mo
300 362.083 li
297.25 362.167 mo
298.667 362.167 li
295.833 362.167 mo
297.25 362.167 li
294.417 362.167 mo
295.833 362.167 li
293.083 362.167 mo
294.417 362.167 li
291.667 362.083 mo
293.083 362.167 li
290.25 362.083 mo
291.667 362.083 li
288.833 362.083 mo
290.25 362.083 li
287.417 362.083 mo
288.833 362.083 li
286.083 362.083 mo
287.417 362.083 li
284.667 362.083 mo
286.083 362.083 li
283.25 362 mo
284.667 362.083 li
281.833 362 mo
283.25 362 li
280.5 362 mo
281.833 362 li
279.083 362 mo
280.5 362 li
277.667 362 mo
279.083 362 li
276.25 362 mo
277.667 362 li
274.917 361.917 mo
276.25 362 li
273.5 361.917 mo
274.917 361.917 li
272.083 361.917 mo
273.5 361.917 li
270.667 361.917 mo
272.083 361.917 li
269.333 361.917 mo
270.667 361.917 li
267.917 361.917 mo
269.333 361.917 li
266.5 361.917 mo
267.917 361.917 li
265.083 361.917 mo
266.5 361.917 li
263.667 362 mo
265.083 361.917 li
262.333 362 mo
263.667 362 li
260.917 362.083 mo
262.333 362 li
259.5 362.083 mo
260.917 362.083 li
258.083 362.167 mo
259.5 362.083 li
256.75 362.167 mo
258.083 362.167 li
255.333 362.25 mo
256.75 362.167 li
253.917 362.25 mo
255.333 362.25 li
252.5 362.25 mo
253.917 362.25 li
251.167 362.25 mo
252.5 362.25 li
249.75 362.25 mo
251.167 362.25 li
248.333 362.25 mo
249.75 362.25 li
246.917 362.25 mo
248.333 362.25 li
245.583 362.25 mo
246.917 362.25 li
244.167 362.25 mo
245.583 362.25 li
242.75 362.25 mo
244.167 362.25 li
241.333 362.25 mo
242.75 362.25 li
240 362.25 mo
241.333 362.25 li
238.583 362.25 mo
240 362.25 li
237.167 362.25 mo
238.583 362.25 li
235.75 362.25 mo
237.167 362.25 li
234.333 362.25 mo
235.75 362.25 li
233 362.167 mo
234.333 362.25 li
231.583 362.167 mo
233 362.167 li
230.167 362.167 mo
231.583 362.167 li
228.75 362.167 mo
230.167 362.167 li
227.417 362.083 mo
228.75 362.167 li
226 362.083 mo
227.417 362.083 li
224.583 362 mo
226 362.083 li
223.167 362 mo
224.583 362 li
221.833 362 mo
223.167 362 li
220.417 361.917 mo
221.833 362 li
219 361.917 mo
220.417 361.917 li
217.583 361.833 mo
219 361.917 li
216.25 361.833 mo
217.583 361.833 li
214.833 361.833 mo
216.25 361.833 li
213.417 361.833 mo
214.833 361.833 li
212 361.833 mo
213.417 361.833 li
210.667 361.833 mo
212 361.833 li
209.25 361.833 mo
210.667 361.833 li
0.0627451 1 1 0.0117647 cmyk
@
grestore
270.333 245.083 mo
270.667 244.333 li
270.667 246.833 mo
270.333 245.083 li
271.167 247.833 mo
270.667 246.833 li
272.083 248.5 mo
271.167 247.833 li
273.5 249.5 mo
272.083 248.5 li
274.917 250.583 mo
273.5 249.5 li
274.917 250.667 mo
274.917 250.583 li
276.25 252.167 mo
274.917 250.667 li
277.667 252 mo
276.25 252.167 li
279.083 251.417 mo
277.667 252 li
280.5 250.833 mo
279.083 251.417 li
280.833 250.667 mo
280.5 250.833 li
281.833 250.25 mo
280.833 250.667 li
283.25 250.083 mo
281.833 250.25 li
284.667 249.833 mo
283.25 250.083 li
285.917 247.833 mo
284.667 249.833 li
285.833 245.083 mo
285.917 247.833 li
284.667 243.583 mo
285.833 245.083 li
283.25 243.167 mo
284.667 243.583 li
281.833 243.167 mo
283.25 243.167 li
280.5 243.083 mo
281.833 243.167 li
279.083 242.833 mo
280.5 243.083 li
277.667 242.667 mo
279.083 242.833 li
276.25 242.583 mo
277.667 242.667 li
274.917 242.667 mo
276.25 242.583 li
273.5 242.917 mo
274.917 242.667 li
272.083 243.417 mo
273.5 242.917 li
270.667 244.333 mo
272.083 243.417 li
0.207843 1 1 0.14902 cmyk
@
283.25 244.333 mo
284.667 245 li
281.833 244.5 mo
283.25 244.333 li
280.5 244.417 mo
281.833 244.5 li
279.083 244.167 mo
280.5 244.417 li
277.667 243.917 mo
279.083 244.167 li
276.25 243.833 mo
277.667 243.917 li
274.917 243.917 mo
276.25 243.833 li
273.5 244.25 mo
274.917 243.917 li
272.25 245.083 mo
273.5 244.25 li
273.5 246.583 mo
272.25 245.083 li
274.417 247.833 mo
273.5 246.583 li
274.917 248.417 mo
274.417 247.833 li
276.25 249.917 mo
274.917 248.417 li
277.667 249.25 mo
276.25 249.917 li
279.083 248.25 mo
277.667 249.25 li
280 247.833 mo
279.083 248.25 li
280.5 247.583 mo
280 247.833 li
281.833 247.167 mo
280.5 247.583 li
282.583 247.833 mo
281.833 247.167 li
283.25 248.167 mo
282.583 247.833 li
284.667 248.083 mo
283.25 248.167 li
284.833 247.833 mo
284.667 248.083 li
284.75 245.083 mo
284.833 247.833 li
284.667 245 mo
284.75 245.083 li
0.286274 1 1 0.376471 cmyk
@
0 0 0 1 cmyk
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica /Helvetica findfont ct_VMDictPut/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 223{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf207.828 374.414 mo( )sh346.156 97.75 mo( )shgsave
209.25 370.917 mo
347.583 370.917 li
347.583 94.25 li
209.25 94.25 li
209.25 370.917 li
cp
clp
329.917 151.167 mo
326.5 145.917 li
323.5 151.333 li
330.167 307.083 mo
327.333 301.5 li
323.75 306.667 li
329.167 358.833 mo
325.917 353.5 li
322.667 358.833 li
328.5 202.583 mo
324.333 197.833 li
322.167 203.75 li
324.25 248.833 mo
321.583 243.167 li
317.833 248.083 li
304.083 151.167 mo
300.667 145.917 li
297.667 151.417 li
304.333 307.167 mo
301.667 301.5 li
298 306.583 li
303.167 358.833 mo
300 353.5 li
296.75 358.833 li
304.167 201.75 mo
299.25 197.833 li
298.167 204 li
295.833 255.5 mo
295.667 249.25 li
290.25 252.333 li
277 151.25 mo
273.833 145.917 li
270.583 151.25 li
271.75 203.917 mo
270.167 197.833 li
265.583 202.083 li
277 306.833 mo
273.667 301.5 li
270.583 306.917 li
277.25 358.833 mo
274.083 353.5 li
270.833 358.833 li
255.5 253.667 mo
250.75 249.583 li
249.333 255.667 li
249.333 203.917 mo
247.917 197.833 li
243.25 202 li
250.333 151.417 mo
247.417 145.917 li
243.917 151.167 li
250 306.5 mo
246.25 301.5 li
243.583 307.167 li
251.333 358.833 mo
248.083 353.5 li
244.917 358.833 li
227.167 254.667 mo
223.5 249.583 li
220.75 255.167 li
224.917 151.333 mo
221.833 145.917 li
218.5 151.167 li
221.583 203.5 mo
218.833 197.833 li
215.167 202.917 li
224.75 306.75 mo
221.25 301.5 li
218.333 307 li
225.417 358.833 mo
222.167 353.5 li
219 358.833 li
265.333 232.667 mo
265.25 232.917 li
265.167 233.25 li
265.167 233.5 li
265.083 233.25 li
265.083 231.25 li
265.167 231 li
265.25 230.75 li
265.333 230.417 li
265.417 230.167 li
265.5 229.917 li
265.583 229.583 li
265.667 229.333 li
265.75 229.083 li
265.833 228.75 li
265.917 228.5 li
266 228.25 li
266.083 227.917 li
266.167 227.667 li
266.25 227.333 li
266.333 227.083 li
266.5 226.833 li
266.583 226.5 li
266.667 226.25 li
266.833 226 li
266.917 225.667 li
267 225.417 li
267.167 225.25 li
267.333 225 li
267.5 224.833 li
267.583 224.667 li
267.75 224.5 li
267.917 224.333 li
268 224.167 li
268.167 224 li
268.333 223.833 li
268.417 223.667 li
268.583 223.583 li
268.75 223.417 li
268.833 223.25 li
269 223.083 li
269.167 222.917 li
269.25 222.75 li
269.417 222.583 li
269.583 222.5 li
269.5 222.75 li
269.667 222.583 li
269.75 222.5 li
269.667 222.75 li
269.833 222.667 li
270 222.5 li
269.917 222.75 li
270.083 222.667 li
270.167 222.5 li
270.083 222.833 li
270.25 222.667 li
270.417 222.5 li
270.5 222.417 li
270.667 222.25 li
270.833 222.167 li
270.917 222 li
271.083 221.917 li
271.25 221.75 li
271.417 221.667 li
271.5 221.5 li
271.667 221.417 li
271.833 221.25 li
271.917 221.167 li
272.083 221 li
272.25 220.917 li
272.333 220.75 li
272.5 220.667 li
272.667 220.5 li
272.75 220.417 li
272.917 220.25 li
273.083 220.167 li
273.167 220 li
273.333 219.917 li
273.5 219.833 li
273.583 219.667 li
273.583 220 li
273.667 219.833 li
273.833 219.75 li
273.75 220 li
273.917 219.917 li
274 219.833 li
274.167 219.667 li
274.083 220 li
274.25 219.833 li
274.417 219.75 li
274.5 219.667 li
274.417 219.917 li
274.583 219.833 li
274.75 219.75 li
274.667 220 li
274.833 219.917 li
274.917 219.75 li
275.083 219.667 li
275 219.917 li
274.917 220.25 li
274.917 220.5 li
274.833 220.75 li
274.75 221.083 li
274.667 221.333 li
274.583 221.583 li
274.5 221.917 li
274.5 222.167 li
274.417 222.5 li
274.333 222.75 li
274.25 223 li
274.167 223.333 li
274.083 223.583 li
274.083 223.833 li
274 224.167 li
273.917 224.417 li
273.833 224.667 li
273.75 225 li
273.75 225.25 li
343.167 370.25 mo
343.167 347.083 li
343.25 346.75 li
343.25 324.167 li
343.333 323.833 li
343.333 314.083 li
343.417 313.833 li
343.417 307.417 li
343.5 307.083 li
343.5 302.083 li
343.583 301.833 li
343.583 297.583 li
343.667 297.333 li
343.667 294 li
343.75 293.667 li
343.75 290.333 li
343.833 290.083 li
343.833 287 li
343.917 286.75 li
343.917 284.167 li
344 283.917 li
344 281.417 li
344.083 281.167 li
344.083 278.917 li
344.167 278.583 li
344.167 276.667 li
344.25 276.417 li
344.25 274.417 li
344.333 274.167 li
344.333 271.917 li
344.417 271.667 li
344.417 269.083 li
344.5 268.833 li
344.5 266.083 li
344.583 265.75 li
344.583 263 li
344.667 262.667 li
344.667 259.917 li
344.75 259.583 li
344.75 256.583 li
344.833 256.25 li
344.833 253.5 li
344.917 253.167 li
344.917 250.083 li
345 249.833 li
345 245.917 li
345.083 245.667 li
345.083 239.75 li
345.167 239.5 li
345.167 226.083 li
345.083 225.833 li
345.083 219.667 li
345 219.417 li
345 215.75 li
344.917 215.5 li
344.917 212.417 li
344.833 212.083 li
344.833 209.333 li
344.75 209.083 li
344.75 206.25 li
344.667 206 li
344.667 203.75 li
344.583 203.5 li
344.583 200.917 li
344.5 200.667 li
344.5 197.833 li
344.417 197.583 li
344.417 195.083 li
344.333 194.833 li
344.333 192.25 li
344.25 192 li
344.25 189.75 li
344.167 189.5 li
344.167 187.25 li
344.083 187 li
344.083 184.75 li
344 184.5 li
344 181.917 li
343.917 181.667 li
343.917 179.417 li
343.833 179.167 li
343.833 176.083 li
343.75 175.833 li
343.75 172.75 li
343.667 172.417 li
343.667 169.417 li
343.583 169.083 li
343.583 165.5 li
343.5 165.167 li
343.5 160.75 li
343.417 160.417 li
343.417 154.833 li
343.333 154.583 li
343.333 146.75 li
343.25 146.5 li
343.25 133.917 li
343.167 133.583 li
343.167 94.5 li
334.583 370.25 mo
334.583 340.083 li
334.667 339.833 li
334.667 330.583 li
334.75 330.333 li
334.75 324.75 li
334.833 324.417 li
334.833 320.25 li
334.917 320 li
334.917 316.333 li
335 316.083 li
335 313.25 li
335.083 313 li
335.083 310.75 li
335.167 310.5 li
335.167 308.25 li
335.25 307.917 li
335.25 306 li
335.333 305.75 li
335.333 304 li
335.417 303.75 li
335.417 302.083 li
335.5 301.833 li
335.5 300.417 li
335.583 300.167 li
335.583 298.75 li
335.667 298.417 li
335.667 297.333 li
335.75 297.083 li
335.75 295.667 li
335.833 295.417 li
335.833 294.25 li
335.917 294 li
335.917 292.833 li
336 292.583 li
336 291.75 li
336.083 291.5 li
336.083 290.333 li
336.167 290.083 li
336.167 289.25 li
336.25 288.917 li
336.25 287.833 li
336.333 287.583 li
336.333 286.75 li
336.417 286.417 li
336.417 285.583 li
336.5 285.333 li
336.5 284.5 li
336.583 284.167 li
336.583 283.333 li
336.667 283.083 li
336.667 282.25 li
336.75 282 li
336.75 281.167 li
336.833 280.833 li
336.833 280.25 li
336.917 280 li
336.917 279.167 li
337 278.917 li
337 278.083 li
337.083 277.75 li
337.083 276.917 li
337.167 276.667 li
337.167 276.083 li
337.25 275.833 li
337.25 275 li
337.333 274.667 li
337.333 274.167 li
337.417 273.833 li
337.417 273 li
337.5 272.75 li
337.5 271.917 li
337.583 271.667 li
337.583 271.083 li
337.667 270.833 li
337.667 269.917 li
337.75 269.667 li
337.75 269.083 li
337.833 268.833 li
337.833 268 li
337.917 267.75 li
337.917 266.917 li
338 266.583 li
338 265.75 li
338.083 265.5 li
338.083 264.667 li
338.167 264.333 li
338.167 263.833 li
338.25 263.5 li
338.25 262.667 li
338.333 262.417 li
338.333 261.583 li
338.417 261.333 li
338.417 260.417 li
338.5 260.167 li
338.5 259.333 li
338.583 259.083 li
338.583 257.917 li
338.667 257.667 li
338.667 256.833 li
338.75 256.583 li
338.75 255.417 li
338.833 255.167 li
338.833 254 li
338.917 253.75 li
338.917 252.667 li
339 252.333 li
339 251.25 li
339.083 250.917 li
339.083 249.583 li
339.167 249.25 li
339.167 247.917 li
339.25 247.583 li
339.25 245.917 li
339.333 245.667 li
339.333 243.667 li
339.417 243.417 li
339.417 240.917 li
339.5 240.583 li
339.5 236.417 li
339.583 236.167 li
339.583 228.333 li
339.5 228.083 li
339.5 224.167 li
339.417 223.833 li
339.417 221.333 li
339.333 221.083 li
339.333 219.083 li
339.25 218.833 li
339.25 216.833 li
339.167 216.583 li
339.167 215.167 li
339.083 214.917 li
339.083 213.5 li
339 213.25 li
339 212.083 li
338.917 211.833 li
338.917 210.75 li
338.833 210.417 li
338.833 209.333 li
338.75 209.083 li
338.75 207.917 li
338.667 207.667 li
338.667 206.833 li
338.583 206.5 li
338.583 205.417 li
338.5 205.167 li
338.5 204.333 li
338.417 204 li
338.417 203.167 li
338.333 202.917 li
338.333 202.083 li
338.25 201.75 li
338.25 200.917 li
338.167 200.667 li
338.167 200.083 li
338.083 199.833 li
338.083 199 li
338 198.75 li
338 197.833 li
337.917 197.583 li
337.917 197 li
337.833 196.75 li
337.833 195.917 li
337.75 195.667 li
337.75 194.833 li
337.667 194.5 li
337.667 194 li
337.583 193.667 li
337.583 192.833 li
337.5 192.583 li
337.5 191.75 li
337.417 191.417 li
337.417 190.917 li
337.333 190.583 li
337.333 189.75 li
337.25 189.5 li
337.25 188.917 li
337.167 188.667 li
337.167 187.833 li
337.083 187.5 li
337.083 186.667 li
337 186.417 li
337 185.583 li
336.917 185.333 li
336.917 184.75 li
336.833 184.5 li
336.833 183.667 li
336.75 183.333 li
336.75 182.5 li
336.667 182.25 li
336.667 181.417 li
336.583 181.083 li
336.583 180.25 li
336.5 180 li
336.5 179.167 li
336.417 178.917 li
336.417 178 li
336.333 177.75 li
336.333 176.917 li
336.25 176.667 li
336.25 175.5 li
336.167 175.25 li
336.167 174.417 li
336.083 174.167 li
336.083 173 li
336 172.75 li
336 171.917 li
335.917 171.583 li
335.917 170.5 li
335.833 170.25 li
335.833 169.083 li
335.75 168.833 li
335.75 167.417 li
335.667 167.167 li
335.667 166 li
335.583 165.75 li
335.583 164.333 li
335.5 164.083 li
335.5 162.417 li
335.417 162.083 li
335.417 160.417 li
335.333 160.167 li
335.333 158.5 li
335.25 158.167 li
335.25 156.25 li
335.167 156 li
335.167 153.75 li
335.083 153.417 li
335.083 150.917 li
335 150.667 li
335 147.583 li
334.917 147.333 li
334.917 143.667 li
334.833 143.417 li
334.833 138.917 li
334.75 138.667 li
334.75 131.667 li
334.667 131.417 li
334.667 116.333 li
334.583 116 li
334.583 94.5 li
325.917 370.25 mo
325.917 348.75 li
326 348.5 li
326 338.417 li
326.083 338.083 li
326.083 332.5 li
326.167 332.25 li
326.167 328.083 li
326.25 327.75 li
326.25 324.417 li
326.333 324.167 li
326.333 321.333 li
326.417 321.083 li
326.417 318.833 li
326.5 318.583 li
326.5 316.333 li
326.583 316.083 li
326.583 314.333 li
326.667 314.083 li
326.667 312.417 li
326.75 312.167 li
326.75 310.75 li
326.833 310.5 li
326.833 309.083 li
326.917 308.75 li
326.917 307.667 li
327 307.417 li
327 306.25 li
327.083 306 li
327.083 304.917 li
327.167 304.583 li
327.167 303.5 li
327.25 303.167 li
327.25 302.333 li
327.333 302.083 li
327.333 301.25 li
327.417 301 li
327.417 300.167 li
327.5 299.833 li
327.5 299 li
327.583 298.75 li
327.583 298.167 li
327.667 297.917 li
327.667 297.083 li
327.75 296.75 li
327.75 296.25 li
327.833 295.917 li
327.833 295.083 li
327.917 294.833 li
327.917 294.25 li
328 294 li
328 293.417 li
328.083 293.167 li
328.083 292.583 li
328.167 292.333 li
328.167 291.75 li
328.25 291.5 li
328.25 290.917 li
328.333 290.667 li
328.333 290.083 li
328.417 289.75 li
328.417 289.25 li
328.5 288.917 li
328.5 288.667 li
328.583 288.417 li
328.583 287.833 li
328.667 287.583 li
328.667 287 li
328.75 286.75 li
328.75 286.417 li
328.833 286.167 li
328.833 285.583 li
328.917 285.333 li
328.917 284.75 li
329 284.5 li
329 284.167 li
329.083 283.917 li
329.083 283.333 li
329.167 283.083 li
329.167 282.833 li
329.25 282.5 li
329.25 282.25 li
329.333 282 li
329.333 281.417 li
329.417 281.167 li
329.417 280.833 li
329.5 280.583 li
329.5 280 li
329.583 279.75 li
329.583 279.75 mo
329.583 279.417 li
329.667 279.167 li
329.667 278.917 li
329.75 278.583 li
329.75 278.333 li
329.833 278.083 li
329.833 277.5 li
329.917 277.25 li
329.917 276.917 li
330 276.667 li
330 276.417 li
330.083 276.083 li
330.083 275.833 li
330.167 275.5 li
330.167 275 li
330.25 274.667 li
330.25 274.417 li
330.333 274.167 li
330.333 273.833 li
330.417 273.583 li
330.417 273.333 li
330.5 273 li
330.5 272.5 li
330.583 272.167 li
330.583 271.917 li
330.667 271.667 li
330.667 271.333 li
330.75 271.083 li
330.75 270.833 li
330.833 270.5 li
330.833 270.25 li
330.917 269.917 li
330.917 269.417 li
331 269.083 li
331 268.833 li
331.083 268.583 li
331.083 268.25 li
331.167 268 li
331.167 267.75 li
331.25 267.417 li
331.25 266.917 li
331.333 266.583 li
331.333 266.333 li
331.417 266.083 li
331.417 265.75 li
331.5 265.5 li
331.5 265.167 li
331.583 264.917 li
331.583 264.333 li
331.667 264.083 li
331.667 263.833 li
331.75 263.5 li
331.75 263.25 li
331.833 263 li
331.833 262.417 li
331.917 262.167 li
331.917 261.833 li
332 261.583 li
332 261.333 li
332.083 261 li
332.083 260.417 li
332.167 260.167 li
332.167 259.917 li
332.25 259.583 li
332.25 259.083 li
332.333 258.75 li
332.333 258.25 li
332.417 257.917 li
332.417 257.667 li
332.5 257.417 li
332.5 256.833 li
332.583 256.583 li
332.583 256 li
332.667 255.667 li
332.667 255.167 li
332.75 254.833 li
332.75 254.583 li
332.833 254.333 li
332.833 253.75 li
332.917 253.5 li
332.917 252.667 li
333 252.333 li
333 251.833 li
333.083 251.5 li
333.083 250.917 li
333.167 250.667 li
333.167 249.833 li
333.25 249.583 li
333.25 249 li
333.333 248.75 li
333.333 247.917 li
333.417 247.583 li
333.417 246.75 li
333.5 246.5 li
333.5 245.667 li
333.583 245.333 li
333.583 244.25 li
333.667 244 li
333.667 242.583 li
333.75 242.333 li
333.75 240.917 li
333.833 240.583 li
333.833 238.417 li
333.917 238.083 li
333.917 234.167 li
334 233.917 li
334 230.583 li
333.917 230.25 li
333.917 226.333 li
333.833 226.083 li
333.833 224.167 li
333.75 223.833 li
333.75 222.167 li
333.667 221.917 li
333.667 220.75 li
333.583 220.5 li
333.583 219.417 li
333.5 219.083 li
333.5 218 li
333.417 217.75 li
333.417 216.833 li
333.333 216.583 li
333.333 216 li
333.25 215.75 li
333.25 214.917 li
333.167 214.667 li
333.167 213.833 li
333.083 213.5 li
333.083 213 li
333 212.667 li
333 212.083 li
332.917 211.833 li
332.917 211.25 li
332.833 211 li
332.833 210.417 li
332.75 210.167 li
332.75 209.583 li
332.667 209.333 li
332.667 208.75 li
332.583 208.5 li
332.583 207.917 li
332.5 207.667 li
332.5 207.333 li
332.417 207.083 li
332.417 206.5 li
332.333 206.25 li
332.333 205.667 li
332.25 205.417 li
332.25 205.167 li
332.167 204.833 li
332.167 204.333 li
332.083 204 li
332.083 203.75 li
332 203.5 li
332 202.917 li
331.917 202.583 li
331.917 202.333 li
331.833 202.083 li
331.833 201.75 li
331.75 201.5 li
331.75 200.917 li
331.667 200.667 li
331.667 200.417 li
331.583 200.083 li
331.583 199.833 li
331.5 199.583 li
331.5 199 li
331.417 198.75 li
331.417 198.417 li
331.333 198.167 li
331.333 197.833 li
331.25 197.583 li
331.25 197.333 li
331.167 197 li
331.167 196.5 li
331.083 196.167 li
331.083 195.917 li
331 195.667 li
331 195.333 li
330.917 195.083 li
330.917 194.833 li
330.833 194.5 li
330.833 194 li
330.75 193.667 li
330.75 193.417 li
330.667 193.167 li
330.667 192.833 li
330.583 192.583 li
330.583 192.25 li
330.5 192 li
330.5 191.417 li
330.417 191.167 li
330.417 190.917 li
330.333 190.583 li
330.333 190.333 li
330.25 190.083 li
330.25 189.75 li
330.167 189.5 li
330.167 189.25 li
330.083 188.917 li
330.083 188.417 li
330 188.083 li
330 187.833 li
329.917 187.5 li
329.917 187.25 li
329.833 187 li
329.833 186.417 li
329.75 186.167 li
329.75 185.833 li
329.667 185.583 li
329.667 185.333 li
329.583 185 li
329.583 184.5 li
329.5 184.167 li
329.5 183.917 li
329.417 183.667 li
329.417 183.333 li
329.333 183.083 li
329.333 182.5 li
329.25 182.25 li
329.25 181.917 li
329.167 181.667 li
329.167 181.083 li
329.083 180.833 li
329.083 180.583 li
329 180.25 li
329 179.75 li
328.917 179.417 li
328.917 179.167 li
328.833 178.917 li
328.833 178.333 li
328.75 178 li
328.75 177.5 li
328.667 177.167 li
328.667 176.917 li
328.583 176.667 li
328.583 176.083 li
328.5 175.833 li
328.5 175.25 li
328.417 175 li
328.417 174.417 li
328.333 174.167 li
328.333 173.833 li
328.25 173.583 li
328.25 173 li
328.167 172.75 li
328.167 172.167 li
328.083 171.917 li
328.083 171.083 li
328 170.75 li
328 170.25 li
327.917 169.917 li
327.917 169.417 li
327.833 169.083 li
327.833 168.5 li
327.75 168.25 li
327.75 167.417 li
327.667 167.167 li
327.667 166.333 li
327.583 166 li
327.583 165.5 li
327.5 165.167 li
327.5 164.333 li
327.417 164.083 li
327.417 163.25 li
327.333 162.917 li
327.333 161.833 li
327.25 161.583 li
327.25 160.75 li
327.167 160.417 li
327.167 159.333 li
327.083 159 li
327.083 157.917 li
327 157.667 li
327 156.5 li
326.917 156.25 li
326.917 155.167 li
326.833 154.833 li
326.833 153.167 li
326.75 152.917 li
326.75 151.5 li
326.667 151.25 li
326.667 149.583 li
326.583 149.25 li
326.583 147.333 li
326.5 147 li
326.5 144.833 li
326.417 144.5 li
326.417 141.75 li
326.333 141.417 li
326.333 138.333 li
326.25 138.083 li
326.25 133.917 li
326.167 133.583 li
326.167 127.75 li
326.083 127.5 li
326.083 116.333 li
326 116 li
326 94.5 li
317.25 370.25 mo
317.25 355.417 li
317.333 355.167 li
317.333 343.417 li
317.417 343.167 li
317.417 337 li
317.5 336.75 li
317.5 332.25 li
317.583 332 li
317.583 328.333 li
317.667 328.083 li
317.667 325.25 li
317.75 325 li
317.75 322.75 li
317.833 322.5 li
317.833 320.5 li
317.917 320.25 li
317.917 318.25 li
318 318 li
318 316.583 li
318.083 316.333 li
318.083 314.667 li
318.167 314.333 li
318.167 313.25 li
318.25 313 li
318.25 311.833 li
318.333 311.583 li
318.333 310.5 li
318.417 310.167 li
318.417 309.083 li
318.5 308.75 li
318.5 307.917 li
318.583 307.667 li
318.583 306.833 li
318.667 306.583 li
318.667 305.75 li
318.75 305.417 li
318.75 304.583 li
318.833 304.333 li
318.833 303.5 li
318.917 303.167 li
318.917 302.667 li
319 302.333 li
319 301.833 li
319.083 301.5 li
319.083 300.667 li
319.167 300.417 li
319.167 299.833 li
319.25 299.583 li
319.25 299 li
319.333 298.75 li
319.333 298.167 li
319.417 297.917 li
319.417 297.583 li
319.5 297.333 li
319.5 296.75 li
319.583 296.5 li
319.583 295.917 li
319.667 295.667 li
319.667 295.417 li
319.75 295.083 li
319.75 294.5 li
319.833 294.25 li
319.833 294 li
319.917 293.667 li
319.917 293.167 li
320 292.833 li
320 292.583 li
320.083 292.333 li
320.083 292 li
320.167 291.75 li
320.167 291.167 li
320.25 290.917 li
320.25 290.667 li
320.333 290.333 li
320.333 290.083 li
320.417 289.75 li
320.417 289.5 li
320.5 289.25 li
320.5 288.917 li
320.583 288.667 li
320.583 288.417 li
320.667 288.083 li
320.667 287.833 li
320.75 287.583 li
320.75 287.25 li
320.833 287 li
320.833 286.75 li
320.917 286.417 li
320.917 286.167 li
321 285.917 li
321 285.583 li
321.083 285.333 li
321.083 285 li
321.167 284.75 li
321.167 284.5 li
321.25 284.167 li
321.25 283.917 li
321.333 283.667 li
321.333 283.333 li
321.417 283.083 li
321.417 282.833 li
321.5 282.5 li
321.583 282.25 li
321.583 282 li
321.667 281.667 li
321.667 281.417 li
321.75 281.167 li
321.75 280.833 li
321.833 280.583 li
321.917 280.25 li
321.917 280 li
322 279.75 li
322 279.417 li
322.083 279.167 li
322.083 278.917 li
322.167 278.584 li
322.25 278.334 li
322.25 278.084 li
322.333 277.75 li
322.333 277.5 li
322.417 277.25 li
322.5 276.917 li
322.5 276.667 li
322.583 276.417 li
322.583 276.084 li
322.667 275.834 li
322.75 275.5 li
322.75 275.25 li
322.833 275 li
322.917 274.667 li
322.917 274.417 li
323 274.167 li
323 273.834 li
323.083 273.584 li
323.167 273.334 li
323.167 273 li
323.25 272.75 li
323.333 272.5 li
323.333 272.167 li
323.417 271.917 li
323.417 271.667 li
323.5 271.334 li
323.583 271.084 li
323.583 270.834 li
323.667 270.5 li
323.75 270.25 li
323.75 269.917 li
323.833 269.667 li
323.833 269.417 li
323.917 269.084 li
324 268.834 li
324 268.584 li
324.083 268.25 li
324.167 268 li
324.167 267.75 li
324.25 267.417 li
324.333 267.167 li
324.333 266.917 li
324.417 266.584 li
324.417 266.334 li
324.5 266.084 li
324.583 265.75 li
324.583 265.5 li
324.667 265.167 li
324.667 264.917 li
324.75 264.667 li
324.834 264.334 li
324.834 264.084 li
324.917 263.834 li
325 263.5 li
325 263.25 li
325.084 263 li
325.084 262.667 li
325.167 262.417 li
325.25 262.167 li
325.25 261.833 li
325.334 261.584 li
325.334 261.333 li
325.417 261 li
325.5 260.75 li
325.5 260.417 li
325.584 260.167 li
325.584 259.917 li
325.667 259.583 li
325.667 259.333 li
325.75 259.083 li
325.75 259.083 mo
325.833 258.75 li
325.833 258.5 li
325.917 258.25 li
325.917 257.917 li
326 257.667 li
326 257.417 li
326.083 257.083 li
326.083 256.833 li
326.167 256.583 li
326.167 256.25 li
326.25 256 li
326.25 255.667 li
326.333 255.417 li
326.333 255.167 li
326.417 254.833 li
326.417 254.583 li
326.5 254.333 li
326.5 254 li
326.583 253.75 li
326.583 253.5 li
326.667 253.167 li
326.667 252.917 li
326.75 252.667 li
326.75 252.333 li
326.833 252.083 li
326.833 251.833 li
326.917 251.5 li
326.917 250.917 li
327 250.667 li
327 250.417 li
327.083 250.083 li
327.083 249.833 li
327.167 249.583 li
327.167 249 li
327.25 248.75 li
327.25 248.167 li
327.333 247.917 li
327.333 247.583 li
327.417 247.333 li
327.417 246.75 li
327.5 246.5 li
327.5 245.917 li
327.583 245.667 li
327.583 245.083 li
327.667 244.833 li
327.667 244 li
327.75 243.667 li
327.75 242.833 li
327.833 242.583 li
327.833 241.75 li
327.917 241.417 li
327.917 240.333 li
328 240.083 li
328 238.917 li
328.083 238.667 li
328.083 236.667 li
328.167 236.417 li
328.167 228.333 li
328.083 228.083 li
328.083 226.083 li
328 225.833 li
328 224.667 li
327.917 224.417 li
327.917 223.333 li
327.833 223 li
327.833 222.167 li
327.75 221.917 li
327.75 221.083 li
327.667 220.75 li
327.667 220.25 li
327.583 219.917 li
327.583 219.083 li
327.5 218.833 li
327.5 218.25 li
327.417 218 li
327.417 217.417 li
327.333 217.167 li
327.333 216.833 li
327.25 216.583 li
327.25 216 li
327.167 215.75 li
327.167 215.167 li
327.083 214.917 li
327.083 214.667 li
327 214.333 li
327 214.083 li
326.917 213.833 li
326.917 213.25 li
326.833 213 li
326.833 212.667 li
326.75 212.417 li
326.75 212.083 li
326.667 211.833 li
326.667 211.583 li
326.583 211.25 li
326.583 211 li
326.5 210.75 li
326.5 210.417 li
326.417 210.167 li
326.417 209.917 li
326.333 209.583 li
326.333 209.333 li
326.25 209.083 li
326.25 208.75 li
326.167 208.5 li
326.167 208.25 li
326.083 207.917 li
326.083 207.667 li
326 207.333 li
326 207.083 li
325.917 206.833 li
325.917 206.5 li
325.833 206.25 li
325.833 206 li
325.75 205.667 li
325.667 205.417 li
325.667 205.167 li
325.583 204.833 li
325.583 204.583 li
325.5 204.333 li
325.5 204 li
325.417 203.75 li
325.333 203.5 li
325.333 203.167 li
325.25 202.917 li
325.25 202.583 li
325.167 202.333 li
325.167 202.083 li
325.083 201.75 li
325 201.5 li
325 201.25 li
324.917 200.917 li
324.833 200.667 li
324.833 200.417 li
324.75 200.083 li
324.75 199.833 li
324.667 199.583 li
324.583 199.25 li
324.583 199 li
324.5 198.75 li
324.5 198.417 li
324.417 198.167 li
324.333 197.833 li
324.333 197.583 li
324.25 197.333 li
324.167 197 li
324.167 196.75 li
324.083 196.5 li
324.083 196.167 li
324 195.917 li
323.917 195.667 li
323.917 195.333 li
323.833 195.083 li
323.75 194.833 li
323.75 194.5 li
323.667 194.25 li
323.667 194 li
323.583 193.667 li
323.5 193.417 li
323.5 193.167 li
323.417 192.833 li
323.333 192.583 li
323.333 192.25 li
323.25 192 li
323.25 191.75 li
323.167 191.417 li
323.083 191.167 li
323.083 190.917 li
323 190.583 li
322.917 190.333 li
322.917 190.083 li
322.833 189.75 li
322.833 189.5 li
322.75 189.25 li
322.667 188.917 li
322.667 188.667 li
322.583 188.417 li
322.5 188.083 li
322.5 187.833 li
322.417 187.5 li
322.417 187.25 li
322.333 187 li
322.25 186.667 li
322.25 186.417 li
322.167 186.167 li
322.167 185.833 li
322.083 185.583 li
322.083 185.333 li
322 185 li
321.917 184.75 li
321.917 184.5 li
321.833 184.167 li
321.833 183.917 li
321.75 183.667 li
321.75 183.333 li
321.667 183.083 li
321.583 182.75 li
321.583 182.5 li
321.5 182.25 li
321.5 181.917 li
321.417 181.667 li
321.417 181.417 li
321.333 181.083 li
321.333 180.833 li
321.25 180.583 li
321.167 180.25 li
321.167 180 li
321.083 179.75 li
321.083 179.417 li
321 179.167 li
321 178.917 li
320.917 178.583 li
320.917 178.333 li
320.833 178 li
320.833 177.75 li
320.75 177.5 li
320.75 177.167 li
320.667 176.917 li
320.667 176.667 li
320.583 176.333 li
320.583 176.083 li
320.5 175.833 li
320.5 175.5 li
320.417 175.25 li
320.417 174.667 li
320.333 174.417 li
320.333 174.167 li
320.25 173.833 li
320.25 173.583 li
320.167 173.25 li
320.167 173 li
320.083 172.75 li
320.083 172.167 li
320 171.917 li
320 171.583 li
319.917 171.333 li
319.917 171.083 li
319.833 170.75 li
319.833 170.25 li
319.75 169.917 li
319.75 169.667 li
319.667 169.417 li
319.667 168.833 li
319.583 168.5 li
319.583 168 li
319.5 167.667 li
319.5 167.417 li
319.417 167.167 li
319.417 166.583 li
319.333 166.333 li
319.333 165.75 li
319.25 165.5 li
319.25 164.917 li
319.167 164.667 li
319.167 164.083 li
319.083 163.75 li
319.083 162.917 li
319 162.667 li
319 162.083 li
318.917 161.833 li
318.917 161.25 li
318.833 161 li
318.833 160.167 li
318.75 159.917 li
318.75 159 li
318.666 158.75 li
318.666 157.917 li
318.583 157.667 li
318.583 156.833 li
318.5 156.5 li
318.5 155.417 li
318.416 155.167 li
318.416 154.333 li
318.333 154 li
318.333 152.917 li
318.25 152.583 li
318.25 151.25 li
318.166 150.917 li
318.166 149.583 li
318.083 149.25 li
318.083 147.833 li
318 147.583 li
318 145.917 li
317.916 145.667 li
317.916 143.667 li
317.833 143.417 li
317.833 141.167 li
317.75 140.917 li
317.75 138.333 li
317.666 138.083 li
317.666 134.75 li
317.583 134.417 li
317.583 130.583 li
317.5 130.25 li
317.5 124.083 li
317.416 123.833 li
317.416 111 li
317.333 110.75 li
317.333 94.5 li
308.583 370.25 mo
308.583 362.667 li
308.667 362.417 li
308.667 346.5 li
308.75 346.25 li
308.75 339.25 li
308.833 339 li
308.833 333.917 li
308.917 333.667 li
308.917 330 li
309 329.75 li
309 326.917 li
309.083 326.667 li
309.083 324.167 li
309.167 323.833 li
309.167 321.667 li
309.25 321.333 li
309.25 319.667 li
309.333 319.417 li
309.333 317.75 li
309.417 317.417 li
309.417 316.083 li
309.5 315.75 li
309.5 314.333 li
309.583 314.083 li
309.583 313 li
309.667 312.667 li
309.667 311.583 li
309.75 311.333 li
309.75 310.167 li
309.833 309.917 li
309.833 309.083 li
309.917 308.75 li
309.917 307.917 li
310 307.667 li
310 306.833 li
310.083 306.583 li
310.083 305.75 li
310.167 305.417 li
310.167 304.917 li
310.25 304.583 li
310.25 303.75 li
310.333 303.5 li
310.333 302.917 li
310.417 302.667 li
310.417 302.083 li
310.5 301.833 li
310.5 301.25 li
310.583 301 li
310.583 300.417 li
310.667 300.167 li
310.667 299.583 li
310.75 299.25 li
310.75 299 li
310.833 298.75 li
310.833 298.167 li
310.917 297.917 li
310.917 297.333 li
311 297.083 li
311 296.75 li
311.083 296.5 li
311.083 296.25 li
311.167 295.917 li
311.167 295.417 li
311.25 295.083 li
311.25 294.833 li
311.333 294.5 li
311.333 294.25 li
311.417 294 li
311.417 293.667 li
311.5 293.417 li
311.5 292.833 li
311.583 292.583 li
311.583 292.333 li
311.667 292 li
311.667 291.75 li
311.75 291.5 li
311.75 291.167 li
311.833 290.917 li
311.917 290.667 li
311.917 290.333 li
312 290.083 li
312 289.75 li
312.083 289.5 li
312.083 289.25 li
312.167 288.917 li
312.167 288.667 li
312.25 288.417 li
312.25 288.083 li
312.333 287.833 li
312.417 287.583 li
312.417 287.25 li
312.5 287 li
312.5 286.75 li
312.583 286.417 li
312.667 286.167 li
312.667 285.917 li
312.75 285.583 li
312.75 285.333 li
312.833 285 li
312.917 284.75 li
312.917 284.5 li
313 284.167 li
313.083 283.917 li
313.083 283.667 li
313.167 283.333 li
313.25 283.083 li
313.25 282.833 li
313.333 282.5 li
313.417 282.25 li
313.417 282 li
313.5 281.667 li
313.583 281.417 li
313.583 281.167 li
313.667 280.833 li
313.75 280.584 li
313.75 280.25 li
313.833 280 li
313.917 279.75 li
314 279.417 li
314 279.167 li
314.083 278.917 li
314.167 278.584 li
314.25 278.334 li
314.25 278.084 li
314.333 277.75 li
314.417 277.5 li
314.5 277.25 li
314.5 276.917 li
314.583 276.667 li
314.667 276.417 li
314.75 276.084 li
314.75 275.834 li
314.833 275.5 li
314.917 275.25 li
315 275 li
315 274.667 li
315.083 274.417 li
315.167 274.167 li
315.25 273.834 li
315.333 273.584 li
315.333 273.334 li
315.417 273 li
315.5 272.75 li
315.583 272.5 li
315.667 272.167 li
315.75 271.917 li
315.75 271.667 li
315.833 271.334 li
315.917 271.084 li
316 270.834 li
316.083 270.5 li
316.083 270.25 li
316.167 269.917 li
316.25 269.667 li
316.333 269.417 li
316.417 269.084 li
316.5 268.834 li
316.5 268.584 li
316.583 268.25 li
316.667 268 li
316.75 267.75 li
316.833 267.417 li
316.917 267.167 li
316.917 266.917 li
317 266.584 li
317.083 266.334 li
317.167 266.084 li
317.25 265.75 li
317.334 265.5 li
317.334 265.167 li
317.417 264.917 li
317.5 264.667 li
317.584 264.334 li
317.667 264.084 li
317.667 263.834 li
317.75 263.5 li
317.834 263.25 li
317.917 263 li
318 262.667 li
318.084 262.417 li
318.084 262.167 li
318.167 261.834 li
318.25 261.584 li
318.334 261.334 li
318.417 261 li
318.417 260.75 li
318.5 260.417 li
318.584 260.167 li
318.667 259.917 li
318.667 259.584 li
318.75 259.334 li
318.834 259.084 li
318.917 258.75 li
318.917 258.5 li
319 258.25 li
319.084 257.917 li
319.167 257.667 li
319.167 257.417 li
319.25 257.084 li
319.334 256.833 li
319.417 256.583 li
319.417 256.25 li
319.5 256 li
319.584 255.667 li
319.584 255.417 li
319.667 255.167 li
319.75 254.833 li
319.834 254.583 li
319.834 254.333 li
319.917 254 li
320 253.75 li
320 253.5 li
320.084 253.167 li
320.084 252.917 li
320.167 252.667 li
320.25 252.333 li
320.25 252.083 li
320.334 251.833 li
320.417 251.5 li
320.417 251.25 li
320.5 250.917 li
320.5 250.667 li
320.584 250.417 li
320.583 250.417 mo
320.667 250.083 li
320.667 249.833 li
320.75 249.583 li
320.75 249.25 li
320.833 249 li
320.833 248.75 li
320.917 248.417 li
320.917 248.167 li
321 247.917 li
321 247.583 li
321.083 247.333 li
321.083 247.083 li
321.167 246.75 li
321.167 246.5 li
321.25 246.167 li
321.25 245.917 li
321.333 245.667 li
321.333 245.333 li
321.417 245.083 li
321.417 244.5 li
321.5 244.25 li
321.5 244 li
321.583 243.667 li
321.583 243.167 li
321.667 242.833 li
321.667 242.333 li
321.75 242 li
321.75 241.417 li
321.833 241.167 li
321.833 240.583 li
321.917 240.333 li
321.917 239.5 li
322 239.25 li
322 238.417 li
322.083 238.083 li
322.083 236.667 li
322.167 236.417 li
322.167 234.167 li
322.25 233.917 li
322.25 230.25 li
322.167 230 li
322.167 227.75 li
322.083 227.5 li
322.083 226.333 li
322 226.083 li
322 225.25 li
321.917 225 li
321.917 224.167 li
321.833 223.833 li
321.833 223.333 li
321.75 223 li
321.75 222.5 li
321.667 222.167 li
321.667 221.583 li
321.583 221.333 li
321.583 221.083 li
321.5 220.75 li
321.5 220.25 li
321.417 219.917 li
321.417 219.667 li
321.333 219.417 li
321.333 219.083 li
321.25 218.833 li
321.25 218.25 li
321.167 218 li
321.167 217.75 li
321.083 217.417 li
321.083 217.167 li
321 216.833 li
321 216.583 li
320.917 216.333 li
320.917 216 li
320.833 215.75 li
320.75 215.5 li
320.75 215.167 li
320.667 214.917 li
320.667 214.667 li
320.583 214.333 li
320.583 214.083 li
320.5 213.833 li
320.417 213.5 li
320.417 213.25 li
320.333 213 li
320.333 212.667 li
320.25 212.417 li
320.167 212.083 li
320.167 211.833 li
320.083 211.583 li
320 211.25 li
320 211 li
319.917 210.75 li
319.833 210.417 li
319.833 210.167 li
319.75 209.917 li
319.667 209.583 li
319.667 209.333 li
319.583 209.083 li
319.5 208.75 li
319.5 208.5 li
319.417 208.25 li
319.333 207.917 li
319.25 207.667 li
319.25 207.333 li
319.167 207.083 li
319.083 206.833 li
319.083 206.5 li
319 206.25 li
318.917 206 li
318.833 205.667 li
318.75 205.417 li
318.75 205.167 li
318.667 204.833 li
318.583 204.583 li
318.5 204.333 li
318.5 204 li
318.417 203.75 li
318.333 203.5 li
318.25 203.167 li
318.167 202.917 li
318.167 202.583 li
318.083 202.333 li
318 202.083 li
317.917 201.75 li
317.833 201.5 li
317.833 201.25 li
317.75 200.917 li
317.667 200.667 li
317.583 200.417 li
317.5 200.083 li
317.5 199.833 li
317.417 199.583 li
317.333 199.25 li
317.25 199 li
317.167 198.75 li
317.083 198.417 li
317.083 198.167 li
317 197.833 li
316.917 197.583 li
316.833 197.333 li
316.75 197 li
316.75 196.75 li
316.667 196.5 li
316.583 196.167 li
316.5 195.917 li
316.417 195.667 li
316.333 195.333 li
316.333 195.083 li
316.25 194.833 li
316.167 194.5 li
316.083 194.25 li
316 194 li
315.917 193.667 li
315.917 193.417 li
315.833 193.167 li
315.75 192.833 li
315.667 192.583 li
315.583 192.25 li
315.583 192 li
315.5 191.75 li
315.417 191.417 li
315.333 191.167 li
315.25 190.917 li
315.25 190.583 li
315.167 190.333 li
315.083 190.083 li
315 189.75 li
314.917 189.5 li
314.917 189.25 li
314.833 188.917 li
314.75 188.667 li
314.667 188.417 li
314.667 188.083 li
314.583 187.833 li
314.5 187.5 li
314.417 187.25 li
314.417 187 li
314.333 186.667 li
314.25 186.417 li
314.166 186.167 li
314.166 185.833 li
314.083 185.583 li
314 185.333 li
313.916 185 li
313.916 184.75 li
313.833 184.5 li
313.75 184.167 li
313.75 183.917 li
313.666 183.667 li
313.583 183.333 li
313.583 183.083 li
313.5 182.75 li
313.416 182.5 li
313.416 182.25 li
313.333 181.917 li
313.25 181.667 li
313.25 181.417 li
313.166 181.083 li
313.083 180.833 li
313.083 180.583 li
313 180.25 li
312.916 180 li
312.916 179.75 li
312.833 179.417 li
312.75 179.167 li
312.75 178.917 li
312.666 178.583 li
312.666 178.333 li
312.583 178 li
312.5 177.75 li
312.5 177.5 li
312.416 177.167 li
312.416 176.917 li
312.333 176.667 li
312.333 176.333 li
312.25 176.083 li
312.25 175.833 li
312.166 175.5 li
312.083 175.25 li
312.083 175 li
312 174.667 li
312 174.417 li
311.916 174.167 li
311.916 173.833 li
311.833 173.583 li
311.833 173.25 li
311.75 173 li
311.75 172.75 li
311.666 172.417 li
311.666 172.167 li
311.583 171.917 li
311.583 171.583 li
311.5 171.333 li
311.5 170.75 li
311.416 170.5 li
311.416 170.25 li
311.333 169.917 li
311.333 169.667 li
311.25 169.417 li
311.25 168.833 li
311.166 168.5 li
311.166 168.25 li
311.083 168 li
311.083 167.667 li
311 167.417 li
311 166.833 li
310.916 166.583 li
310.916 166 li
310.833 165.75 li
310.833 165.5 li
310.75 165.167 li
310.75 164.667 li
310.666 164.333 li
310.666 163.75 li
310.583 163.5 li
310.583 162.917 li
310.5 162.667 li
310.5 162.083 li
310.416 161.833 li
310.416 161.25 li
310.333 161 li
310.333 160.167 li
310.25 159.917 li
310.25 159.333 li
310.166 159 li
310.166 158.167 li
310.083 157.917 li
310.083 157.083 li
310 156.833 li
310 156 li
309.916 155.667 li
309.916 154.583 li
309.833 154.333 li
309.833 153.417 li
309.75 153.167 li
309.75 152.083 li
309.666 151.75 li
309.666 150.417 li
309.583 150.083 li
309.583 148.667 li
309.5 148.417 li
309.5 147 li
309.416 146.75 li
309.416 145.083 li
309.333 144.833 li
309.333 142.833 li
309.25 142.583 li
309.25 140.333 li
309.166 140.083 li
309.166 137.5 li
309.083 137.25 li
309.083 133.917 li
309 133.583 li
309 129.417 li
308.916 129.167 li
308.916 122.75 li
308.833 122.417 li
308.833 108.167 li
308.75 107.917 li
308.75 94.5 li
300 370.25 mo
300 348.5 li
300.083 348.167 li
300.083 339.25 li
300.167 339 li
300.167 333.333 li
300.25 333.083 li
300.25 328.917 li
300.333 328.583 li
300.333 325.583 li
300.417 325.25 li
300.417 322.5 li
300.5 322.167 li
300.5 320 li
300.583 319.667 li
300.583 318 li
300.667 317.75 li
300.667 316.083 li
300.75 315.75 li
300.75 314.083 li
300.833 313.833 li
300.833 312.417 li
300.917 312.167 li
300.917 311 li
301 310.75 li
301 309.667 li
301.083 309.333 li
301.083 308.25 li
301.167 307.917 li
301.167 307.083 li
301.25 306.833 li
301.25 306 li
301.333 305.75 li
301.333 304.917 li
301.417 304.583 li
301.417 303.75 li
301.5 303.5 li
301.5 302.917 li
301.583 302.667 li
301.583 301.833 li
301.667 301.5 li
301.667 301 li
301.75 300.667 li
301.75 300.167 li
301.833 299.833 li
301.833 299.25 li
301.917 299 li
301.917 298.417 li
302 298.167 li
302 297.917 li
302.083 297.583 li
302.083 297.083 li
302.167 296.75 li
302.167 296.5 li
302.25 296.25 li
302.25 295.667 li
302.333 295.417 li
302.333 295.083 li
302.417 294.833 li
302.417 294.25 li
302.5 294 li
302.5 293.667 li
302.583 293.417 li
302.583 293.167 li
302.667 292.833 li
302.667 292.583 li
302.75 292.333 li
302.75 292 li
302.833 291.75 li
302.833 291.5 li
302.917 291.167 li
302.917 290.917 li
303 290.667 li
303 290.333 li
303.083 290.083 li
303.083 289.75 li
303.167 289.5 li
303.167 289.25 li
303.25 288.917 li
303.333 288.667 li
303.333 288.417 li
303.417 288.083 li
303.417 287.833 li
303.5 287.583 li
303.583 287.25 li
303.583 287 li
303.667 286.75 li
303.667 286.417 li
303.75 286.167 li
303.833 285.917 li
303.833 285.583 li
303.917 285.333 li
304 285 li
304 284.75 li
304.083 284.5 li
304.167 284.167 li
304.167 283.917 li
304.25 283.667 li
304.333 283.333 li
304.333 283.083 li
304.417 282.833 li
304.5 282.5 li
304.583 282.25 li
304.583 282 li
304.667 281.667 li
304.75 281.417 li
304.833 281.167 li
304.833 280.833 li
304.917 280.583 li
305 280.25 li
305.083 280 li
305.083 279.75 li
305.167 279.417 li
305.25 279.167 li
305.333 278.917 li
305.417 278.583 li
305.5 278.333 li
305.5 278.083 li
305.583 277.75 li
305.667 277.5 li
305.75 277.25 li
305.833 276.917 li
305.917 276.667 li
306 276.417 li
306.083 276.083 li
306.083 275.834 li
306.167 275.5 li
306.25 275.25 li
306.333 275 li
306.417 274.667 li
306.5 274.417 li
306.583 274.167 li
306.667 273.833 li
306.75 273.584 li
306.833 273.333 li
306.917 273 li
307 272.75 li
307.083 272.5 li
307.167 272.167 li
307.25 271.917 li
307.333 271.667 li
307.417 271.333 li
307.5 271.083 li
307.583 270.833 li
307.667 270.5 li
307.75 270.25 li
307.833 269.917 li
307.917 269.667 li
308 269.417 li
308.083 269.083 li
308.167 268.833 li
308.25 268.583 li
308.334 268.25 li
308.417 268 li
308.5 267.75 li
308.584 267.417 li
308.667 267.167 li
308.75 266.917 li
308.834 266.583 li
308.917 266.333 li
309.084 266.083 li
309.167 265.75 li
309.25 265.5 li
309.334 265.167 li
309.417 264.917 li
309.5 264.667 li
309.584 264.333 li
309.667 264.083 li
309.75 263.833 li
309.834 263.5 li
309.917 263.25 li
310 263 li
310.084 262.667 li
310.167 262.417 li
310.25 262.167 li
310.334 261.833 li
310.5 261.583 li
310.584 261.333 li
310.667 261 li
310.75 260.75 li
310.834 260.417 li
310.917 260.167 li
311 259.917 li
311.084 259.583 li
311.167 259.333 li
311.25 259.083 li
311.334 258.75 li
311.417 258.5 li
311.5 258.25 li
311.584 257.917 li
311.667 257.667 li
311.75 257.417 li
311.834 257.083 li
311.917 256.833 li
312 256.583 li
312.084 256.25 li
312.167 256 li
312.25 255.667 li
312.334 255.417 li
312.417 255.167 li
312.5 254.833 li
312.584 254.583 li
312.667 254.333 li
312.667 254 li
312.75 253.75 li
312.834 253.5 li
312.917 253.167 li
313 252.917 li
313.084 252.667 li
313.167 252.333 li
313.25 252.083 li
313.334 251.833 li
313.334 251.5 li
313.417 251.25 li
313.5 250.917 li
313.584 250.667 li
313.667 250.417 li
313.667 250.083 li
313.75 249.833 li
313.834 249.583 li
313.917 249.25 li
313.917 249 li
314 248.75 li
314.084 248.417 li
314.167 248.167 li
314.167 247.917 li
314.167 247.917 mo
314.25 247.583 li
314.333 247.333 li
314.333 247.083 li
314.417 246.75 li
314.5 246.5 li
314.5 246.167 li
314.583 245.917 li
314.667 245.667 li
314.667 245.333 li
314.75 245.083 li
314.75 244.833 li
314.833 244.5 li
314.917 244.25 li
314.917 244 li
315 243.667 li
315 243.417 li
315.083 243.167 li
315.083 242.833 li
315.167 242.583 li
315.167 242.333 li
315.25 242 li
315.25 241.75 li
315.333 241.417 li
315.333 240.917 li
315.417 240.583 li
315.417 240.333 li
315.5 240.083 li
315.5 239.5 li
315.583 239.25 li
315.583 238.417 li
315.667 238.083 li
315.667 237.25 li
315.75 237 li
315.75 235.833 li
315.833 235.583 li
315.833 233.667 li
315.917 233.333 li
315.917 231.083 li
315.833 230.833 li
315.833 228.917 li
315.75 228.583 li
315.75 227.5 li
315.667 227.25 li
315.667 226.333 li
315.583 226.083 li
315.583 225.5 li
315.5 225.25 li
315.5 224.667 li
315.417 224.417 li
315.417 223.833 li
315.333 223.583 li
315.333 223.333 li
315.25 223 li
315.25 222.75 li
315.167 222.5 li
315.167 222.167 li
315.083 221.917 li
315.083 221.583 li
315 221.333 li
315 221.083 li
314.917 220.75 li
314.917 220.5 li
314.833 220.25 li
314.833 219.917 li
314.75 219.667 li
314.667 219.417 li
314.667 219.083 li
314.583 218.833 li
314.583 218.583 li
314.5 218.25 li
314.417 218 li
314.417 217.75 li
314.333 217.417 li
314.25 217.167 li
314.25 216.833 li
314.167 216.583 li
314.083 216.333 li
314.083 216 li
314 215.75 li
313.917 215.5 li
313.833 215.167 li
313.833 214.917 li
313.75 214.667 li
313.667 214.333 li
313.583 214.083 li
313.5 213.833 li
313.5 213.5 li
313.417 213.25 li
313.333 213 li
313.25 212.667 li
313.167 212.417 li
313.083 212.083 li
313 211.833 li
313 211.583 li
312.917 211.25 li
312.833 211 li
312.75 210.75 li
312.667 210.417 li
312.583 210.167 li
312.5 209.917 li
312.417 209.583 li
312.333 209.333 li
312.25 209.083 li
312.167 208.75 li
312.083 208.5 li
312 208.25 li
311.917 207.917 li
311.833 207.667 li
311.75 207.333 li
311.667 207.083 li
311.583 206.833 li
311.5 206.5 li
311.417 206.25 li
311.333 206 li
311.25 205.667 li
311.167 205.417 li
311.083 205.167 li
311 204.833 li
310.917 204.583 li
310.833 204.333 li
310.75 204 li
310.667 203.75 li
310.583 203.5 li
310.5 203.167 li
310.417 202.917 li
310.333 202.583 li
310.25 202.333 li
310.167 202.083 li
310.083 201.75 li
310 201.5 li
309.917 201.25 li
309.833 200.917 li
309.667 200.667 li
309.583 200.417 li
309.5 200.083 li
309.417 199.833 li
309.333 199.583 li
309.25 199.25 li
309.167 199 li
309.083 198.75 li
309 198.417 li
308.917 198.167 li
308.833 197.833 li
308.75 197.583 li
308.667 197.333 li
308.583 197 li
308.5 196.75 li
308.417 196.5 li
308.333 196.167 li
308.25 195.917 li
308.083 195.667 li
308 195.333 li
307.917 195.083 li
307.833 194.833 li
307.75 194.5 li
307.667 194.25 li
307.583 194 li
307.5 193.667 li
307.417 193.417 li
307.333 193.167 li
307.25 192.833 li
307.167 192.583 li
307.083 192.25 li
307 192 li
306.916 191.75 li
306.833 191.417 li
306.75 191.167 li
306.666 190.917 li
306.666 190.583 li
306.583 190.333 li
306.5 190.083 li
306.416 189.75 li
306.333 189.5 li
306.25 189.25 li
306.166 188.917 li
306.083 188.667 li
306 188.417 li
305.916 188.083 li
305.833 187.833 li
305.833 187.5 li
305.75 187.25 li
305.666 187 li
305.583 186.667 li
305.5 186.417 li
305.416 186.167 li
305.416 185.833 li
305.333 185.583 li
305.25 185.333 li
305.166 185 li
305.083 184.75 li
305.083 184.5 li
305 184.167 li
304.916 183.917 li
304.833 183.667 li
304.833 183.333 li
304.75 183.083 li
304.666 182.75 li
304.583 182.5 li
304.583 182.25 li
304.5 181.917 li
304.416 181.667 li
304.333 181.417 li
304.333 181.083 li
304.25 180.833 li
304.166 180.583 li
304.166 180.25 li
304.083 180 li
304 179.75 li
304 179.417 li
303.916 179.167 li
303.833 178.917 li
303.833 178.583 li
303.75 178.333 li
303.666 178 li
303.666 177.75 li
303.583 177.5 li
303.583 177.167 li
303.5 176.917 li
303.416 176.667 li
303.416 176.333 li
303.333 176.083 li
303.333 175.833 li
303.25 175.5 li
303.25 175.25 li
303.166 175 li
303.166 174.667 li
303.083 174.417 li
303 174.167 li
303 173.833 li
302.916 173.583 li
302.916 173.25 li
302.833 173 li
302.833 172.417 li
302.75 172.167 li
302.75 171.917 li
302.666 171.583 li
302.666 171.333 li
302.583 171.083 li
302.583 170.75 li
302.5 170.5 li
302.5 170.25 li
302.416 169.917 li
302.416 169.417 li
302.333 169.083 li
302.333 168.833 li
302.25 168.5 li
302.25 168 li
302.166 167.667 li
302.166 167.417 li
302.083 167.167 li
302.083 166.583 li
302 166.333 li
302 165.75 li
301.916 165.5 li
301.916 164.917 li
301.833 164.667 li
301.833 164.083 li
301.75 163.75 li
301.75 163.25 li
301.666 162.917 li
301.666 162.417 li
301.583 162.083 li
301.583 161.25 li
301.5 161 li
301.5 160.417 li
301.416 160.167 li
301.416 159.333 li
301.333 159 li
301.333 158.167 li
301.25 157.917 li
301.25 156.833 li
301.166 156.5 li
301.166 155.667 li
301.083 155.417 li
301.083 154.333 li
301 154 li
301 152.917 li
300.916 152.583 li
300.916 151.25 li
300.833 150.917 li
300.833 149.583 li
300.75 149.25 li
300.75 147.583 li
300.666 147.333 li
300.666 145.333 li
300.583 145.083 li
300.583 142.833 li
300.5 142.583 li
300.5 140.083 li
300.416 139.75 li
300.416 136.667 li
300.333 136.417 li
300.333 131.917 li
300.25 131.667 li
300.25 125.833 li
300.166 125.5 li
300.166 114.083 li
300.083 113.75 li
300.083 94.5 li
291.333 370.25 mo
291.333 349.333 li
291.417 349 li
291.417 336.75 li
291.5 336.417 li
291.5 329.75 li
291.583 329.5 li
291.583 324.417 li
291.667 324.167 li
291.667 320.5 li
291.75 320.25 li
291.75 317.417 li
291.833 317.167 li
291.833 314.667 li
291.917 314.333 li
291.917 312.417 li
292 312.167 li
292 310.167 li
292.083 309.917 li
292.083 308.5 li
292.167 308.25 li
292.167 306.833 li
292.25 306.583 li
292.25 305.167 li
292.333 304.917 li
292.333 303.75 li
292.417 303.5 li
292.417 302.333 li
292.5 302.083 li
292.5 301.25 li
292.583 301 li
292.583 300.167 li
292.667 299.833 li
292.667 299 li
292.75 298.75 li
292.75 297.917 li
292.833 297.583 li
292.833 297.083 li
292.917 296.75 li
292.917 296.25 li
293 295.917 li
293 295.083 li
293.083 294.833 li
293.083 294.25 li
293.167 294 li
293.167 293.417 li
293.25 293.167 li
293.25 292.833 li
293.333 292.583 li
293.333 292 li
293.417 291.75 li
293.417 291.5 li
293.5 291.167 li
293.5 290.667 li
293.583 290.333 li
293.583 290.083 li
293.667 289.75 li
293.667 289.25 li
293.75 288.917 li
293.75 288.667 li
293.833 288.417 li
293.833 288.083 li
293.917 287.833 li
293.917 287.583 li
294 287.25 li
294 287 li
294.083 286.75 li
294.083 286.417 li
294.167 286.167 li
294.167 285.917 li
294.25 285.583 li
294.25 285.333 li
294.333 285 li
294.333 284.75 li
294.417 284.5 li
294.5 284.167 li
294.5 283.917 li
294.583 283.667 li
294.583 283.333 li
294.667 283.083 li
294.75 282.833 li
294.75 282.5 li
294.833 282.25 li
294.833 282 li
294.917 281.667 li
295 281.417 li
295 281.167 li
295.083 280.833 li
295.167 280.583 li
295.25 280.25 li
295.25 280 li
295.333 279.75 li
295.417 279.417 li
295.5 279.167 li
295.5 278.917 li
295.583 278.583 li
295.667 278.333 li
295.75 278.083 li
295.75 277.75 li
295.833 277.5 li
295.917 277.25 li
296 276.917 li
296.083 276.667 li
296.167 276.417 li
296.25 276.083 li
296.25 275.833 li
296.333 275.5 li
296.417 275.25 li
296.5 275 li
296.583 274.667 li
296.667 274.417 li
296.75 274.167 li
296.833 273.833 li
296.917 273.583 li
297 273.333 li
297.083 273 li
297.167 272.75 li
297.25 272.5 li
297.333 272.167 li
297.417 271.917 li
297.5 271.667 li
297.583 271.333 li
297.667 271.083 li
297.75 270.833 li
297.917 270.5 li
298 270.25 li
298.083 269.917 li
298.167 269.667 li
298.25 269.417 li
298.333 269.083 li
298.5 268.833 li
298.583 268.583 li
298.667 268.25 li
298.75 268 li
298.917 267.75 li
299 267.417 li
299.083 267.167 li
299.167 266.917 li
299.333 266.583 li
299.417 266.333 li
299.5 266.083 li
299.667 265.75 li
299.75 265.5 li
299.833 265.167 li
300 264.917 li
300.083 264.667 li
300.167 264.333 li
300.333 264.083 li
300.417 263.833 li
300.5 263.5 li
300.667 263.25 li
300.75 263 li
300.917 262.667 li
301 262.417 li
301.083 262.167 li
301.25 261.833 li
301.333 261.583 li
301.5 261.333 li
301.583 261 li
301.667 260.75 li
301.833 260.417 li
301.917 260.167 li
302.083 259.917 li
302.167 259.583 li
302.25 259.333 li
302.417 259.083 li
302.5 258.75 li
302.667 258.5 li
302.75 258.25 li
302.917 257.917 li
303 257.667 li
303.083 257.417 li
303.25 257.083 li
303.333 256.833 li
303.417 256.583 li
303.583 256.25 li
303.667 256 li
303.833 255.667 li
303.917 255.417 li
304 255.167 li
304.167 254.833 li
304.25 254.583 li
304.333 254.333 li
304.5 254 li
304.583 253.75 li
304.667 253.5 li
304.75 253.167 li
304.917 252.917 li
305 252.667 li
305.083 252.333 li
305.167 252.083 li
305.333 251.833 li
305.417 251.5 li
305.5 251.25 li
305.5 251.25 mo
305.583 250.917 li
305.667 250.667 li
305.833 250.417 li
305.917 250.083 li
306 249.833 li
306.083 249.583 li
306.167 249.25 li
306.25 249 li
306.333 248.75 li
306.417 248.417 li
306.5 248.167 li
306.583 247.917 li
306.667 247.583 li
306.75 247.333 li
306.833 247.083 li
306.917 246.75 li
307 246.5 li
307.083 246.167 li
307.167 245.917 li
307.25 245.667 li
307.333 245.333 li
307.417 245.083 li
307.5 244.833 li
307.5 244.5 li
307.583 244.25 li
307.667 244 li
307.75 243.667 li
307.75 243.417 li
307.833 243.167 li
307.917 242.833 li
308 242.583 li
308 242.333 li
308.083 242 li
308.167 241.75 li
308.167 241.417 li
308.25 241.167 li
308.25 240.917 li
308.333 240.583 li
308.417 240.333 li
308.417 240.083 li
308.5 239.75 li
308.5 239.5 li
308.583 239.25 li
308.583 238.667 li
308.667 238.417 li
308.667 238.083 li
308.75 237.833 li
308.75 237.25 li
308.833 237 li
308.833 236.417 li
308.917 236.167 li
308.917 235.333 li
309 235 li
309 229.75 li
308.917 229.417 li
308.917 228.583 li
308.833 228.333 li
308.833 227.5 li
308.75 227.25 li
308.75 226.917 li
308.667 226.667 li
308.667 226.083 li
308.583 225.833 li
308.583 225.5 li
308.5 225.25 li
308.5 225 li
308.417 224.667 li
308.417 224.417 li
308.333 224.167 li
308.333 223.833 li
308.25 223.583 li
308.167 223.333 li
308.167 223 li
308.083 222.75 li
308.083 222.5 li
308 222.167 li
307.917 221.917 li
307.833 221.583 li
307.833 221.333 li
307.75 221.083 li
307.667 220.75 li
307.583 220.5 li
307.583 220.25 li
307.5 219.917 li
307.417 219.667 li
307.333 219.417 li
307.25 219.083 li
307.167 218.833 li
307.083 218.583 li
307.083 218.25 li
307 218 li
306.917 217.75 li
306.833 217.417 li
306.75 217.167 li
306.667 216.833 li
306.583 216.583 li
306.5 216.333 li
306.417 216 li
306.333 215.75 li
306.25 215.5 li
306.083 215.167 li
306 214.917 li
305.917 214.667 li
305.833 214.333 li
305.75 214.083 li
305.667 213.833 li
305.583 213.5 li
305.417 213.25 li
305.333 213 li
305.25 212.667 li
305.167 212.417 li
305.083 212.083 li
304.917 211.833 li
304.833 211.583 li
304.75 211.25 li
304.583 211 li
304.5 210.75 li
304.417 210.417 li
304.333 210.167 li
304.167 209.917 li
304.083 209.583 li
304 209.333 li
303.833 209.083 li
303.75 208.75 li
303.667 208.5 li
303.5 208.25 li
303.417 207.917 li
303.25 207.667 li
303.167 207.333 li
303.083 207.083 li
302.917 206.833 li
302.833 206.5 li
302.75 206.25 li
302.583 206 li
302.5 205.667 li
302.333 205.417 li
302.25 205.167 li
302.167 204.833 li
302 204.583 li
301.917 204.333 li
301.75 204 li
301.667 203.75 li
301.583 203.5 li
301.417 203.167 li
301.333 202.917 li
301.167 202.583 li
301.083 202.333 li
301 202.083 li
300.833 201.75 li
300.75 201.5 li
300.583 201.25 li
300.5 200.917 li
300.417 200.667 li
300.25 200.417 li
300.167 200.083 li
300.083 199.833 li
299.917 199.583 li
299.833 199.25 li
299.75 199 li
299.583 198.75 li
299.5 198.417 li
299.417 198.167 li
299.25 197.833 li
299.167 197.583 li
299.083 197.333 li
299 197 li
298.833 196.75 li
298.75 196.5 li
298.667 196.167 li
298.583 195.917 li
298.417 195.667 li
298.333 195.333 li
298.25 195.083 li
298.167 194.833 li
298.083 194.5 li
298 194.25 li
297.917 194 li
297.75 193.667 li
297.667 193.417 li
297.583 193.167 li
297.5 192.833 li
297.417 192.583 li
297.333 192.25 li
297.25 192 li
297.167 191.75 li
297.083 191.417 li
297 191.167 li
296.917 190.917 li
296.833 190.583 li
296.75 190.333 li
296.667 190.083 li
296.583 189.75 li
296.5 189.5 li
296.417 189.25 li
296.333 188.917 li
296.25 188.667 li
296.167 188.417 li
296.167 188.083 li
296.083 187.833 li
296 187.5 li
295.917 187.25 li
295.833 187 li
295.75 186.667 li
295.75 186.417 li
295.667 186.167 li
295.583 185.833 li
295.5 185.583 li
295.417 185.333 li
295.417 185 li
295.333 184.75 li
295.25 184.5 li
295.167 184.167 li
295.167 183.917 li
295.083 183.667 li
295 183.333 li
295 183.083 li
294.917 182.75 li
294.833 182.5 li
294.833 182.25 li
294.75 181.917 li
294.667 181.667 li
294.667 181.417 li
294.583 181.083 li
294.583 180.833 li
294.5 180.583 li
294.417 180.25 li
294.417 180 li
294.333 179.75 li
294.333 179.417 li
294.25 179.167 li
294.25 178.917 li
294.167 178.583 li
294.167 178.333 li
294.083 178 li
294.083 177.75 li
294 177.5 li
294 177.167 li
293.917 176.917 li
293.917 176.667 li
293.833 176.333 li
293.833 176.083 li
293.75 175.833 li
293.75 175.5 li
293.667 175.25 li
293.667 175 li
293.583 174.667 li
293.583 174.167 li
293.5 173.833 li
293.5 173.583 li
293.417 173.25 li
293.417 172.75 li
293.333 172.417 li
293.333 171.917 li
293.25 171.583 li
293.25 171.333 li
293.167 171.083 li
293.167 170.5 li
293.083 170.25 li
293.083 169.667 li
293 169.417 li
293 168.5 li
292.917 168.25 li
292.917 167.667 li
292.833 167.417 li
292.833 166.583 li
292.75 166.333 li
292.75 165.5 li
292.667 165.167 li
292.667 164.333 li
292.583 164.083 li
292.583 163.25 li
292.5 162.917 li
292.5 162.083 li
292.417 161.833 li
292.417 160.75 li
292.333 160.417 li
292.333 159 li
292.25 158.75 li
292.25 157.333 li
292.167 157.083 li
292.167 155.667 li
292.083 155.417 li
292.083 153.75 li
292 153.417 li
292 151.5 li
291.917 151.25 li
291.917 149.25 li
291.833 149 li
291.833 146.167 li
291.75 145.917 li
291.75 142.583 li
291.667 142.25 li
291.667 138.083 li
291.583 137.833 li
291.583 131.667 li
291.5 131.417 li
291.5 121.083 li
291.417 120.75 li
291.417 94.5 li
282.667 370.25 mo
282.667 351 li
282.75 350.667 li
282.75 327.25 li
282.833 326.917 li
282.833 316.583 li
282.917 316.333 li
282.917 310.167 li
283 309.917 li
283 305.417 li
283.083 305.167 li
283.083 301.5 li
283.167 301.25 li
283.167 298.75 li
283.25 298.417 li
283.25 296.25 li
283.333 295.917 li
283.333 294 li
283.417 293.667 li
283.417 292 li
283.5 291.75 li
283.5 290.083 li
283.583 289.75 li
283.583 288.667 li
283.667 288.417 li
283.667 287 li
283.75 286.75 li
283.75 285.917 li
283.833 285.583 li
283.833 284.5 li
283.917 284.167 li
283.917 283.333 li
284 283.083 li
284 282.5 li
284.083 282.25 li
284.083 281.417 li
284.167 281.167 li
284.167 280.583 li
284.25 280.25 li
284.25 279.75 li
284.333 279.417 li
284.333 278.917 li
284.417 278.583 li
284.417 278.083 li
284.5 277.75 li
284.5 277.5 li
284.583 277.25 li
284.583 276.667 li
284.667 276.417 li
284.667 276.083 li
284.75 275.833 li
284.75 275.5 li
284.833 275.25 li
284.833 275 li
284.917 274.667 li
284.917 274.417 li
285 274.167 li
285 273.833 li
285.083 273.583 li
285.083 273.333 li
285.167 273 li
285.167 272.75 li
285.25 272.5 li
285.25 272.167 li
285.333 271.917 li
285.417 271.667 li
285.417 271.333 li
285.5 271.083 li
285.583 270.833 li
285.583 270.5 li
285.667 270.25 li
285.75 269.917 li
285.833 269.667 li
285.833 269.417 li
285.917 269.083 li
286 268.833 li
286.083 268.583 li
286.167 268.25 li
286.167 268 li
286.25 267.75 li
286.333 267.417 li
286.417 267.167 li
286.5 266.917 li
286.583 266.583 li
286.667 266.333 li
286.75 266.083 li
286.833 265.75 li
286.917 265.5 li
287 265.167 li
287.083 264.917 li
287.25 264.667 li
287.333 264.333 li
287.417 264.083 li
287.5 263.833 li
287.583 263.5 li
287.75 263.25 li
287.833 263 li
288 262.667 li
288.083 262.417 li
288.167 262.167 li
288.333 261.833 li
288.417 261.583 li
288.583 261.333 li
288.667 261 li
288.833 260.75 li
289 260.417 li
289.083 260.167 li
289.25 259.917 li
289.417 259.667 li
289.5 259.333 li
289.667 259.083 li
289.833 258.833 li
289.917 258.583 li
289.917 258.583 mo
290.083 258.333 li
290.25 258.083 li
290.333 257.833 li
290.5 257.667 li
290.667 257.417 li
290.833 257.167 li
290.917 256.917 li
291.083 256.667 li
291.25 256.5 li
291.333 256.25 li
291.5 256 li
291.667 255.833 li
291.75 255.583 li
291.917 255.333 li
292.083 255.167 li
292.167 254.917 li
292.333 254.667 li
292.5 254.5 li
292.583 254.25 li
292.75 254 li
292.917 253.833 li
293 253.583 li
293.167 253.417 li
293.333 253.167 li
293.417 252.917 li
293.583 252.75 li
293.75 252.5 li
293.833 252.25 li
294 252.083 li
294.167 251.833 li
294.25 251.583 li
294.417 251.333 li
294.583 251.167 li
294.667 250.917 li
294.833 250.667 li
295 250.417 li
295.083 250.167 li
295.25 250 li
295.417 249.75 li
295.583 249.5 li
295.667 249.25 li
295.833 249 li
296 248.75 li
296.083 248.5 li
296.25 248.25 li
296.417 247.917 li
296.5 247.667 li
296.667 247.417 li
296.833 247.167 li
296.917 246.917 li
297.083 246.583 li
297.25 246.333 li
297.333 246 li
297.5 245.75 li
297.583 245.5 li
297.75 245.167 li
297.833 244.917 li
298 244.667 li
298.083 244.333 li
298.167 244.083 li
298.333 243.833 li
298.417 243.5 li
298.5 243.25 li
298.667 243 li
298.75 242.667 li
298.833 242.417 li
298.917 242.167 li
299 241.833 li
299.083 241.583 li
299.25 241.25 li
299.333 241 li
299.417 240.75 li
299.417 240.417 li
299.5 240.167 li
299.583 239.917 li
299.667 239.583 li
299.75 239.333 li
299.833 239.083 li
299.917 238.75 li
299.917 238.5 li
300 238.25 li
300.083 237.917 li
300.083 237.667 li
300.167 237.417 li
300.167 237.083 li
300.25 236.833 li
300.25 236.5 li
300.333 236.25 li
300.333 236 li
300.417 235.667 li
300.417 235.167 li
300.5 234.833 li
300.5 234 li
300.583 233.75 li
300.583 230.917 li
300.5 230.667 li
300.5 229.833 li
300.417 229.583 li
300.417 229 li
300.333 228.75 li
300.333 228.417 li
300.25 228.167 li
300.25 227.917 li
300.167 227.583 li
300.167 227.333 li
300.083 227 li
300.083 226.75 li
300 226.5 li
299.917 226.167 li
299.917 225.917 li
299.833 225.667 li
299.75 225.333 li
299.667 225.083 li
299.583 224.833 li
299.5 224.5 li
299.417 224.25 li
299.417 224 li
299.333 223.667 li
299.25 223.417 li
299.083 223.167 li
299 222.833 li
298.917 222.583 li
298.833 222.333 li
298.75 222 li
298.667 221.75 li
298.583 221.417 li
298.417 221.167 li
298.333 220.917 li
298.25 220.583 li
298.083 220.333 li
298 220.083 li
297.833 219.75 li
297.75 219.5 li
297.667 219.25 li
297.5 218.917 li
297.333 218.667 li
297.25 218.417 li
297.083 218.083 li
297 217.833 li
296.833 217.583 li
296.667 217.25 li
296.583 217 li
296.417 216.75 li
296.25 216.5 li
296.167 216.25 li
296 216 li
295.833 215.75 li
295.75 215.5 li
295.583 215.25 li
295.417 215 li
295.333 214.75 li
295.167 214.5 li
295 214.25 li
294.917 214 li
294.75 213.833 li
294.583 213.583 li
294.417 213.333 li
294.333 213.083 li
294.167 212.917 li
294 212.667 li
293.917 212.417 li
293.75 212.25 li
293.583 212 li
293.5 211.75 li
293.333 211.583 li
293.167 211.333 li
293.083 211.083 li
292.917 210.917 li
292.75 210.667 li
292.667 210.417 li
292.5 210.25 li
292.333 210 li
292.25 209.75 li
292.083 209.583 li
291.917 209.333 li
291.833 209.083 li
291.667 208.917 li
291.5 208.667 li
291.417 208.417 li
291.25 208.25 li
291.083 208 li
291 207.75 li
290.833 207.5 li
290.667 207.25 li
290.583 207.083 li
290.417 206.833 li
290.25 206.583 li
290.167 206.333 li
290 206.083 li
289.833 205.833 li
289.667 205.583 li
289.583 205.25 li
289.417 205 li
289.25 204.75 li
289.167 204.5 li
289 204.167 li
288.833 203.917 li
288.75 203.667 li
288.583 203.333 li
288.5 203.083 li
288.333 202.833 li
288.25 202.5 li
288.083 202.25 li
288 202 li
287.917 201.667 li
287.75 201.417 li
287.667 201.083 li
287.583 200.833 li
287.417 200.583 li
287.333 200.25 li
287.25 200 li
287.167 199.75 li
287.083 199.417 li
286.917 199.167 li
286.833 198.917 li
286.75 198.583 li
286.667 198.333 li
286.583 198.083 li
286.5 197.75 li
286.417 197.5 li
286.333 197.25 li
286.25 196.917 li
286.25 196.667 li
286.167 196.333 li
286.083 196.083 li
286 195.833 li
285.917 195.5 li
285.833 195.25 li
285.833 195 li
285.75 194.667 li
285.667 194.417 li
285.667 194.167 li
285.583 193.833 li
285.5 193.583 li
285.5 193.333 li
285.417 193 li
285.333 192.75 li
285.333 192.5 li
285.25 192.167 li
285.167 191.917 li
285.167 191.583 li
285.083 191.333 li
285.083 191.083 li
285 190.75 li
285 190.5 li
284.917 190.25 li
284.917 189.917 li
284.833 189.667 li
284.833 189.417 li
284.75 189.083 li
284.75 188.833 li
284.667 188.583 li
284.667 188.25 li
284.583 188 li
284.583 187.417 li
284.5 187.167 li
284.5 186.833 li
284.417 186.583 li
284.417 186 li
284.333 185.75 li
284.333 185.167 li
284.25 184.917 li
284.25 184.333 li
284.167 184.083 li
284.167 183.5 li
284.083 183.25 li
284.083 182.417 li
284 182.083 li
284 181.25 li
283.917 181 li
283.917 180.167 li
283.833 179.917 li
283.833 179.083 li
283.75 178.75 li
283.75 177.667 li
283.667 177.333 li
283.667 176.25 li
283.583 176 li
283.583 174.583 li
283.5 174.333 li
283.5 172.917 li
283.417 172.583 li
283.417 170.667 li
283.333 170.417 li
283.333 168.417 li
283.25 168.167 li
283.25 165.667 li
283.167 165.333 li
283.167 162.583 li
283.083 162.25 li
283.083 158.917 li
283 158.667 li
283 154.167 li
282.917 153.917 li
282.917 147.75 li
282.833 147.5 li
282.833 136.333 li
282.75 136 li
282.75 94.6665 li
274.083 370.25 mo
274.083 348.5 li
274 348.167 li
274 324.75 li
273.917 324.417 li
273.917 315.5 li
273.833 315.25 li
273.833 309.333 li
273.75 309.083 li
273.75 304.583 li
273.667 304.333 li
273.667 301.25 li
273.583 301 li
273.583 298.167 li
273.5 297.917 li
273.5 295.667 li
273.417 295.417 li
273.417 293.667 li
273.333 293.417 li
273.333 291.75 li
273.25 291.5 li
273.25 290.083 li
273.167 289.75 li
273.167 288.417 li
273.083 288.083 li
273.083 287 li
273 286.75 li
273 285.583 li
272.917 285.333 li
272.917 284.5 li
272.833 284.167 li
272.833 283.333 li
272.75 283.083 li
272.75 282.25 li
272.667 282 li
272.667 281.417 li
272.583 281.167 li
272.583 280.583 li
272.5 280.25 li
272.5 279.75 li
272.417 279.417 li
272.417 278.917 li
272.333 278.583 li
272.333 278.083 li
272.25 277.75 li
272.25 277.25 li
272.167 276.917 li
272.167 276.667 li
272.083 276.417 li
272.083 276.083 li
272 275.833 li
272 275.5 li
271.917 275.25 li
271.917 275 li
271.833 274.667 li
271.833 274.417 li
271.75 274.167 li
271.75 273.833 li
271.667 273.583 li
271.667 273.333 li
271.583 273 li
271.583 272.75 li
271.5 272.5 li
271.5 272.167 li
271.417 271.917 li
271.333 271.667 li
271.333 271.333 li
271.25 271.083 li
271.167 270.833 li
271.167 270.5 li
271.083 270.25 li
271 269.917 li
271 269.667 li
270.917 269.417 li
270.833 269.083 li
270.75 268.833 li
270.667 268.583 li
270.667 268.25 li
270.583 268 li
270.5 267.75 li
270.417 267.417 li
270.333 267.167 li
270.25 266.917 li
270.167 266.583 li
270.083 266.333 li
270 266.083 li
269.917 265.75 li
269.833 265.5 li
269.75 265.167 li
269.667 264.917 li
269.5 264.667 li
269.417 264.333 li
269.333 264.083 li
269.25 263.833 li
269.083 263.5 li
269 263.25 li
268.917 263 li
268.75 262.667 li
268.667 262.417 li
268.583 262.167 li
268.417 261.833 li
268.333 261.583 li
268.167 261.333 li
268 261 li
267.917 260.75 li
267.75 260.417 li
267.667 260.167 li
267.5 259.917 li
267.333 259.667 li
267.167 259.417 li
267.083 259.083 li
266.917 258.833 li
266.75 258.583 li
266.667 258.333 li
266.5 258.083 li
266.5 258.083 mo
266.333 257.917 li
266.25 257.667 li
266.083 257.417 li
265.917 257.167 li
265.833 256.917 li
265.667 256.75 li
265.5 256.5 li
265.417 256.25 li
265.25 256 li
265.083 255.833 li
265 255.583 li
264.833 255.333 li
264.667 255.167 li
264.583 254.917 li
264.417 254.667 li
264.25 254.5 li
264.167 254.25 li
264 254.083 li
263.833 253.833 li
263.75 253.583 li
263.583 253.417 li
263.417 253.167 li
263.333 252.917 li
263.167 252.75 li
263 252.5 li
262.917 252.25 li
262.75 252.083 li
262.583 251.833 li
262.417 251.583 li
262.333 251.417 li
262.167 251.167 li
262 250.917 li
261.917 250.667 li
261.75 250.5 li
261.583 250.25 li
261.5 250 li
261.333 249.75 li
261.167 249.5 li
261.083 249.25 li
260.917 249.083 li
260.75 248.833 li
260.667 248.583 li
260.5 248.25 li
260.333 248 li
260.25 247.75 li
260.083 247.5 li
259.917 247.25 li
259.833 247 li
259.667 246.667 li
259.5 246.417 li
259.417 246.167 li
259.25 245.833 li
259.167 245.583 li
259 245.25 li
258.917 245 li
258.75 244.75 li
258.667 244.417 li
258.5 244.167 li
258.417 243.917 li
258.333 243.583 li
258.167 243.333 li
258.083 243.083 li
258 242.75 li
257.917 242.5 li
257.75 242.25 li
257.667 241.917 li
257.583 241.667 li
257.5 241.417 li
257.417 241.083 li
257.333 240.833 li
257.25 240.5 li
257.167 240.25 li
257.083 240 li
257 239.667 li
257 239.417 li
256.917 239.167 li
256.833 238.833 li
256.75 238.583 li
256.75 238.333 li
256.667 238 li
256.583 237.75 li
256.583 237.5 li
256.5 237.167 li
256.5 236.917 li
256.417 236.667 li
256.417 236.333 li
256.333 236.083 li
256.333 235.75 li
256.25 235.5 li
256.25 234.917 li
256.167 234.667 li
256.167 233.25 li
256.083 233 li
256.083 231.583 li
256.167 231.333 li
256.167 230.167 li
256.25 229.917 li
256.25 229.333 li
256.333 229.083 li
256.333 228.5 li
256.417 228.25 li
256.417 228 li
256.5 227.667 li
256.5 227.417 li
256.583 227.167 li
256.667 226.833 li
256.667 226.583 li
256.75 226.25 li
256.833 226 li
256.917 225.75 li
256.917 225.417 li
257 225.167 li
257.083 224.917 li
257.167 224.583 li
257.25 224.333 li
257.333 224.083 li
257.417 223.75 li
257.5 223.5 li
257.583 223.25 li
257.667 222.917 li
257.75 222.667 li
257.833 222.417 li
257.917 222.083 li
258.083 221.833 li
258.167 221.5 li
258.25 221.25 li
258.333 221 li
258.5 220.667 li
258.583 220.417 li
258.667 220.167 li
258.833 219.833 li
258.917 219.583 li
259.083 219.333 li
259.167 219 li
259.333 218.75 li
259.5 218.5 li
259.583 218.167 li
259.75 217.917 li
259.833 217.667 li
260 217.333 li
260.167 217.083 li
260.25 216.833 li
260.417 216.583 li
260.583 216.25 li
260.667 216 li
260.833 215.75 li
261 215.5 li
261.083 215.25 li
261.25 215 li
261.417 214.833 li
261.583 214.583 li
261.667 214.333 li
261.833 214.083 li
262 213.833 li
262.083 213.667 li
262.25 213.417 li
262.417 213.167 li
262.5 212.917 li
262.667 212.75 li
262.833 212.5 li
262.917 212.25 li
263.083 212.083 li
263.25 211.833 li
263.333 211.583 li
263.5 211.417 li
263.667 211.167 li
263.75 210.917 li
263.917 210.75 li
264.083 210.5 li
264.167 210.25 li
264.333 210.083 li
264.5 209.833 li
264.583 209.667 li
264.75 209.417 li
264.917 209.167 li
265 209 li
265.167 208.75 li
265.333 208.5 li
265.417 208.25 li
265.583 208.083 li
265.75 207.833 li
265.833 207.583 li
266 207.333 li
266.167 207.083 li
266.333 206.833 li
266.417 206.667 li
266.583 206.417 li
266.75 206.167 li
266.833 205.917 li
267 205.667 li
267.167 205.333 li
267.25 205.083 li
267.417 204.833 li
267.583 204.583 li
267.667 204.25 li
267.833 204 li
268 203.75 li
268.083 203.417 li
268.25 203.167 li
268.333 202.917 li
268.5 202.583 li
268.583 202.333 li
268.667 202.083 li
268.833 201.75 li
268.917 201.5 li
269.083 201.25 li
269.167 200.917 li
269.25 200.667 li
269.333 200.417 li
269.5 200.083 li
269.583 199.833 li
269.667 199.5 li
269.75 199.25 li
269.833 199 li
269.917 198.667 li
270 198.417 li
270.083 198.167 li
270.167 197.833 li
270.25 197.583 li
270.333 197.333 li
270.417 197 li
270.5 196.75 li
270.583 196.5 li
270.667 196.167 li
270.667 195.917 li
270.75 195.667 li
270.833 195.333 li
270.917 195.083 li
271 194.75 li
271 194.5 li
271.083 194.25 li
271.167 193.917 li
271.167 193.667 li
271.25 193.417 li
271.333 193.083 li
271.333 192.833 li
271.417 192.583 li
271.5 192.25 li
271.5 192 li
271.583 191.75 li
271.583 191.417 li
271.667 191.167 li
271.667 190.917 li
271.75 190.583 li
271.75 190.333 li
271.833 190 li
271.833 189.75 li
271.917 189.5 li
271.917 189.167 li
272 188.917 li
272 188.667 li
272.083 188.333 li
272.083 188.083 li
272.167 187.833 li
272.167 187.25 li
272.25 187 li
272.25 186.667 li
272.333 186.417 li
272.333 185.833 li
272.417 185.583 li
272.417 185 li
272.5 184.75 li
272.5 184.167 li
272.583 183.917 li
272.583 183.083 li
272.667 182.75 li
272.667 182.25 li
272.75 181.917 li
272.75 181.083 li
272.833 180.833 li
272.833 180 li
272.917 179.667 li
272.917 178.833 li
273 178.583 li
273 177.5 li
273.083 177.167 li
273.083 176.083 li
273.167 175.75 li
273.167 174.417 li
273.25 174.083 li
273.25 172.75 li
273.333 172.417 li
273.333 170.75 li
273.417 170.5 li
273.417 168 li
273.5 167.667 li
273.5 164.583 li
273.583 164.333 li
273.583 160.167 li
273.667 159.833 li
273.667 156.25 li
273.75 155.917 li
273.75 149.25 li
273.833 149 li
273.833 139.75 li
273.917 139.5 li
273.917 104.25 li
274 104 li
274 94.5 li
265.417 370.25 mo
265.417 349.583 li
265.333 349.333 li
265.333 336.75 li
265.25 336.417 li
265.25 329.5 li
265.167 329.167 li
265.167 324.417 li
265.083 324.167 li
265.083 320.5 li
265 320.25 li
265 317.417 li
264.917 317.167 li
264.917 314.667 li
264.833 314.333 li
264.833 312.167 li
264.75 311.833 li
264.75 310.167 li
264.667 309.917 li
264.667 308.25 li
264.583 307.917 li
264.583 306.583 li
264.5 306.25 li
264.5 305.167 li
264.417 304.917 li
264.417 303.5 li
264.333 303.167 li
264.333 302.333 li
264.25 302.083 li
264.25 301 li
264.167 300.667 li
264.167 299.833 li
264.083 299.583 li
264.083 298.75 li
264 298.417 li
264 297.583 li
263.917 297.333 li
263.917 296.75 li
263.833 296.5 li
263.833 295.667 li
263.75 295.417 li
263.75 294.833 li
263.667 294.5 li
263.667 294 li
263.583 293.667 li
263.583 293.167 li
263.5 292.833 li
263.5 292.333 li
263.417 292 li
263.417 291.75 li
263.333 291.5 li
263.333 290.917 li
263.25 290.667 li
263.25 290.333 li
263.167 290.083 li
263.167 289.5 li
263.083 289.25 li
263.083 288.917 li
263 288.667 li
263 288.417 li
262.917 288.083 li
262.917 287.583 li
262.833 287.25 li
262.833 287 li
262.75 286.75 li
262.75 286.417 li
262.667 286.167 li
262.583 285.917 li
262.583 285.583 li
262.5 285.333 li
262.5 285 li
262.417 284.75 li
262.417 284.5 li
262.333 284.167 li
262.333 283.917 li
262.25 283.667 li
262.167 283.333 li
262.167 283.083 li
262.083 282.833 li
262 282.5 li
262 282.25 li
261.917 282 li
261.917 281.667 li
261.833 281.417 li
261.75 281.167 li
261.667 280.833 li
261.667 280.583 li
261.583 280.25 li
261.5 280 li
261.5 279.75 li
261.417 279.417 li
261.333 279.167 li
261.25 278.917 li
261.167 278.583 li
261.167 278.333 li
261.083 278.083 li
261 277.75 li
260.917 277.5 li
260.833 277.25 li
260.833 276.917 li
260.75 276.667 li
260.667 276.417 li
260.583 276.083 li
260.5 275.833 li
260.417 275.5 li
260.333 275.25 li
260.25 275 li
260.167 274.667 li
260.083 274.417 li
260 274.167 li
259.917 273.833 li
259.833 273.583 li
259.75 273.333 li
259.667 273 li
259.583 272.75 li
259.5 272.5 li
259.417 272.167 li
259.333 271.917 li
259.25 271.667 li
259.167 271.333 li
259.083 271.083 li
259 270.833 li
258.917 270.5 li
258.833 270.25 li
258.667 269.917 li
258.583 269.667 li
258.5 269.417 li
258.417 269.083 li
258.333 268.833 li
258.25 268.583 li
258.083 268.25 li
258 268 li
257.917 267.75 li
257.833 267.417 li
257.667 267.167 li
257.583 266.917 li
257.5 266.583 li
257.333 266.333 li
257.25 266.083 li
257.167 265.75 li
257 265.5 li
256.917 265.167 li
256.833 264.917 li
256.667 264.667 li
256.583 264.333 li
256.5 264.083 li
256.333 263.833 li
256.25 263.5 li
256.167 263.25 li
256 263 li
255.917 262.667 li
255.833 262.417 li
255.667 262.167 li
255.583 261.833 li
255.417 261.583 li
255.333 261.333 li
255.25 261 li
255.083 260.75 li
255 260.417 li
254.833 260.167 li
254.75 259.917 li
254.583 259.583 li
254.5 259.333 li
254.417 259.083 li
254.25 258.75 li
254.167 258.5 li
254 258.25 li
253.917 257.917 li
253.833 257.667 li
253.667 257.417 li
253.583 257.083 li
253.5 256.833 li
253.333 256.583 li
253.25 256.25 li
253.083 256 li
253 255.667 li
252.917 255.417 li
252.75 255.167 li
252.667 254.833 li
252.583 254.583 li
252.417 254.333 li
252.333 254 li
252.25 253.75 li
252.083 253.5 li
252 253.167 li
251.917 252.917 li
251.833 252.667 li
251.667 252.333 li
251.583 252.083 li
251.5 251.833 li
251.417 251.5 li
251.333 251.25 li
251.333 251.25 mo
251.167 250.917 li
251.083 250.667 li
251 250.417 li
250.917 250.083 li
250.833 249.833 li
250.75 249.583 li
250.667 249.25 li
250.5 249 li
250.417 248.75 li
250.333 248.417 li
250.25 248.167 li
250.167 247.917 li
250.083 247.583 li
250 247.333 li
249.917 247.083 li
249.833 246.75 li
249.75 246.5 li
249.667 246.167 li
249.667 245.917 li
249.583 245.667 li
249.5 245.333 li
249.417 245.083 li
249.333 244.833 li
249.25 244.5 li
249.167 244.25 li
249.167 244 li
249.083 243.667 li
249 243.417 li
248.917 243.167 li
248.917 242.833 li
248.833 242.583 li
248.75 242.333 li
248.75 242 li
248.667 241.75 li
248.583 241.417 li
248.583 241.167 li
248.5 240.917 li
248.5 240.583 li
248.417 240.333 li
248.333 240.083 li
248.333 239.75 li
248.25 239.5 li
248.25 238.917 li
248.167 238.667 li
248.167 238.417 li
248.083 238.083 li
248.083 237.833 li
248 237.583 li
248 237 li
247.917 236.667 li
247.917 235.833 li
247.833 235.583 li
247.833 234.167 li
247.75 233.917 li
247.75 230.583 li
247.833 230.25 li
247.833 228.917 li
247.917 228.583 li
247.917 228.083 li
248 227.75 li
248 227.25 li
248.083 226.917 li
248.083 226.333 li
248.167 226.083 li
248.167 225.833 li
248.25 225.5 li
248.25 225.25 li
248.333 225 li
248.333 224.667 li
248.417 224.417 li
248.417 224.167 li
248.5 223.833 li
248.5 223.583 li
248.583 223.333 li
248.583 223 li
248.667 222.75 li
248.75 222.5 li
248.75 222.167 li
248.833 221.917 li
248.917 221.583 li
249 221.333 li
249 221.083 li
249.083 220.75 li
249.167 220.5 li
249.25 220.25 li
249.25 219.917 li
249.333 219.667 li
249.417 219.417 li
249.5 219.083 li
249.583 218.833 li
249.667 218.583 li
249.75 218.25 li
249.833 218 li
249.833 217.75 li
249.917 217.417 li
250 217.167 li
250.083 216.833 li
250.167 216.583 li
250.333 216.333 li
250.417 216 li
250.5 215.75 li
250.583 215.5 li
250.667 215.167 li
250.75 214.917 li
250.833 214.667 li
250.917 214.333 li
251 214.083 li
251.083 213.833 li
251.25 213.5 li
251.333 213.25 li
251.417 213 li
251.5 212.667 li
251.583 212.417 li
251.75 212.083 li
251.833 211.833 li
251.917 211.583 li
252 211.25 li
252.167 211 li
252.25 210.75 li
252.333 210.417 li
252.417 210.167 li
252.583 209.917 li
252.667 209.583 li
252.75 209.333 li
252.917 209.083 li
253 208.75 li
253.083 208.5 li
253.25 208.25 li
253.333 207.917 li
253.5 207.667 li
253.583 207.333 li
253.667 207.083 li
253.833 206.833 li
253.917 206.5 li
254 206.25 li
254.167 206 li
254.25 205.667 li
254.417 205.417 li
254.5 205.167 li
254.583 204.833 li
254.75 204.583 li
254.833 204.333 li
255 204 li
255.083 203.75 li
255.167 203.5 li
255.333 203.167 li
255.417 202.917 li
255.583 202.583 li
255.667 202.333 li
255.75 202.083 li
255.917 201.75 li
256 201.5 li
256.167 201.25 li
256.25 200.917 li
256.333 200.667 li
256.5 200.417 li
256.583 200.083 li
256.667 199.833 li
256.833 199.583 li
256.917 199.25 li
257 199 li
257.167 198.75 li
257.25 198.417 li
257.333 198.167 li
257.417 197.833 li
257.583 197.583 li
257.667 197.333 li
257.75 197 li
257.833 196.75 li
258 196.5 li
258.083 196.167 li
258.167 195.917 li
258.25 195.667 li
258.417 195.333 li
258.5 195.083 li
258.583 194.833 li
258.667 194.5 li
258.75 194.25 li
258.833 194 li
258.917 193.667 li
259.083 193.417 li
259.167 193.167 li
259.25 192.833 li
259.333 192.583 li
259.417 192.25 li
259.5 192 li
259.583 191.75 li
259.667 191.417 li
259.75 191.167 li
259.833 190.917 li
259.917 190.583 li
260 190.333 li
260.083 190.083 li
260.167 189.75 li
260.25 189.5 li
260.333 189.25 li
260.417 188.917 li
260.5 188.667 li
260.5 188.417 li
260.583 188.083 li
260.667 187.833 li
260.75 187.5 li
260.833 187.25 li
260.917 187 li
261 186.667 li
261 186.417 li
261.083 186.167 li
261.167 185.833 li
261.25 185.583 li
261.25 185.333 li
261.333 185 li
261.417 184.75 li
261.5 184.5 li
261.5 184.167 li
261.583 183.917 li
261.667 183.667 li
261.667 183.333 li
261.75 183.083 li
261.833 182.75 li
261.833 182.5 li
261.917 182.25 li
262 181.917 li
262 181.667 li
262.083 181.417 li
262.167 181.083 li
262.167 180.833 li
262.25 180.583 li
262.25 180.25 li
262.333 180 li
262.417 179.75 li
262.417 179.417 li
262.5 179.167 li
262.5 178.917 li
262.583 178.583 li
262.583 178.333 li
262.667 178 li
262.667 177.75 li
262.75 177.5 li
262.75 177.167 li
262.833 176.917 li
262.833 176.667 li
262.917 176.333 li
262.917 176.083 li
263 175.833 li
263 175.25 li
263.083 175 li
263.083 174.667 li
263.167 174.417 li
263.167 173.833 li
263.25 173.583 li
263.25 173.25 li
263.333 173 li
263.333 172.417 li
263.417 172.167 li
263.417 171.583 li
263.5 171.333 li
263.5 170.75 li
263.583 170.5 li
263.583 169.917 li
263.667 169.667 li
263.667 169.083 li
263.75 168.833 li
263.75 168 li
263.833 167.667 li
263.833 167.167 li
263.917 166.833 li
263.917 166 li
264 165.75 li
264 164.917 li
264.083 164.667 li
264.083 163.75 li
264.167 163.5 li
264.167 162.417 li
264.25 162.083 li
264.25 161 li
264.333 160.75 li
264.333 159.333 li
264.417 159 li
264.417 157.667 li
264.5 157.333 li
264.5 155.667 li
264.583 155.417 li
264.583 153.75 li
264.667 153.417 li
264.667 151.5 li
264.75 151.25 li
264.75 149 li
264.833 148.667 li
264.833 145.667 li
264.917 145.333 li
264.917 142 li
265 141.75 li
265 137 li
265.083 136.667 li
265.083 130 li
265.167 129.667 li
265.167 116.583 li
265.25 116.333 li
265.25 94.5 li
256.75 370.25 mo
256.75 348.75 li
256.667 348.5 li
256.667 339.5 li
256.583 339.25 li
256.583 333.667 li
256.5 333.333 li
256.5 329.167 li
256.417 328.917 li
256.417 325.833 li
256.333 325.583 li
256.333 322.75 li
256.25 322.5 li
256.25 320.25 li
256.167 320 li
256.167 318 li
256.083 317.75 li
256.083 316.083 li
256 315.75 li
256 314.333 li
255.917 314.083 li
255.917 312.667 li
255.833 312.417 li
255.833 311 li
255.75 310.75 li
255.75 309.667 li
255.667 309.333 li
255.667 308.25 li
255.583 307.917 li
255.583 307.083 li
255.5 306.833 li
255.5 305.75 li
255.417 305.417 li
255.417 304.583 li
255.333 304.333 li
255.333 303.75 li
255.25 303.5 li
255.25 302.667 li
255.167 302.333 li
255.167 301.833 li
255.083 301.5 li
255.083 300.667 li
255 300.417 li
255 299.833 li
254.917 299.583 li
254.917 299 li
254.833 298.75 li
254.833 298.417 li
254.75 298.167 li
254.75 297.583 li
254.667 297.333 li
254.667 296.75 li
254.583 296.5 li
254.583 296.25 li
254.5 295.917 li
254.5 295.417 li
254.417 295.083 li
254.417 294.833 li
254.333 294.5 li
254.333 294.25 li
254.25 294 li
254.25 293.417 li
254.167 293.167 li
254.167 292.833 li
254.083 292.583 li
254.083 292.333 li
254 292 li
254 291.75 li
253.917 291.5 li
253.917 291.167 li
253.833 290.917 li
253.833 290.667 li
253.75 290.333 li
253.75 290.083 li
253.667 289.75 li
253.667 289.5 li
253.583 289.25 li
253.5 288.917 li
253.5 288.667 li
253.417 288.417 li
253.417 288.083 li
253.333 287.833 li
253.333 287.583 li
253.25 287.25 li
253.167 287 li
253.167 286.75 li
253.083 286.417 li
253 286.167 li
253 285.917 li
252.917 285.583 li
252.917 285.333 li
252.833 285 li
252.75 284.75 li
252.75 284.5 li
252.667 284.167 li
252.583 283.917 li
252.583 283.667 li
252.5 283.333 li
252.417 283.083 li
252.333 282.833 li
252.333 282.5 li
252.25 282.25 li
252.167 282 li
252.083 281.667 li
252.083 281.417 li
252 281.167 li
251.917 280.833 li
251.833 280.584 li
251.833 280.25 li
251.75 280 li
251.667 279.75 li
251.583 279.417 li
251.5 279.167 li
251.5 278.917 li
251.417 278.584 li
251.333 278.334 li
251.25 278.084 li
251.167 277.75 li
251.083 277.5 li
251.083 277.25 li
251 276.917 li
250.917 276.667 li
250.833 276.417 li
250.75 276.084 li
250.667 275.834 li
250.583 275.5 li
250.5 275.25 li
250.417 275 li
250.333 274.667 li
250.25 274.417 li
250.167 274.167 li
250.167 273.834 li
250.083 273.584 li
250 273.334 li
249.917 273 li
249.833 272.75 li
249.75 272.5 li
249.667 272.167 li
249.583 271.917 li
249.5 271.667 li
249.417 271.334 li
249.333 271.084 li
249.25 270.834 li
249.167 270.5 li
249.083 270.25 li
249 269.917 li
248.917 269.667 li
248.833 269.417 li
248.75 269.084 li
248.583 268.834 li
248.5 268.584 li
248.417 268.25 li
248.333 268 li
248.25 267.75 li
248.167 267.417 li
248.083 267.167 li
248 266.917 li
247.917 266.584 li
247.833 266.334 li
247.75 266.084 li
247.667 265.75 li
247.583 265.5 li
247.5 265.167 li
247.417 264.917 li
247.333 264.667 li
247.25 264.334 li
247.083 264.084 li
247 263.834 li
246.917 263.5 li
246.833 263.25 li
246.75 263 li
246.667 262.667 li
246.583 262.417 li
246.5 262.167 li
246.417 261.834 li
246.333 261.584 li
246.25 261.334 li
246.167 261 li
246.083 260.75 li
246 260.417 li
245.917 260.167 li
245.833 259.917 li
245.667 259.584 li
245.583 259.334 li
245.5 259.084 li
245.417 258.75 li
245.333 258.5 li
245.25 258.25 li
245.167 257.917 li
245.083 257.667 li
245 257.417 li
244.917 257.084 li
244.833 256.833 li
244.75 256.583 li
244.667 256.25 li
244.583 256 li
244.5 255.667 li
244.417 255.417 li
244.417 255.167 li
244.333 254.833 li
244.25 254.583 li
244.167 254.333 li
244.083 254 li
244 253.75 li
243.917 253.5 li
243.833 253.167 li
243.75 252.917 li
243.667 252.667 li
243.583 252.333 li
243.583 252.083 li
243.5 251.833 li
243.417 251.5 li
243.333 251.25 li
243.25 250.917 li
243.167 250.667 li
243.167 250.417 li
243.083 250.083 li
243 249.833 li
242.917 249.583 li
242.917 249.25 li
242.833 249 li
242.833 249 mo
242.75 248.75 li
242.667 248.417 li
242.667 248.167 li
242.583 247.917 li
242.5 247.583 li
242.5 247.333 li
242.417 247.083 li
242.333 246.75 li
242.333 246.5 li
242.25 246.167 li
242.167 245.917 li
242.167 245.667 li
242.083 245.333 li
242 245.083 li
242 244.833 li
241.917 244.5 li
241.917 244.25 li
241.833 244 li
241.833 243.667 li
241.75 243.417 li
241.75 243.167 li
241.667 242.833 li
241.667 242.583 li
241.583 242.333 li
241.583 242 li
241.5 241.75 li
241.5 241.417 li
241.417 241.167 li
241.417 240.583 li
241.333 240.333 li
241.333 240.083 li
241.25 239.75 li
241.25 239.25 li
241.167 238.917 li
241.167 238.083 li
241.083 237.833 li
241.083 237 li
241 236.667 li
241 235.583 li
240.917 235.333 li
240.917 229.167 li
241 228.917 li
241 227.75 li
241.083 227.5 li
241.083 226.667 li
241.167 226.333 li
241.167 225.833 li
241.25 225.5 li
241.25 225 li
241.333 224.667 li
241.333 224.167 li
241.417 223.833 li
241.417 223.333 li
241.5 223 li
241.5 222.75 li
241.583 222.5 li
241.583 222.167 li
241.667 221.917 li
241.667 221.583 li
241.75 221.333 li
241.75 221.083 li
241.833 220.75 li
241.833 220.5 li
241.917 220.25 li
241.917 219.917 li
242 219.667 li
242.083 219.417 li
242.083 219.083 li
242.167 218.833 li
242.167 218.583 li
242.25 218.25 li
242.333 218 li
242.333 217.75 li
242.417 217.417 li
242.5 217.167 li
242.5 216.833 li
242.583 216.583 li
242.667 216.333 li
242.667 216 li
242.75 215.75 li
242.833 215.5 li
242.917 215.167 li
242.917 214.917 li
243 214.667 li
243.083 214.333 li
243.167 214.083 li
243.25 213.833 li
243.25 213.5 li
243.333 213.25 li
243.417 213 li
243.5 212.667 li
243.583 212.417 li
243.667 212.083 li
243.667 211.833 li
243.75 211.583 li
243.833 211.25 li
243.917 211 li
244 210.75 li
244.083 210.417 li
244.167 210.167 li
244.25 209.917 li
244.333 209.583 li
244.417 209.333 li
244.5 209.083 li
244.583 208.75 li
244.667 208.5 li
244.75 208.25 li
244.75 207.917 li
244.833 207.667 li
244.917 207.333 li
245 207.083 li
245.083 206.833 li
245.167 206.5 li
245.25 206.25 li
245.333 206 li
245.5 205.667 li
245.583 205.417 li
245.667 205.167 li
245.75 204.833 li
245.833 204.583 li
245.917 204.333 li
246 204 li
246.083 203.75 li
246.167 203.5 li
246.25 203.167 li
246.333 202.917 li
246.417 202.583 li
246.5 202.333 li
246.583 202.083 li
246.667 201.75 li
246.75 201.5 li
246.833 201.25 li
246.917 200.917 li
247 200.667 li
247.083 200.417 li
247.25 200.083 li
247.333 199.833 li
247.417 199.583 li
247.5 199.25 li
247.583 199 li
247.667 198.75 li
247.75 198.417 li
247.833 198.167 li
247.917 197.833 li
248 197.583 li
248.083 197.333 li
248.167 197 li
248.25 196.75 li
248.333 196.5 li
248.417 196.167 li
248.5 195.917 li
248.583 195.667 li
248.667 195.333 li
248.75 195.083 li
248.833 194.833 li
248.917 194.5 li
249 194.25 li
249.083 194 li
249.25 193.667 li
249.333 193.417 li
249.417 193.167 li
249.417 192.833 li
249.5 192.583 li
249.583 192.25 li
249.667 192 li
249.75 191.75 li
249.833 191.417 li
249.917 191.167 li
250 190.917 li
250.083 190.583 li
250.167 190.333 li
250.25 190.083 li
250.333 189.75 li
250.417 189.5 li
250.5 189.25 li
250.583 188.917 li
250.667 188.667 li
250.75 188.417 li
250.833 188.083 li
250.833 187.833 li
250.917 187.5 li
251 187.25 li
251.083 187 li
251.167 186.667 li
251.25 186.417 li
251.333 186.167 li
251.333 185.833 li
251.417 185.583 li
251.5 185.333 li
251.583 185 li
251.667 184.75 li
251.667 184.5 li
251.75 184.167 li
251.833 183.917 li
251.917 183.667 li
251.917 183.333 li
252 183.083 li
252.083 182.75 li
252.167 182.5 li
252.167 182.25 li
252.25 181.917 li
252.333 181.667 li
252.417 181.417 li
252.417 181.083 li
252.5 180.833 li
252.583 180.583 li
252.583 180.25 li
252.667 180 li
252.75 179.75 li
252.75 179.417 li
252.833 179.167 li
252.917 178.917 li
252.917 178.583 li
253 178.333 li
253 178 li
253.083 177.75 li
253.167 177.5 li
253.167 177.167 li
253.25 176.917 li
253.25 176.667 li
253.333 176.333 li
253.417 176.083 li
253.417 175.833 li
253.5 175.5 li
253.5 175.25 li
253.583 175 li
253.583 174.667 li
253.667 174.417 li
253.667 174.167 li
253.75 173.833 li
253.75 173.583 li
253.833 173.25 li
253.833 173 li
253.917 172.75 li
253.917 172.417 li
254 172.167 li
254 171.917 li
254.083 171.583 li
254.083 171.333 li
254.167 171.083 li
254.167 170.75 li
254.25 170.5 li
254.25 170.25 li
254.333 169.917 li
254.333 169.417 li
254.417 169.083 li
254.417 168.833 li
254.5 168.5 li
254.5 168 li
254.583 167.667 li
254.583 167.417 li
254.667 167.167 li
254.667 166.583 li
254.75 166.333 li
254.75 165.75 li
254.833 165.5 li
254.833 164.917 li
254.917 164.667 li
254.917 164.083 li
255 163.75 li
255 163.25 li
255.083 162.917 li
255.083 162.083 li
255.167 161.833 li
255.167 161.25 li
255.25 161 li
255.25 160.167 li
255.333 159.917 li
255.333 159 li
255.417 158.75 li
255.417 157.917 li
255.5 157.667 li
255.5 156.5 li
255.583 156.25 li
255.583 155.167 li
255.667 154.833 li
255.667 153.75 li
255.75 153.417 li
255.75 152.083 li
255.833 151.75 li
255.833 150.083 li
255.917 149.833 li
255.917 148.167 li
256 147.833 li
256 145.917 li
256.083 145.667 li
256.083 143.083 li
256.167 142.833 li
256.167 140.083 li
256.25 139.75 li
256.25 136.417 li
256.333 136.167 li
256.333 132.25 li
256.417 131.917 li
256.417 126.083 li
256.5 125.833 li
256.5 115.75 li
256.583 115.5 li
256.583 94.5 li
248.167 370.25 mo
248.167 362.667 li
248.083 362.417 li
248.083 346.75 li
248 346.5 li
248 339.25 li
247.917 339 li
247.917 334.25 li
247.833 333.917 li
247.833 330 li
247.75 329.75 li
247.75 326.917 li
247.667 326.667 li
247.667 324.167 li
247.583 323.833 li
247.583 321.667 li
247.5 321.333 li
247.5 319.667 li
247.417 319.417 li
247.417 317.75 li
247.333 317.417 li
247.333 316.083 li
247.25 315.75 li
247.25 314.333 li
247.167 314.083 li
247.167 313 li
247.083 312.667 li
247.083 311.583 li
247 311.333 li
247 310.167 li
246.917 309.917 li
246.917 309.083 li
246.833 308.75 li
246.833 307.917 li
246.75 307.667 li
246.75 306.833 li
246.667 306.583 li
246.667 305.75 li
246.583 305.417 li
246.583 304.917 li
246.5 304.583 li
246.5 303.75 li
246.417 303.5 li
246.417 302.917 li
246.333 302.667 li
246.333 302.083 li
246.25 301.833 li
246.25 301.25 li
246.167 301 li
246.167 300.417 li
246.083 300.167 li
246.083 299.583 li
246 299.25 li
246 299 li
245.917 298.75 li
245.917 298.167 li
245.833 297.917 li
245.833 297.583 li
245.75 297.333 li
245.75 296.75 li
245.667 296.5 li
245.667 296.25 li
245.583 295.917 li
245.583 295.417 li
245.5 295.083 li
245.5 294.833 li
245.417 294.5 li
245.417 294.25 li
245.333 294 li
245.333 293.667 li
245.25 293.417 li
245.25 293.167 li
245.167 292.833 li
245.167 292.583 li
245.083 292.333 li
245.083 292 li
245 291.75 li
245 291.5 li
244.917 291.167 li
244.917 290.917 li
244.833 290.667 li
244.833 290.333 li
244.75 290.083 li
244.75 289.75 li
244.667 289.5 li
244.667 289.25 li
244.583 288.917 li
244.583 288.667 li
244.5 288.417 li
244.5 288.083 li
244.417 287.833 li
244.333 287.583 li
244.333 287.25 li
244.25 287 li
244.25 286.75 li
244.167 286.417 li
244.083 286.167 li
244.083 285.917 li
244 285.583 li
244 285.333 li
243.917 285 li
243.833 284.75 li
243.833 284.5 li
243.75 284.167 li
243.667 283.917 li
243.667 283.667 li
243.583 283.333 li
243.5 283.083 li
243.5 282.833 li
243.417 282.5 li
243.333 282.25 li
243.333 282 li
243.25 281.667 li
243.167 281.417 li
243.167 281.167 li
243.083 280.834 li
243 280.584 li
243 280.25 li
242.917 280 li
242.833 279.75 li
242.75 279.417 li
242.75 279.167 li
242.667 278.917 li
242.583 278.584 li
242.583 278.334 li
242.5 278.084 li
242.417 277.75 li
242.333 277.5 li
242.333 277.25 li
242.25 276.917 li
242.167 276.667 li
242.083 276.417 li
242 276.084 li
242 275.834 li
241.917 275.5 li
241.833 275.25 li
241.75 275 li
241.75 274.667 li
241.667 274.417 li
241.583 274.167 li
241.5 273.834 li
241.417 273.584 li
241.417 273.334 li
241.333 273 li
241.25 272.75 li
241.167 272.5 li
241.083 272.167 li
241 271.917 li
241 271.667 li
240.917 271.334 li
240.833 271.084 li
240.75 270.834 li
240.667 270.5 li
240.667 270.25 li
240.583 269.917 li
240.5 269.667 li
240.417 269.417 li
240.333 269.084 li
240.25 268.834 li
240.25 268.584 li
240.167 268.25 li
240.083 268 li
240 267.75 li
239.917 267.417 li
239.833 267.167 li
239.833 266.917 li
239.75 266.584 li
239.667 266.334 li
239.583 266.084 li
239.5 265.75 li
239.417 265.5 li
239.417 265.167 li
239.333 264.917 li
239.25 264.667 li
239.167 264.334 li
239.083 264.084 li
239.083 263.834 li
239 263.5 li
238.917 263.25 li
238.833 263 li
238.75 262.667 li
238.667 262.417 li
238.667 262.167 li
238.583 261.834 li
238.5 261.584 li
238.417 261.334 li
238.333 261 li
238.333 260.75 li
238.25 260.417 li
238.167 260.167 li
238.083 259.917 li
238.083 259.584 li
238 259.334 li
237.917 259.084 li
237.833 258.75 li
237.833 258.5 li
237.75 258.25 li
237.667 257.917 li
237.583 257.667 li
237.583 257.417 li
237.5 257.084 li
237.417 256.834 li
237.333 256.584 li
237.333 256.25 li
237.25 256 li
237.167 255.667 li
237.167 255.417 li
237.083 255.167 li
237 254.834 li
236.917 254.584 li
236.917 254.333 li
236.833 254 li
236.75 253.75 li
236.75 253.5 li
236.667 253.167 li
236.583 252.917 li
236.583 252.667 li
236.5 252.333 li
236.5 252.083 li
236.417 251.833 li
236.333 251.5 li
236.333 251.25 li
236.25 250.917 li
236.25 250.667 li
236.167 250.417 li
236.167 250.417 mo
236.083 250.083 li
236.083 249.833 li
236 249.583 li
236 249.25 li
235.917 249 li
235.917 248.75 li
235.833 248.417 li
235.833 248.167 li
235.75 247.917 li
235.75 247.583 li
235.667 247.333 li
235.667 247.083 li
235.583 246.75 li
235.583 246.5 li
235.5 246.167 li
235.5 245.917 li
235.417 245.667 li
235.417 245.333 li
235.333 245.083 li
235.333 244.5 li
235.25 244.25 li
235.25 244 li
235.167 243.667 li
235.167 243.167 li
235.083 242.833 li
235.083 242.333 li
235 242 li
235 241.417 li
234.917 241.167 li
234.917 240.583 li
234.833 240.333 li
234.833 239.5 li
234.75 239.25 li
234.75 238.083 li
234.667 237.833 li
234.667 236.417 li
234.583 236.167 li
234.583 233.333 li
234.5 233.083 li
234.5 231.667 li
234.583 231.417 li
234.583 228.333 li
234.667 228.083 li
234.667 226.917 li
234.75 226.667 li
234.75 225.5 li
234.833 225.25 li
234.833 224.417 li
234.917 224.167 li
234.917 223.583 li
235 223.333 li
235 222.5 li
235.083 222.167 li
235.083 221.917 li
235.167 221.583 li
235.167 221.083 li
235.25 220.75 li
235.25 220.25 li
235.333 219.917 li
235.333 219.667 li
235.417 219.417 li
235.417 219.083 li
235.5 218.833 li
235.5 218.25 li
235.583 218 li
235.583 217.75 li
235.667 217.417 li
235.667 217.167 li
235.75 216.833 li
235.75 216.583 li
235.833 216.333 li
235.833 216 li
235.917 215.75 li
236 215.5 li
236 215.167 li
236.083 214.917 li
236.083 214.667 li
236.167 214.333 li
236.167 214.083 li
236.25 213.833 li
236.333 213.5 li
236.333 213.25 li
236.417 213 li
236.417 212.667 li
236.5 212.417 li
236.583 212.083 li
236.583 211.833 li
236.667 211.583 li
236.75 211.25 li
236.75 211 li
236.833 210.75 li
236.917 210.417 li
236.917 210.167 li
237 209.917 li
237.083 209.583 li
237.083 209.333 li
237.167 209.083 li
237.25 208.75 li
237.25 208.5 li
237.333 208.25 li
237.417 207.917 li
237.5 207.667 li
237.5 207.333 li
237.583 207.083 li
237.667 206.833 li
237.75 206.5 li
237.75 206.25 li
237.833 206 li
237.917 205.667 li
238 205.417 li
238 205.167 li
238.083 204.833 li
238.167 204.583 li
238.25 204.333 li
238.25 204 li
238.333 203.75 li
238.417 203.5 li
238.5 203.167 li
238.583 202.917 li
238.583 202.583 li
238.667 202.333 li
238.75 202.083 li
238.833 201.75 li
238.917 201.5 li
238.917 201.25 li
239 200.917 li
239.083 200.667 li
239.167 200.417 li
239.25 200.083 li
239.25 199.833 li
239.333 199.583 li
239.417 199.25 li
239.5 199 li
239.583 198.75 li
239.667 198.417 li
239.667 198.167 li
239.75 197.833 li
239.833 197.583 li
239.917 197.333 li
240 197 li
240.083 196.75 li
240.083 196.5 li
240.167 196.167 li
240.25 195.917 li
240.333 195.667 li
240.417 195.333 li
240.5 195.083 li
240.5 194.833 li
240.583 194.5 li
240.667 194.25 li
240.75 194 li
240.833 193.667 li
240.833 193.417 li
240.917 193.167 li
241 192.833 li
241.083 192.583 li
241.167 192.25 li
241.167 192 li
241.25 191.75 li
241.333 191.417 li
241.417 191.167 li
241.5 190.917 li
241.5 190.583 li
241.583 190.333 li
241.667 190.083 li
241.75 189.75 li
241.833 189.5 li
241.833 189.25 li
241.917 188.917 li
242 188.667 li
242.083 188.417 li
242.083 188.083 li
242.167 187.833 li
242.25 187.5 li
242.333 187.25 li
242.417 187 li
242.417 186.667 li
242.5 186.417 li
242.583 186.167 li
242.583 185.833 li
242.667 185.583 li
242.75 185.333 li
242.833 185 li
242.833 184.75 li
242.917 184.5 li
243 184.167 li
243 183.917 li
243.083 183.667 li
243.167 183.333 li
243.25 183.083 li
243.25 182.75 li
243.333 182.5 li
243.417 182.25 li
243.417 181.917 li
243.5 181.667 li
243.583 181.417 li
243.583 181.083 li
243.667 180.833 li
243.667 180.583 li
243.75 180.25 li
243.833 180 li
243.833 179.75 li
243.917 179.417 li
244 179.167 li
244 178.917 li
244.083 178.583 li
244.083 178.333 li
244.167 178 li
244.25 177.75 li
244.25 177.5 li
244.333 177.167 li
244.333 176.917 li
244.417 176.667 li
244.417 176.333 li
244.5 176.083 li
244.583 175.833 li
244.583 175.5 li
244.667 175.25 li
244.667 175 li
244.75 174.667 li
244.75 174.417 li
244.833 174.167 li
244.833 173.833 li
244.917 173.583 li
244.917 173.25 li
245 173 li
245 172.75 li
245.083 172.417 li
245.083 172.167 li
245.167 171.917 li
245.167 171.583 li
245.25 171.333 li
245.25 171.083 li
245.333 170.75 li
245.333 170.5 li
245.417 170.25 li
245.417 169.917 li
245.5 169.667 li
245.5 169.083 li
245.583 168.833 li
245.583 168.5 li
245.667 168.25 li
245.667 167.667 li
245.75 167.417 li
245.75 167.167 li
245.833 166.833 li
245.833 166.333 li
245.917 166 li
245.917 165.75 li
246 165.5 li
246 164.917 li
246.083 164.667 li
246.083 164.083 li
246.167 163.75 li
246.167 163.25 li
246.25 162.917 li
246.25 162.417 li
246.333 162.083 li
246.333 161.583 li
246.417 161.25 li
246.417 160.75 li
246.5 160.417 li
246.5 159.583 li
246.583 159.333 li
246.583 158.75 li
246.667 158.5 li
246.667 157.667 li
246.75 157.333 li
246.75 156.5 li
246.833 156.25 li
246.833 155.417 li
246.917 155.167 li
246.917 154 li
247 153.75 li
247 152.583 li
247.083 152.333 li
247.083 151.25 li
247.167 150.917 li
247.167 149.833 li
247.25 149.583 li
247.25 148.167 li
247.333 147.833 li
247.333 146.167 li
247.417 145.917 li
247.417 144.25 li
247.5 143.917 li
247.5 141.75 li
247.583 141.417 li
247.583 138.917 li
247.667 138.667 li
247.667 135.833 li
247.75 135.583 li
247.75 131.917 li
247.833 131.667 li
247.833 126.667 li
247.917 126.333 li
247.917 118 li
248 117.667 li
248 94.5 li
239.5 370.25 mo
239.5 355.417 li
239.417 355.167 li
239.417 343.75 li
239.333 343.417 li
239.333 337 li
239.25 336.75 li
239.25 332.25 li
239.167 332 li
239.167 328.583 li
239.083 328.333 li
239.083 325.583 li
239 325.25 li
239 322.75 li
238.917 322.5 li
238.917 320.5 li
238.833 320.25 li
238.833 318.25 li
238.75 318 li
238.75 316.583 li
238.667 316.333 li
238.667 314.917 li
238.583 314.667 li
238.583 313.25 li
238.5 313 li
238.5 311.833 li
238.417 311.583 li
238.417 310.5 li
238.333 310.167 li
238.333 309.083 li
238.25 308.75 li
238.25 307.917 li
238.167 307.667 li
238.167 306.833 li
238.083 306.583 li
238.083 305.75 li
238 305.417 li
238 304.583 li
237.917 304.333 li
237.917 303.5 li
237.833 303.167 li
237.833 302.667 li
237.75 302.333 li
237.75 301.833 li
237.667 301.5 li
237.667 300.667 li
237.583 300.417 li
237.583 299.833 li
237.5 299.583 li
237.5 299 li
237.417 298.75 li
237.417 298.167 li
237.333 297.917 li
237.333 297.583 li
237.25 297.333 li
237.25 296.75 li
237.167 296.5 li
237.167 295.917 li
237.083 295.667 li
237.083 295.417 li
237 295.083 li
237 294.5 li
236.917 294.25 li
236.917 294 li
236.833 293.667 li
236.833 293.167 li
236.75 292.833 li
236.75 292.583 li
236.667 292.333 li
236.667 292 li
236.583 291.75 li
236.583 291.167 li
236.5 290.917 li
236.5 290.667 li
236.417 290.333 li
236.417 290.083 li
236.333 289.75 li
236.333 289.5 li
236.25 289.25 li
236.25 288.917 li
236.167 288.667 li
236.167 288.417 li
236.083 288.083 li
236.083 287.833 li
236 287.583 li
236 287.25 li
235.917 287 li
235.917 286.75 li
235.833 286.417 li
235.833 286.167 li
235.75 285.917 li
235.75 285.583 li
235.667 285.333 li
235.667 285 li
235.583 284.75 li
235.583 284.5 li
235.5 284.167 li
235.5 283.917 li
235.417 283.667 li
235.417 283.333 li
235.333 283.083 li
235.333 282.833 li
235.25 282.5 li
235.167 282.25 li
235.167 282 li
235.083 281.667 li
235.083 281.417 li
235 281.167 li
235 280.833 li
234.917 280.583 li
234.833 280.25 li
234.833 280 li
234.75 279.75 li
234.75 279.417 li
234.667 279.167 li
234.667 278.917 li
234.583 278.584 li
234.5 278.334 li
234.5 278.084 li
234.417 277.75 li
234.417 277.5 li
234.333 277.25 li
234.25 276.917 li
234.25 276.667 li
234.167 276.417 li
234.167 276.084 li
234.083 275.834 li
234 275.5 li
234 275.25 li
233.917 275 li
233.833 274.667 li
233.833 274.417 li
233.75 274.167 li
233.75 273.834 li
233.667 273.584 li
233.583 273.334 li
233.583 273 li
233.5 272.75 li
233.417 272.5 li
233.417 272.167 li
233.333 271.917 li
233.333 271.667 li
233.25 271.334 li
233.167 271.084 li
233.167 270.834 li
233.083 270.5 li
233 270.25 li
233 269.917 li
232.917 269.667 li
232.833 269.417 li
232.833 269.084 li
232.75 268.834 li
232.75 268.584 li
232.667 268.25 li
232.583 268 li
232.583 267.75 li
232.5 267.417 li
232.417 267.167 li
232.417 266.917 li
232.333 266.584 li
232.333 266.334 li
232.25 266.084 li
232.167 265.75 li
232.167 265.5 li
232.083 265.167 li
232 264.917 li
232 264.667 li
231.917 264.334 li
231.917 264.084 li
231.833 263.834 li
231.75 263.5 li
231.75 263.25 li
231.667 263 li
231.667 262.667 li
231.583 262.417 li
231.5 262.167 li
231.5 261.833 li
231.417 261.584 li
231.417 261.333 li
231.333 261 li
231.25 260.75 li
231.25 260.417 li
231.167 260.167 li
231.167 259.917 li
231.083 259.583 li
231.083 259.333 li
231.083 259.333 mo
231 259.083 li
230.917 258.75 li
230.917 258.5 li
230.833 258.25 li
230.833 257.917 li
230.75 257.667 li
230.75 257.417 li
230.667 257.083 li
230.667 256.833 li
230.583 256.583 li
230.583 256.25 li
230.5 256 li
230.5 255.667 li
230.417 255.417 li
230.417 255.167 li
230.333 254.833 li
230.333 254.583 li
230.25 254.333 li
230.25 254 li
230.167 253.75 li
230.167 253.5 li
230.083 253.167 li
230.083 252.917 li
230 252.667 li
230 252.333 li
229.917 252.083 li
229.917 251.833 li
229.833 251.5 li
229.833 250.917 li
229.75 250.667 li
229.75 250.417 li
229.667 250.083 li
229.667 249.833 li
229.583 249.583 li
229.583 249 li
229.5 248.75 li
229.5 248.167 li
229.417 247.917 li
229.417 247.583 li
229.333 247.333 li
229.333 246.75 li
229.25 246.5 li
229.25 245.917 li
229.167 245.667 li
229.167 245.083 li
229.083 244.833 li
229.083 244 li
229 243.667 li
229 243.167 li
228.917 242.833 li
228.917 241.75 li
228.833 241.417 li
228.833 240.583 li
228.75 240.333 li
228.75 238.917 li
228.667 238.667 li
228.667 237 li
228.583 236.667 li
228.583 228.083 li
228.667 227.75 li
228.667 226.083 li
228.75 225.833 li
228.75 224.417 li
228.833 224.167 li
228.833 223 li
228.917 222.75 li
228.917 221.917 li
229 221.583 li
229 221.083 li
229.083 220.75 li
229.083 219.917 li
229.167 219.667 li
229.167 219.083 li
229.25 218.833 li
229.25 218.25 li
229.333 218 li
229.333 217.417 li
229.417 217.167 li
229.417 216.583 li
229.5 216.333 li
229.5 216 li
229.583 215.75 li
229.583 215.167 li
229.667 214.917 li
229.667 214.667 li
229.75 214.333 li
229.75 213.833 li
229.833 213.5 li
229.833 213.25 li
229.917 213 li
229.917 212.667 li
230 212.417 li
230 212.083 li
230.083 211.833 li
230.083 211.583 li
230.167 211.25 li
230.167 210.75 li
230.25 210.417 li
230.25 210.167 li
230.333 209.917 li
230.333 209.583 li
230.417 209.333 li
230.417 209.083 li
230.5 208.75 li
230.5 208.5 li
230.583 208.25 li
230.667 207.917 li
230.667 207.667 li
230.75 207.333 li
230.75 207.083 li
230.833 206.833 li
230.833 206.5 li
230.917 206.25 li
230.917 206 li
231 205.667 li
231 205.417 li
231.083 205.167 li
231.167 204.833 li
231.167 204.583 li
231.25 204.333 li
231.25 204 li
231.333 203.75 li
231.333 203.5 li
231.417 203.167 li
231.5 202.917 li
231.5 202.583 li
231.583 202.333 li
231.583 202.083 li
231.667 201.75 li
231.75 201.5 li
231.75 201.25 li
231.833 200.917 li
231.833 200.667 li
231.917 200.417 li
232 200.083 li
232 199.833 li
232.083 199.583 li
232.167 199.25 li
232.167 199 li
232.25 198.75 li
232.25 198.417 li
232.333 198.167 li
232.417 197.833 li
232.417 197.583 li
232.5 197.333 li
232.583 197 li
232.583 196.75 li
232.667 196.5 li
232.667 196.167 li
232.75 195.917 li
232.833 195.667 li
232.833 195.333 li
232.917 195.083 li
233 194.833 li
233 194.5 li
233.083 194.25 li
233.083 194 li
233.167 193.667 li
233.25 193.417 li
233.25 193.167 li
233.333 192.833 li
233.417 192.583 li
233.417 192.25 li
233.5 192 li
233.5 191.75 li
233.583 191.417 li
233.667 191.167 li
233.667 190.917 li
233.75 190.583 li
233.833 190.333 li
233.833 190.083 li
233.917 189.75 li
233.917 189.5 li
234 189.25 li
234.083 188.917 li
234.083 188.667 li
234.167 188.417 li
234.167 188.083 li
234.25 187.833 li
234.333 187.5 li
234.333 187.25 li
234.417 187 li
234.417 186.667 li
234.5 186.417 li
234.583 186.167 li
234.583 185.833 li
234.667 185.583 li
234.667 185.333 li
234.75 185 li
234.833 184.75 li
234.833 184.5 li
234.917 184.167 li
234.917 183.917 li
235 183.667 li
235 183.333 li
235.083 183.083 li
235.167 182.75 li
235.167 182.5 li
235.25 182.25 li
235.25 181.917 li
235.333 181.667 li
235.333 181.417 li
235.417 181.083 li
235.417 180.833 li
235.5 180.583 li
235.5 180.25 li
235.583 180 li
235.667 179.75 li
235.667 179.417 li
235.75 179.167 li
235.75 178.917 li
235.833 178.583 li
235.833 178.333 li
235.917 178 li
235.917 177.75 li
236 177.5 li
236 177.167 li
236.083 176.917 li
236.083 176.667 li
236.167 176.333 li
236.167 176.083 li
236.25 175.833 li
236.25 175.25 li
236.333 175 li
236.333 174.667 li
236.417 174.417 li
236.417 174.167 li
236.5 173.833 li
236.5 173.583 li
236.583 173.25 li
236.583 173 li
236.667 172.75 li
236.667 172.167 li
236.75 171.917 li
236.75 171.583 li
236.833 171.333 li
236.833 170.75 li
236.917 170.5 li
236.917 170.25 li
237 169.917 li
237 169.417 li
237.083 169.083 li
237.083 168.833 li
237.167 168.5 li
237.167 168 li
237.25 167.667 li
237.25 167.167 li
237.333 166.833 li
237.333 166.583 li
237.417 166.333 li
237.417 165.75 li
237.5 165.5 li
237.5 164.917 li
237.583 164.667 li
237.583 164.083 li
237.667 163.75 li
237.667 162.917 li
237.75 162.667 li
237.75 162.083 li
237.833 161.833 li
237.833 161 li
237.917 160.75 li
237.917 160.167 li
238 159.917 li
238 159 li
238.083 158.75 li
238.083 157.917 li
238.167 157.667 li
238.167 156.833 li
238.25 156.5 li
238.25 155.417 li
238.333 155.167 li
238.333 154 li
238.417 153.75 li
238.417 152.583 li
238.5 152.333 li
238.5 151.25 li
238.583 150.917 li
238.583 149.583 li
238.667 149.25 li
238.667 147.833 li
238.75 147.583 li
238.75 145.667 li
238.833 145.333 li
238.833 143.667 li
238.917 143.417 li
238.917 140.917 li
239 140.583 li
239 138.083 li
239.083 137.833 li
239.083 134.417 li
239.167 134.167 li
239.167 129.667 li
239.25 129.417 li
239.25 123 li
239.333 122.75 li
239.333 107.667 li
239.417 107.333 li
239.417 94.5 li
230.833 370.25 mo
230.833 348.75 li
230.75 348.5 li
230.75 338.667 li
230.667 338.417 li
230.667 332.5 li
230.583 332.25 li
230.583 328.083 li
230.5 327.75 li
230.5 324.417 li
230.417 324.167 li
230.417 321.333 li
230.333 321.083 li
230.333 318.833 li
230.25 318.583 li
230.25 316.333 li
230.167 316.083 li
230.167 314.333 li
230.083 314.083 li
230.083 312.417 li
230 312.167 li
230 310.75 li
229.917 310.5 li
229.917 309.083 li
229.833 308.75 li
229.833 307.667 li
229.75 307.417 li
229.75 306.25 li
229.667 306 li
229.667 304.917 li
229.583 304.583 li
229.583 303.5 li
229.5 303.167 li
229.5 302.333 li
229.417 302.083 li
229.417 301.25 li
229.333 301 li
229.333 300.167 li
229.25 299.833 li
229.25 299 li
229.167 298.75 li
229.167 298.167 li
229.083 297.917 li
229.083 297.083 li
229 296.75 li
229 296.25 li
228.917 295.917 li
228.917 295.083 li
228.833 294.833 li
228.833 294.25 li
228.75 294 li
228.75 293.417 li
228.667 293.167 li
228.667 292.583 li
228.583 292.333 li
228.583 291.75 li
228.5 291.5 li
228.5 290.917 li
228.417 290.667 li
228.417 290.083 li
228.333 289.75 li
228.333 289.25 li
228.25 288.917 li
228.25 288.667 li
228.167 288.417 li
228.167 287.833 li
228.083 287.583 li
228.083 287 li
228 286.75 li
228 286.417 li
227.917 286.167 li
227.917 285.583 li
227.833 285.333 li
227.833 285 li
227.75 284.75 li
227.75 284.167 li
227.667 283.917 li
227.667 283.667 li
227.583 283.333 li
227.583 282.833 li
227.5 282.5 li
227.5 282.25 li
227.417 282 li
227.417 281.417 li
227.333 281.167 li
227.333 280.833 li
227.25 280.583 li
227.25 280.25 li
227.167 280 li
227.167 280 mo
227.167 279.417 li
227.083 279.167 li
227.083 278.917 li
227 278.583 li
227 278.333 li
226.917 278.083 li
226.917 277.5 li
226.833 277.25 li
226.833 276.917 li
226.75 276.667 li
226.75 276.417 li
226.667 276.083 li
226.667 275.833 li
226.583 275.5 li
226.583 275 li
226.5 274.667 li
226.5 274.417 li
226.417 274.167 li
226.417 273.833 li
226.333 273.583 li
226.333 273.333 li
226.25 273 li
226.25 272.5 li
226.167 272.167 li
226.167 271.917 li
226.083 271.667 li
226.083 271.333 li
226 271.083 li
226 270.833 li
225.917 270.5 li
225.917 270.25 li
225.833 269.917 li
225.833 269.417 li
225.75 269.083 li
225.75 268.833 li
225.667 268.583 li
225.667 268.25 li
225.583 268 li
225.583 267.75 li
225.5 267.417 li
225.5 266.917 li
225.417 266.583 li
225.417 266.333 li
225.333 266.083 li
225.333 265.75 li
225.25 265.5 li
225.25 265.167 li
225.167 264.917 li
225.167 264.333 li
225.083 264.083 li
225.083 263.833 li
225 263.5 li
225 263 li
224.917 262.667 li
224.917 262.417 li
224.833 262.167 li
224.833 261.833 li
224.75 261.583 li
224.75 261 li
224.667 260.75 li
224.667 260.417 li
224.583 260.167 li
224.583 259.583 li
224.5 259.333 li
224.5 259.083 li
224.417 258.75 li
224.417 258.25 li
224.333 257.917 li
224.333 257.417 li
224.25 257.083 li
224.25 256.833 li
224.167 256.583 li
224.167 256 li
224.083 255.667 li
224.083 255.167 li
224 254.833 li
224 254.333 li
223.917 254 li
223.917 253.5 li
223.833 253.167 li
223.833 252.667 li
223.75 252.333 li
223.75 251.833 li
223.667 251.5 li
223.667 250.917 li
223.583 250.667 li
223.583 249.833 li
223.5 249.583 li
223.5 248.75 li
223.417 248.417 li
223.417 247.917 li
223.333 247.583 li
223.333 246.5 li
223.25 246.167 li
223.25 245.333 li
223.167 245.083 li
223.167 244 li
223.083 243.667 li
223.083 242.333 li
223 242 li
223 240.583 li
222.917 240.333 li
222.917 238.417 li
222.833 238.083 li
222.833 233.333 li
222.75 233.083 li
222.75 231.667 li
222.833 231.417 li
222.833 226.667 li
222.917 226.333 li
222.917 224.417 li
223 224.167 li
223 222.75 li
223.083 222.5 li
223.083 221.083 li
223.167 220.75 li
223.167 219.667 li
223.25 219.417 li
223.25 218.25 li
223.333 218 li
223.333 217.167 li
223.417 216.833 li
223.417 216 li
223.5 215.75 li
223.5 215.167 li
223.583 214.917 li
223.583 214.083 li
223.667 213.833 li
223.667 213.25 li
223.75 213 li
223.75 212.417 li
223.833 212.083 li
223.833 211.583 li
223.917 211.25 li
223.917 210.75 li
224 210.417 li
224 209.917 li
224.083 209.583 li
224.083 209.083 li
224.167 208.75 li
224.167 208.25 li
224.25 207.917 li
224.25 207.667 li
224.333 207.333 li
224.333 206.833 li
224.417 206.5 li
224.417 206 li
224.5 205.667 li
224.5 205.417 li
224.583 205.167 li
224.583 204.583 li
224.667 204.333 li
224.667 204 li
224.75 203.75 li
224.75 203.167 li
224.833 202.917 li
224.833 202.583 li
224.917 202.333 li
224.917 201.75 li
225 201.5 li
225 201.25 li
225.083 200.917 li
225.083 200.667 li
225.167 200.417 li
225.167 199.833 li
225.25 199.583 li
225.25 199.25 li
225.333 199 li
225.333 198.75 li
225.417 198.417 li
225.417 198.167 li
225.5 197.833 li
225.5 197.333 li
225.583 197 li
225.583 196.75 li
225.667 196.5 li
225.667 196.167 li
225.75 195.917 li
225.75 195.667 li
225.833 195.333 li
225.833 194.833 li
225.917 194.5 li
225.917 194.25 li
226 194 li
226 193.667 li
226.083 193.417 li
226.083 193.167 li
226.167 192.833 li
226.167 192.583 li
226.25 192.25 li
226.25 191.75 li
226.333 191.417 li
226.333 191.167 li
226.417 190.917 li
226.417 190.583 li
226.5 190.333 li
226.5 190.083 li
226.583 189.75 li
226.583 189.25 li
226.667 188.917 li
226.667 188.667 li
226.75 188.417 li
226.75 188.083 li
226.833 187.833 li
226.833 187.5 li
226.917 187.25 li
226.917 186.667 li
227 186.417 li
227 186.167 li
227.083 185.833 li
227.083 185.583 li
227.167 185.333 li
227.167 184.75 li
227.25 184.5 li
227.25 184.167 li
227.333 183.917 li
227.333 183.667 li
227.417 183.333 li
227.417 182.75 li
227.5 182.5 li
227.5 182.25 li
227.583 181.917 li
227.583 181.417 li
227.667 181.083 li
227.667 180.833 li
227.75 180.583 li
227.75 180 li
227.833 179.75 li
227.833 179.417 li
227.917 179.167 li
227.917 178.583 li
228 178.333 li
228 178 li
228.083 177.75 li
228.083 177.167 li
228.167 176.917 li
228.167 176.333 li
228.25 176.083 li
228.25 175.5 li
228.333 175.25 li
228.333 175 li
228.417 174.667 li
228.417 174.167 li
228.5 173.833 li
228.5 173.25 li
228.583 173 li
228.583 172.417 li
228.667 172.167 li
228.667 171.583 li
228.75 171.333 li
228.75 170.75 li
228.833 170.5 li
228.833 169.667 li
228.917 169.417 li
228.917 168.833 li
229 168.5 li
229 168 li
229.083 167.667 li
229.083 166.833 li
229.167 166.583 li
229.167 165.75 li
229.25 165.5 li
229.25 164.917 li
229.333 164.667 li
229.333 163.75 li
229.417 163.5 li
229.417 162.417 li
229.5 162.083 li
229.5 161.25 li
229.583 161 li
229.583 160.167 li
229.667 159.917 li
229.667 158.75 li
229.75 158.5 li
229.75 157.333 li
229.833 157.083 li
229.833 155.667 li
229.917 155.417 li
229.917 154 li
230 153.75 li
230 152.333 li
230.083 152.083 li
230.083 150.417 li
230.167 150.083 li
230.167 148.417 li
230.25 148.167 li
230.25 145.917 li
230.333 145.667 li
230.333 143.083 li
230.417 142.833 li
230.417 140.083 li
230.5 139.75 li
230.5 135.833 li
230.583 135.583 li
230.583 130.833 li
230.667 130.583 li
230.667 122.417 li
230.75 122.167 li
230.75 94.5 li
222.167 370.25 mo
222.167 340.083 li
222.083 339.833 li
222.083 330.583 li
222 330.333 li
222 324.75 li
221.917 324.417 li
221.917 320.25 li
221.833 320 li
221.833 316.583 li
221.75 316.333 li
221.75 313.25 li
221.667 313 li
221.667 310.75 li
221.583 310.5 li
221.583 308.25 li
221.5 307.917 li
221.5 306 li
221.417 305.75 li
221.417 304 li
221.333 303.75 li
221.333 302.083 li
221.25 301.833 li
221.25 300.417 li
221.167 300.167 li
221.167 298.75 li
221.083 298.417 li
221.083 297.083 li
221 296.75 li
221 295.667 li
220.917 295.417 li
220.917 294.25 li
220.833 294 li
220.833 292.833 li
220.75 292.583 li
220.75 291.75 li
220.667 291.5 li
220.667 290.333 li
220.583 290.083 li
220.583 289.25 li
220.5 288.917 li
220.5 287.833 li
220.417 287.583 li
220.417 286.75 li
220.333 286.417 li
220.333 285.583 li
220.25 285.333 li
220.25 284.5 li
220.167 284.167 li
220.167 283.333 li
220.083 283.083 li
220.083 282.25 li
220 282 li
220 281.167 li
219.917 280.833 li
219.917 280.25 li
219.833 280 li
219.833 279.167 li
219.75 278.917 li
219.75 278.083 li
219.667 277.75 li
219.667 277.25 li
219.583 276.917 li
219.583 276.083 li
219.5 275.833 li
219.5 275 li
219.417 274.667 li
219.417 274.167 li
219.333 273.833 li
219.333 273 li
219.25 272.75 li
219.25 271.917 li
219.167 271.667 li
219.167 271.083 li
219.083 270.833 li
219.083 269.917 li
219 269.667 li
219 268.833 li
218.917 268.583 li
218.917 268 li
218.833 267.75 li
218.833 266.917 li
218.75 266.583 li
218.75 265.75 li
218.667 265.5 li
218.667 264.667 li
218.583 264.333 li
218.583 263.833 li
218.5 263.5 li
218.5 262.667 li
218.417 262.417 li
218.417 261.583 li
218.333 261.333 li
218.333 260.417 li
218.25 260.167 li
218.25 259.333 li
218.167 259.083 li
218.167 257.917 li
218.083 257.667 li
218.083 256.833 li
218 256.583 li
218 255.417 li
217.917 255.167 li
217.917 254.333 li
217.833 254 li
217.833 252.917 li
217.75 252.667 li
217.75 251.25 li
217.667 250.917 li
217.667 249.833 li
217.583 249.583 li
217.583 247.917 li
217.5 247.583 li
217.5 245.917 li
217.417 245.667 li
217.417 243.667 li
217.333 243.417 li
217.333 240.917 li
217.25 240.583 li
217.25 236.667 li
217.167 236.417 li
217.167 228.333 li
217.25 228.083 li
217.25 224.167 li
217.333 223.833 li
217.333 221.333 li
217.417 221.083 li
217.417 219.083 li
217.5 218.833 li
217.5 217.167 li
217.583 216.833 li
217.583 215.167 li
217.667 214.917 li
217.667 213.833 li
217.75 213.5 li
217.75 212.083 li
217.833 211.833 li
217.833 211 li
217.917 210.75 li
217.917 209.583 li
218 209.333 li
218 208.25 li
218.083 207.917 li
218.083 207.083 li
218.167 206.833 li
218.167 205.667 li
218.25 205.417 li
218.25 204.583 li
218.333 204.333 li
218.333 203.5 li
218.417 203.167 li
218.417 202.333 li
218.5 202.083 li
218.5 201.25 li
218.583 200.917 li
218.583 200.083 li
218.667 199.833 li
218.667 199.25 li
218.75 199 li
218.75 198.167 li
218.833 197.833 li
218.833 197 li
218.917 196.75 li
218.917 196.167 li
219 195.917 li
219 195.083 li
219.083 194.833 li
219.083 194 li
219.167 193.667 li
219.167 193.167 li
219.25 192.833 li
219.25 192 li
219.333 191.75 li
219.333 190.917 li
219.417 190.583 li
219.417 190.083 li
219.5 189.75 li
219.5 188.917 li
219.583 188.667 li
219.583 187.833 li
219.667 187.5 li
219.667 187 li
219.75 186.667 li
219.75 185.833 li
219.833 185.583 li
219.833 184.75 li
219.917 184.5 li
219.917 183.667 li
220 183.333 li
220 182.5 li
220.083 182.25 li
220.083 181.417 li
220.167 181.083 li
220.167 180.25 li
220.25 180 li
220.25 179.167 li
220.333 178.917 li
220.333 178 li
220.417 177.75 li
220.417 176.917 li
220.5 176.667 li
220.5 175.833 li
220.583 175.5 li
220.583 174.417 li
220.667 174.167 li
220.667 173.25 li
220.75 173 li
220.75 171.917 li
220.833 171.583 li
220.833 170.5 li
220.917 170.25 li
220.917 169.083 li
221 168.833 li
221 167.667 li
221.083 167.417 li
221.083 166 li
221.167 165.75 li
221.167 164.333 li
221.25 164.083 li
221.25 162.667 li
221.333 162.417 li
221.333 160.75 li
221.417 160.417 li
221.417 158.75 li
221.5 158.5 li
221.5 156.5 li
221.583 156.25 li
221.583 154 li
221.667 153.75 li
221.667 151.25 li
221.75 150.917 li
221.75 147.833 li
221.833 147.583 li
221.833 144.25 li
221.917 143.917 li
221.917 139.167 li
222 138.917 li
222 132.25 li
222.083 131.917 li
222.083 117.667 li
222.167 117.417 li
222.167 94.5 li
213.583 370.25 mo
213.583 347.333 li
213.5 347.083 li
213.5 323.333 li
213.417 323 li
213.417 313.25 li
213.333 313 li
213.333 306 li
213.25 305.75 li
213.25 300.167 li
213.167 299.833 li
213.167 295.917 li
213.083 295.667 li
213.083 292.583 li
213 292.333 li
213 289.5 li
212.917 289.25 li
212.917 287 li
212.833 286.75 li
212.833 284.5 li
212.75 284.167 li
212.75 282 li
212.667 281.667 li
212.667 279.417 li
212.583 279.167 li
212.583 276.917 li
212.5 276.667 li
212.5 274.417 li
212.417 274.167 li
212.417 271.917 li
212.333 271.667 li
212.333 268.833 li
212.25 268.583 li
212.25 266.083 li
212.167 265.75 li
212.167 263.25 li
212.083 263 li
212.083 260.75 li
212 260.417 li
212 258.25 li
211.917 257.917 li
211.917 255.667 li
211.833 255.417 li
211.833 252.083 li
211.75 251.833 li
211.75 248.417 li
211.667 248.167 li
211.667 244 li
211.583 243.667 li
211.583 220.5 li
211.667 220.25 li
211.667 215.5 li
211.75 215.167 li
211.75 213 li
211.833 212.667 li
211.833 210.417 li
211.917 210.167 li
211.917 207.917 li
212 207.667 li
212 205.417 li
212.083 205.167 li
212.083 202.333 li
212.167 202.083 li
212.167 199.583 li
212.25 199.25 li
212.25 196.5 li
212.333 196.167 li
212.333 193.417 li
212.417 193.167 li
212.417 190.917 li
212.5 190.583 li
212.5 188.417 li
212.583 188.083 li
212.583 185.833 li
212.667 185.583 li
212.667 183.333 li
212.75 183.083 li
212.75 180.583 li
212.833 180.25 li
212.833 178 li
212.917 177.75 li
212.917 175.25 li
213 175 li
213 172.417 li
213.083 172.167 li
213.083 169.083 li
213.167 168.833 li
213.167 164.917 li
213.25 164.667 li
213.25 159 li
213.333 158.75 li
213.333 151.5 li
213.417 151.25 li
213.417 141.417 li
213.5 141.167 li
213.5 94.5 li
@
grestore
292.167 232.5 mo
292.167 231.583 li
292.083 230.75 li
291.917 229.917 li
291.75 229 li
291.5 228.167 li
291.25 227.333 li
290.833 226.583 li
290.5 225.75 li
290 225 li
289.5 224.333 li
289 223.583 li
288.417 222.917 li
287.75 222.333 li
287.083 221.75 li
286.417 221.25 li
285.667 220.75 li
284.917 220.333 li
284.083 219.917 li
283.333 219.583 li
282.5 219.333 li
281.667 219.083 li
280.75 218.917 li
279.917 218.75 li
279 218.667 li
278.167 218.667 li
277.25 218.75 li
276.417 218.833 li
275.583 219 li
274.667 219.167 li
273.833 219.417 li
273 219.75 li
272.25 220.083 li
271.5 220.5 li
270.75 221 li
270 221.5 li
269.333 222.083 li
268.667 222.667 li
268.083 223.25 li
267.5 223.917 li
267 224.667 li
266.5 225.417 li
266.083 226.167 li
265.667 226.917 li
265.417 227.75 li
265.083 228.583 li
264.917 229.417 li
264.75 230.333 li
264.583 231.167 li
264.583 232.083 li
264.583 232.917 li
264.583 233.833 li
264.75 234.667 li
264.917 235.583 li
265.083 236.417 li
265.417 237.25 li
265.667 238.083 li
266.083 238.833 li
266.5 239.583 li
267 240.333 li
267.5 241.083 li
268.083 241.75 li
268.667 242.333 li
269.333 242.917 li
270 243.5 li
270.75 244 li
271.5 244.5 li
272.25 244.917 li
273 245.25 li
273.833 245.583 li
274.667 245.833 li
275.583 246 li
276.417 246.167 li
277.25 246.25 li
278.167 246.333 li
279 246.333 li
279.917 246.25 li
280.75 246.083 li
281.667 245.917 li
282.5 245.667 li
283.333 245.417 li
284.083 245.083 li
284.917 244.667 li
285.667 244.25 li
286.417 243.75 li
287.083 243.25 li
287.75 242.667 li
288.417 242.083 li
289 241.417 li
289.5 240.667 li
290 240 li
290.5 239.25 li
290.833 238.417 li
291.25 237.667 li
291.5 236.833 li
291.75 236 li
291.917 235.083 li
292.083 234.25 li
292.167 233.417 li
292.167 232.5 li
292.167 232.5 li
cp
0 0 0 0 cmyk
ef
209.25 94.25 mo
209.25 97 li
209.25 370.833 mo
209.25 368 li
209.25 370.833 mo
209.25 94.25 li
209.25 370.833 mo
347.5 370.833 li
347.5 370.833 mo
347.5 94.25 li
209.25 370.833 mo
209.25 94.25 li
209.25 94.25 mo
347.5 94.25 li
209.25 370.833 mo
347.5 370.833 li
292.167 232.5 mo
292.167 231.583 li
292.083 230.75 li
291.917 229.917 li
291.75 229 li
291.5 228.167 li
291.25 227.333 li
290.833 226.583 li
290.5 225.75 li
290 225 li
289.5 224.333 li
289 223.583 li
288.417 222.917 li
287.75 222.333 li
287.083 221.75 li
286.417 221.25 li
285.667 220.75 li
284.917 220.333 li
284.083 219.917 li
283.333 219.583 li
282.5 219.333 li
281.667 219.083 li
280.75 218.917 li
279.917 218.75 li
279 218.667 li
278.167 218.667 li
277.25 218.75 li
276.417 218.833 li
275.583 219 li
274.667 219.167 li
273.833 219.417 li
273 219.75 li
272.25 220.083 li
271.5 220.5 li
270.75 221 li
270 221.5 li
269.333 222.083 li
268.667 222.667 li
268.083 223.25 li
267.5 223.917 li
267 224.667 li
266.5 225.417 li
266.083 226.167 li
265.667 226.917 li
265.417 227.75 li
265.083 228.583 li
264.917 229.417 li
264.75 230.333 li
264.583 231.167 li
264.583 232.083 li
264.583 232.917 li
264.583 233.833 li
264.75 234.667 li
264.917 235.583 li
265.083 236.417 li
265.417 237.25 li
265.667 238.083 li
266.083 238.833 li
266.5 239.583 li
267 240.333 li
267.5 241.083 li
268.083 241.75 li
268.667 242.333 li
269.333 242.917 li
270 243.5 li
270.75 244 li
271.5 244.5 li
272.25 244.917 li
273 245.25 li
273.833 245.583 li
274.667 245.833 li
275.583 246 li
276.417 246.167 li
277.25 246.25 li
278.167 246.333 li
279 246.333 li
279.917 246.25 li
280.75 246.083 li
281.667 245.917 li
282.5 245.667 li
283.333 245.417 li
284.083 245.083 li
284.917 244.667 li
285.667 244.25 li
286.417 243.75 li
287.083 243.25 li
287.75 242.667 li
288.417 242.083 li
289 241.417 li
289.5 240.667 li
290 240 li
290.5 239.25 li
290.833 238.417 li
291.25 237.667 li
291.5 236.833 li
291.75 236 li
291.917 235.083 li
292.083 234.25 li
292.167 233.417 li
292.167 232.5 li
292.167 232.5 li
0 0 0 1 cmyk
@
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero 207{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf206.5 382.914 mo(0)sh278.417 94.25 mo
278.417 97 li
278.417 370.833 mo
278.417 368 li
@
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero 4{/.notdef}rp /five 202{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf271.5 382.914 mo(0.)[5.56152 0 ]xsh279.836 382.914 mo(5)sh347.5 94.25 mo
347.5 97 li
347.5 370.833 mo
347.5 368 li
@
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf344.742 382.914 mo(1)sh347.5 370.833 mo
344.75 370.833 li
209.25 370.833 mo
212 370.833 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf200.828 374.5 mo(0)sh347.5 343.167 mo
344.75 343.167 li
209.25 343.167 mo
212 343.167 li
@
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 346.836 mo(0.)[5.56152 0 ]xsh200.836 346.836 mo(2)sh347.5 315.5 mo
344.75 315.5 li
209.25 315.5 mo
212 315.5 li
@
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five 202{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 319.164 mo(0.)[5.56152 0 ]xsh200.836 319.164 mo(4)sh347.5 287.833 mo
344.75 287.833 li
209.25 287.833 mo
212 287.833 li
@
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five /six 201{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 291.5 mo(0.)[5.56152 0 ]xsh200.836 291.5 mo(6)sh347.5 260.167 mo
344.75 260.167 li
209.25 260.167 mo
212 260.167 li
@
%%IncludeResource: font Helvetica
/OWVVBC+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 199{/.notdef}rp]OWVVBC+Helvetica nfOWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 263.836 mo(0.)[5.56152 0 ]xsh200.836 263.836 mo(8)sh347.5 232.5 mo
344.75 232.5 li
209.25 232.5 mo
212 232.5 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf200.828 236.164 mo(1)sh347.5 204.833 mo
344.75 204.833 li
209.25 204.833 mo
212 204.833 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 208.5 mo(1.)[5.56152 0 ]xsh200.836 208.5 mo(2)sh347.5 177.167 mo
344.75 177.167 li
209.25 177.167 mo
212 177.167 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 180.836 mo(1.)[5.56152 0 ]xsh200.836 180.836 mo(4)sh347.5 149.5 mo
344.75 149.5 li
209.25 149.5 mo
212 149.5 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 153.164 mo(1.)[5.56152 0 ]xsh200.836 153.164 mo(6)sh347.5 121.833 mo
344.75 121.833 li
209.25 121.833 mo
212 121.833 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf192.492 125.5 mo(1.)[5.56152 0 ]xsh200.836 125.5 mo(8)sh347.5 94.25 mo
344.75 94.25 li
209.25 94.25 mo
212 94.25 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf200.828 97.9141 mo(2)sh347.5 370.833 mo
347.5 94.25 li
209.25 370.833 mo
209.25 94.25 li
209.25 94.25 mo
347.5 94.25 li
209.25 370.833 mo
347.5 370.833 li
@
209.167 77.25 mo
209.167 57.25 li
347.5 57.25 li
347.5 77.25 li
209.167 77.25 li
cp
0 0 0 0 cmyk
ef
209.167 77.25 mo
209.167 57.25 li
347.5 57.25 li
347.5 77.25 li
209.167 77.25 li
@
209.167 57.25 mo
209.167 77.25 li
347.5 77.25 li
347.5 57.25 li
cp
gsave
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 63 
/Lookup <~
s7mEIs7lm,rUKpip#Q/Rm+MF>l-]P3jN@N'iPY]ri55NphSB0lgq<[ffs^q]eZJlPd@pU@bEMu,`.7mg
\nM-EY=norW%J&MTb%2(ScA`jP5l$lM#\=lKE*+pK`En/LB'gEL&bBWK`GujJcLB&I/oT6GQ=cEDudTP
B)p3W?i]$`<<2Ri8HAVf495B]/cbnO+9;EA&-2D(#lsSt"Vgq9!\F<N!(?he!*]C&!-%r<!/LRS!1s2j
!4)V)!6+s<!7h)L!94"Y!:9^c!;6?l!;c]q!<)ot!<<'!&HDb4+92?I/-#Vb2?3\'4TGFA6i[0[9)np#
~>
>>
/CSD add_res
/0 /CSD get_res idxcs
clp
[1 0 0 -1 0 425 ]ct
[138.333 0 0 20 209.167 347.75 ]ct
snap_to_device
<<
/T 1
/W 64 
/H 1 
/M[64 0 0 -1 0 1 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`=52*$$(B+<_pR,UFcb-n-Vr/1iJ-0JP==1c70M3&s#]4?Ykm
~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
224.333 77.25 mo
224.333 75.8335 li
224.333 57.25 mo
224.333 58.5835 li
209.167 77.25 mo
209.167 57.25 li
209.167 57.25 mo
347.5 57.25 li
347.5 77.25 mo
347.5 57.25 li
209.167 77.25 mo
209.167 57.25 li
209.167 57.25 mo
347.5 57.25 li
209.167 77.25 mo
347.5 77.25 li
0 0 0 1 cmyk
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf221.578 54.3281 mo(0)sh252 77.25 mo
252 75.8335 li
252 57.25 mo
252 58.5835 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf249.25 54.3281 mo(5)sh279.667 77.25 mo
279.667 75.8335 li
279.667 57.25 mo
279.667 58.5835 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf274.164 54.3281 mo(10)[5.56152 0 ]xsh307.25 77.25 mo
307.25 75.8335 li
307.25 57.25 mo
307.25 58.5835 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf301.75 54.3281 mo(15)[5.56152 0 ]xsh334.917 77.25 mo
334.917 75.8335 li
334.917 57.25 mo
334.917 58.5835 li
@
OWVVBC+Helvetica*1 [10 0 0 -10 0 0 ]msf329.406 54.3281 mo(20)[5.56152 0 ]xsh347.5 77.25 mo
347.5 57.25 li
209.167 77.25 mo
209.167 57.25 li
209.167 57.25 mo
347.5 57.25 li
209.167 77.25 mo
347.5 77.25 li
@
0 lj
4 ml
182 389 mo
155 389 li
/1 
<<
/Name (All)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0.74902 0.678431 0.670588 0.901961 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
@
191 398 mo
191 425 li
@
182 36 mo
155 36 li
@
191 27 mo
191 0 li
@
366 36 mo
393 36 li
@
357 27 mo
357 0 li
@
366 389 mo
393 389 li
@
357 398 mo
357 425 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
] del_res
/OWVVBC+Helvetica*1 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Cameron Bracken) ()%%Title: (stokes_solution.eps)%%CreationDate: 4/24/08 8:49 PM%AI9_DataStream%Gb!j.k?;@WdO>%LJFC;Y%*i1qRHt?L*"=a_";mYJfJ>ZTcF"aZ[">(g*W#/KcStH3g+JX*8lDX_jS.hmZU)2bprF!GSb(!<YF%n-%PNel%,mk^.^Y6Bd9^GW6_q(pH),)^'_cCD*.1CR@nKd9Lr,)qUVi;3dddYgL^#&6chL)NSqPJ^>*Y,%Q[G'mDe!YA`%BAWndqO$[%7YJ[SjD2<\l]d1bIUhZf`WUgKdVF<_mBt8PrFT]4o-WN$JE9kfS(e87#3leJ-K(XbX#Fg</l7$Ym@uipSj5U<'n<sc9W)R6W*p;2%W,Pp)TuWJj$F+[s.nJm]<'$5)7JoGBAhrR;<Y2Sdd2R>Al?m\$drAmO*=dN%Q/7ITUOH_NNG=cT%/Nclb1QolV:++f:4Lc/9KRpS%67S9hj[o6JIo\68#r%ZqrgsfLD`TD2&q)f%s)^@&b+Uh/FU-CSjHC/8U>$kk4<./#]Dk0=TmiS\]peUTj4cj9aGrPho!?eR]@4Y#%;1;a;21S!prkGE3,mZGhnOI5Lf$:KY!t+,%)*o]<F&ZrQmYiMcD;!P4;.ji(]YhFBb/jeONU.BiP#k=hZJKCIl'5/VJY_3mbDnEU%1eHtc)W:@)`G%/I(MG/Aa5)gE+K'<3rE:(_g\U96-#\P9_3Mtpe:1Wo5LMtWg?Gt#:qDUO>N&Pb7hB.-f;Q[:TNrE.JbWn9q=A8#%%+)lU%6mCOp)03iT?fuu-]adWs3-5Hc32\Jl_)YF5K8\43aP\+`"1VYc5;g?ieM#C*&!u8g?nPOnPZ,>Rs*e(;mb[KnT,Gi'>N(H%d3'hH>[&2MJMC=En%I#]isd#ar4[_4DlK"Gn1Qrp%f'goqIrIsBpVfV,rf0;VlSbbE:ogtOPgTTmZ>:+C:HXZPo2lY&_*5/lA<hD%gih`<UGIq>;$T1RGRMn\5+-T64W)/6dt76.DpE[Bc87_"N.D&*cT(bi^G0C\H\b:(]Ji])m<ED+qMc94k;84mC:aS[1J[e>2&@2?%VsVcVr3-l"TCa%c:QG\uok'D:G;.L.e:2sl#4_\O#C?l(lG(5Vqn7W^l4,lE\_id]Aj,p`+uBj9C&M\qRD9s"_g`-TSU\+pNB[>t%<YsbX4nJjD=79hgFpH$)Hm!=[lh#t]?KZa:Ij:1CbdolfO\\H&5K45UA/m(W:&1\$+2Sp6Zr*1LSNd#X04[I[>cIRRe;:s)Dusj"%s67B%d>4[I]WQ[/+#h9"Q=f/#mO@!A>/0Sd>b*8AhF.NIQ3V.b5!nWFgTWs4>jM9gfpHlg%cT,IFo"+g:!aOC`"/gn>,"2&P*Jnm%3`dN$3?mr;HFY)284NgIS04A$or6t8-Q';qj-Hk1Q5$`8VC%LESGG+2Ljl*VL@pSZ4[s4on:i&iRd=]`r,XdkBT-U&?=Pl^qf"OY%I)fG#oK1An$$4JSna"F&SJsTX)(HmZ$"d,46#-a=J'RqkS\im%r"Rc!E?0V#$9+$A,/jB.C:lLc=m+rAW8i.9;kgRO]jb0*,>rW4%ArRl.P)=Ggmq=4FIo@9pL5uoXJ*]""6K*hmb_WLLcp"(F)ngFhrB61\dDs:FHo)nQB._%*\u<Utn2"$l-6#2<G<QpOO-iY]dAD[^%it\obG[lDUn8G->fhB'2kon_K&eiDS72tSXS\[h:.jY<`m\-KSHMtJ5*;3_!jBlN[8OC9q7+)H"+)kD.c:1WnH+iFd:f1ddS;iO5%mmBn/YWZfG]GHRl-PDWi[[I?4$B0B*P$]>FXntnL^g`;k-tliBbns4U&+=f8$Sb-C@g/NT\t4&B*Tr<_>AsS&^%q27o'*h*%XVCZ%fHRGe$5c,2s1b=g$iGXnq1);qfTLj%[tH#us125B[WMtVn@uO-63A5`pgig$bSi/af30A0F#8WI[rFq<4oVJ\lXF#VS_]k/p!lT!%/qEQ#HCaBZ8>><0f2h7N,LqJl)hsX_s)`S)&_0G^JkdT[I:GCFWu@iAEQg>p+a?6;A/t;5TY5WS59$@-mdB_RN%qMA/E:&Hckq*a%>cSLi%pH`(T<Tr(^pH^t_"MKn(QI/?`%3><[:K+QEI1LZA:UHor5G-m>oF,K;t71`^Z1;uin%J3.s9?>_0_4Aqs^PaLu<^VNP6C-%%poV705n^Sl@&LTGhWN#E/!g'cq.$QZ0h'*B)dnj2/1Mi$Gp.b=8Y_Y8q3gGq(K.Fpe1!$s&-J.^XR/t0=@;F9C6?k::oLmi`G,H%i`G,Hi`G,Hi`G,Hi`G,Hi`G,Hi`G,Hi`G-siE+^I_`"fMLMLH#%b&Mu*M/Dl4"MWRG;r(cmkB^ehr,C)^Vhc(a/,7Q"DuA/dpERo%X$/!-s$Hkh:^bQ$4/J^-Y'Va(oG[&$8GUdn=\!W0U=&:#V]FReMl-C.nnpoZm"bUc%.;/oQKKHqog<S6*dt\UWhZK-0MIG0LuL&p%Uki,QTUPmV!MbN3TLIs7?WGurYq^*?r3(,54'ENkXc"2+NU^rXrSb,,2JdS2$b*g#J+n9l<#faKVrMZ92XO1iBYbkA_st8,5?#N.%lDLjiTA<h#g_gYCaW!H2PgN+^ch'0KLnHT/3LIJYdhklhd9aGVJiA6LrMS&4WOMr#=PsY84sal7:F=;ps/"42r3,.40YLo\]@1pj%)&4suGK88#i]n%%`RrPs\F*&:n0"7A7q8`9qNn"2BM/Y5j6nmp]oJS9ml7BJRl5T\+4j^;;#g*DL>fOPPNf=OG<+?K>DKa\"%47k%o?\7o],^kG^-I,B0C$^[$bLNOric@]e+bS7K1W9$qVTSV&In<K@F'7]c/B?kZ<HF>8cmc&bd-atJ!VD'BlEpLe$'_O^KiGJ^HE&]%Ru!o):1O+eAh:^sp/mJu-7386Vnr;3gR`l*)3BIFG6aBEjI#!f6(]/'*HO"b(%]2ubf@rqH8lkQ3]K%pY93W)B_pIhk]`n`2NiWW%m72?AI]U!nUP#$n73U,:3'>?0)rkXRfGM*2/I9,R%LB;!Gi)(dEbF_ZNB<?Lpn*RjpePNb!m?D*(^5g>$tiKE0(ht$s.7qGh<K,Q%W!a_Vrn@g#Zbq@;\gPtsn6=]`U*+,ZA$Eu_#fM`%dqMO3@rJ^$CCFAe@frH,V3JGN)+':p[g=3s30Xk2O;-3H%b*T-9Kp-k\F/d7%YS#*[#G^$Ss#iWI3#[GDK1*E21J;+*5G(Y?#f46$M42WP\1sA0)JG,<I\V5$D==:t+(^\9A5Z0+cF[.Gj.*YKKj[NLq4s7:1=irJ%<NRM24OoHl.u%PH2,'.#L^S>Whk7CA/[`4>7^Lk8:4I&cVCj+@X4d5d0YOsH(jsOG+!'ghE2667i9@Vtm`t[Yr.+V<G0k*"c)>MV%ZeERU)T?!NH?JNWIu_W"Fa8oam5DGdqMiTU2pfZ[39@@_]rnY@dd"thO1I(--rV7EFCU;S*$0A9B@EQ_%#qkGlQ%iPW;i'!J(AE!%99VE2!iiY5n;8q$rsr"+e;q^n6N&<FQ&e6%1J(JoTJJX*B9;7r3:8VB1[MJ_7>QEmBRC@'Y;I</4)H3b^%&GfPURC4!=jiFcgu;b%Qr=GA3!.B;p8Mbm]SMS+;b\o?N*?::=ATjo(!R<=qJms^A7jhFKX^&WhSucMJmEq(A6=9ln436ia&3a47"/);:(+n*n0>SUp`DM[%5kL?pY2.NV+BoMqLjQ:p#M8Tn5gtU`\L&(XT9iaB=3flI=F?&<MIRiM>ni6mS_><V-k%!`OD2ALZkmMA)Y"a6./Q)6?Tn<\_:RcT%2np6<ql%"`E8@KjgNDVrbbk>*UHXYr)NA64aK^Xh!f&;EktkgMOJc]K3S"B+FOgJZW5UY8BE@P9L@=SpNa4k(g*_YfT]k"3M'tFL%ILI-R!+LhA-ap"qoi?.0+V*DA]oJ!X)j=lXg2Dr:;$kP#-n6+=>J5$X2&mb$4,)^2@ZRKCkpE3Vg>J"GZ/HNX[KE3'nJuVCcf+X`%MJ-IML!Kk4/sAk[<`'BSND]&k-/Ll;I2dV,^LKg]7hVi6h1L2B[Z<VADLR58CtbFpo2"V_##qt'JIPPX\RjA_BS1C3mm@>e1$)kf%5fGKcZSA'(m<Cla,jVhbDK97u%'mks>i8LR_?DjB-;p/n32`,1[0pN9YrUiB]lntO0fR"?]FUmEG&K3d*tIWqmV!48H"mbEB=:`$%M';9l3o'e0;Q$]!oA?=qQtJ&HF>q,8E5RDAT#-0u?.K4@kbZifNn`S#]6ct&MISJCO.FpBl;g-HlK>;KD`cgR,7^WDW[(tEE-14R%G%'2Xi$aAjj7,\q"e1..2Lksm(kfCjgY;Yn/WPrA5BbsckkD[8@<:?^m)eP&m4`n>84Z"_3k$V7$KiJZ2q&EKj<ge"@Jo)3Hm"r/%.%?#Qetgj[Fk!uBnSF40Ji)c#IbQDMN7/\=lq!"QVVRhUDR&9p'*nb^^qngVl,4F>gsN4HKRkjV@Yut02:YRGk)?@mq5;]JASo[E%-j-n+K?ctSf4Q[<.2(29p,G2I(iD_.ZMDE@]DZQQ+hQB]5E,qmdWndF9L(p\Og2H"YtcQYg%+([W+@2+@"aB]cnRk62NPt7qmlY0%-HpcoBXqRX(qVL>W(%\2>;fkLEFHf7oi2p?NEsT;pRNX/SJtMG4J)`-pZE@=617%$K/s</""!2)k"UCnfH'0>$H8YB[ZNold0g:6%gL8X"E,K/KAp*ng_ca%8E0V7K.&Q\<_$WhRa[%^AT-UN;+E8/;"s5`r*7-%ih%A(1"u[hcTL#1JGg_.tD,+c["<0U9g+f(Vj'`Vl%/5>:Ob8VWqNIf6H[Z0=uj%\4j7qdlM703eG1/AnJ1^%K;G[39ias;lc=FX._GVAlY%e&:4j$GkU)@Gq_:1a2G-$Cn^Z;tqDIDQ0B%o)?lj?[U1#^8pR$]8bg^:uB_oV=<nQlI-Po$>oP^V[mp2h\U1L/pn81>k!FXG'lW([iWI^-%1L*ARZiX:/ON=hhh='[llaDOY`uW%<<$qcqGnZ7mq&2pQO;9p:169ACCD]+]<>iGmI]u=0JY274oWlX@I54E4a]@PXJY\!jdZ4e_a/[]1I8c>mL.RSMh9OD3U%q5Pn;`l%#bk-;(Z$[g^;KQ/S(mL/.Ij6p\Mb=dV+JQ@ILI46==QO^^-GnYq4cL<GJ7`;.ek3[?T5]4^7KkK"mDX+,$47_089t/&+M@IZIOpf%DEnlmYH=P+[C92T"WkF='T5aB'kr02qLZF^H9utb?DMqV4h2LrpG+*_4E4)!VQ.m?r"&A7AKZMP-4Zu*_[Lhgj'RMe5tnFmB&UF\%Dc<86gh:/AFZlsDoO[sdp%-n3dG;:m:M;$37Ql4'g$q`#n\V<Rl?]WOIl)(ca7hDn^T1_/2<s^-17,UWHb%#BZ.W6sgTADS7AHjT%ot/8NUj8_lqP-m4Vp9:WBYSLr>q:D92?raGKit0;q7Te9CiiTJe4XD5U3T&L[Y7=b>W4$Lq<(d.gbeunLP[0MhHsLcSC6W?eeU3B%o(Xj:M&Z-_d?8=3fNEV@s!ll6!XF^kReW/8`bqR6NK1$ZArV-7\CoB"Ye?'d2/0ETI`[BVk)Gst6L-k8fr8,LPP%eeN#MpaAf,<+%?Q+`]k)C^>p$d.np<9nk[;mL+egP9ebj*;]hL`PBFal01gp^t(r[O.f2`KlY<]5+[CRrdUO6N_QQ-7CBeZ;e1UV7S5<O)2o?"Q">%>&^ci&=GeY+h^b&$>HsFg/n#`HGhaG4$*881g5qE\<3YPZ.PgsUP[%(;!VJc;(HIh8u"mlZV7LXb*Y)5hWn,m)a0&VN$;N%cjFL\%.4e`UIV.`%T#`RmEd?PTg??dYpW0YfldOA.)a5ds`qiXKmY$q.H)%e2qG$iEZu+O\h955>CD=7P1j^&&]T0'34VdC[qg")h9B#c#%bd_'7k[W]9"mnp_Z$rh2eFFB75,X'@NOQ-;UM%'ln!sD/U,VB-;pE%h4M4iU3pc2<5-,Yc(#DQjU3WNq>LDJ<H^J+\R>l>O5)ZQo%NAfl@[qW_4:e<!n2V+`?p8#fiB6$:g7O,E?1`!+EoA.4.9BkC827bm3:R^(C*`3jScA&hurU3Ntn$l4D?Pec*p2G^dEp;qi!mO2o%XRId@Shu-M5HCX/=,\uI+"0RF7['HKmBFHkjGdF'"AU\?'m@I+RBn8S1i@+dj^6cE=0&:I@is=$:Wf;Z.ZNRCA)'U<rib9ul'jNA%Ip8tY"@d%ZfB3\eDi/'p$!Ylm:Wa-8(8\?3TA8jqPS;_HSd;&bZ^:$Gs#L`3UW%3+[4"Jl7;:qt6qXjs=m%K"]0bmMQ>jBs_*@>q%[B'7Z<U$2RCS.E(8s'N,SGMY0<okXd]QJ=-<Ve1M(VZd_V,%]^qJP,e:s>^t-JTT2#-<9E'Q/=`1%S9gc&ZMOZr1YYPH2RVX`'Pj%o,B94Up[gqke:&29t9*%*a4i#TiUS[V1M_CL%)UDraf++-2`(6$sAfYVhJJbmh(go`q$5#Ek<o-rVAd(9tb-j8mfVJ/9I'98p-"K%!b1jt3jna*F'[".^6G`lYJl^K[:>-Cee!i&ls&aYPdc9SrTe"C]JTF>\Co`,5+7g1P7-8KnG#\N(t)ss<OVhP(TSVDiGo%hPGUM#%:?)&l]JL4J%duq1QX$LbZ/DhTc?B5F.PF1W=,DdHEJZ^0hC-ab$0R)-1W$j!G"7!R2(Lh6ns69n8E9TA+"<@WTMhZQ`Q*#tVYF9I%M'86_0'$NE66RF8$)8SKO-Ca#q0UI-RC#Jl]In,2Fd+:9\"hdnII>-O1P79T6U&_u\q?C9qi7P"YK+8ebok_kCF,eCj=V9]4^O>\%Ft]SiZ?(Ie0l*mg/<)#A6iJ+`:hSC%UP\i"Fe`a6G20B#TmW'=ABoULX@P$/n")G=)L\r+ZkCV]NOCc)f5[RC1d7Ml_@pdf1.U9@%_e3gjD7%`$aL`4\)bjRUk`(U8DdnYcpU+T>JRPrh1lAY3UcU].2k$[0R5KkI1+$sI1)m8\@&,kd2@@#_gT&X2DH&^lRB`JBrpmn:%;34:!aU@[\/(Z398u:36_lU$(,"hJ%PHrJT0(HAm4M:Ej0GDbi=#D=V(Bfe<$`TG$c!6q3;-ULl6^ml&;aFRbNN51-rs3[C.BDq4%"#4gH7^PBU[&U=^LIS@]q%b#:'j$XQD=:qT#i,Scrq_.W:!ifXddP5+?omaj!LbleU#$K?Na0RpC4""u$JVW:?D+KkIcXAcJWdK&%)]_7o.Z1'0P6s0PXi&N.?:k)/3?8at&=Hm:a8-(g$7mk6e4b[sbPCpGVs&n#BL2%o7s^MX9o8>'L;\:.m7f#rr[@Cap6nXN?Sol;%(^4^72FPT8Pjr1QgiRo[55Xkqr7Wj.lt6m*lr0hXH_#l?nI^2*N),f9PsqNDZ3@L<ceinJ?_>Iik!Ubias&GR]>r0:&+<N`U\RuW%^93^*i0>V$Mehth.F6D4>GUVubXm)r/SAI.(C]n4#8A*q=AM(8@N*T_Do$bH.:t:R,oB+*W^?#,_g6p(GZC3]Xra!O]@,%JbhMY0%Km),4C-oP\o:=3bD-QC"UA1)aD-oE)/N>S-MS\5FlRk^[F=q$lH_]NEaIL88Mn[lCa=4!iq+WUoF5Hmo&iu6FqtUK8Y%4n_fJ>iP%?g!]<9hn`%VPtEqaJ,5jo+C-8qNMaVe(_C<Ei>6soGc9%RZk93A#l>I*O]70,K%628j@Ca40)Xg"p<A;ZM2W,no_BpAA-HJ`g$T@%bG%k"Ia.F2QIEsGqb$%.&_jgZdJ-fraA`qs#F$jgr<cc#qi.oN?ALaI%.a>E9FA+r&i:bg+(DWiVW9fp[cb&9=UuG$"'Ih;IZ`cT%)>3g-n6D5CQI+uM-LPJpgD-uuYuP(+H=HXJGLkqFXPIL(7@0hJA+nR?XOR+,7\oq,Y$6'@T/unjj*.$0mgWL;@bo$$&Y<6I''WZi%cZVb@1gY+2WcT+jm`N7)GAd:Hp5<3fm")Ip+MfE8Q+_,74KO?J-;r[Z'RS.0*`kfcNhaiX8B%a.gL6t+5Fg^_jW@eUb=KZgDa(0D%oiW\q#(bA'J?FKJVJ7bjHZT;C<)u6dqHdCRY,m3cj^]E$fef'";b,]s5,iP/dA/sme<r\kUM*"f8r,O31"U"?X0J$H"a7X_FG9+<%CTU%o#T=*&'aHALWZr/.&TcXRJL1l]T%=Bl5FN"u*Dt;!$$Y5dBnk9:WLLEfnkjiJ<MVh7TT/g>FbI7iUZB,i$_rIKCGPB^b:mPp%_eOgO*BArsMJVOS;q(DN(kBa\&c0nt(r4`8`rMY&IEV.T_cq"=2E>-G4(T`hfWA=u8KPka-r.`Xri<\h7J4c@852a_;LC$;nfoEm%4o``I]EOSA/lQ6(\]$/M*Zu2\`ol+9%'eG:*]%^'r\<9fAG5DtDFa#U]THE&F(6Au[3bI+D=fr7-<^#Cg_Yg@^r\q&Cm%4S'=YKF%;1%2sRA><`n))rkc=Pj?UBbd?Z9Q43G+W9ob2#l9&2j@V%>[5ID='M&VqA_.4C^DJ!d5Y.9@Cr5a0PgTHd/gt]nTk8l^Y).';h&^%R_+r-U9qR_lZY$0ip&fCG7^WA-VN4<4FYd%d;Rb]2j,j;TCBlD,q7)c&<9N<K5e*oZ@BJ*F=+E_3Zjo3LEGpFEG^\),.WatpDaA?%'!02I7r'KW/-@lZ:HQ_:]*MiTK?f]4kb.PBF_TEi3p]/qGRbU&=\;TG6>`oE;6F$nWIS@W;fh\<.P+oJ&(`?$:K/tCQD^9c*Hc/$%K$%osX_--b/'S,q2ZMq"<[qo(d1oHc?)oYp_17FYmr;3#B\AqT^_Z]QGj0OIQAB*(*re@q7-CoTCZcb&B;&?A>HflX=ZdO#4<og'%q/Ct7%'/kOTW5BZ7ZY,8gP.>@)sEWJe&TVOB-BYC!@?S9jWo;T*)/H4=Q+Z9W@l:8a3bGL2dDH>E>F^mgJr4"43h%^RqT".3?"pA%,tIPdHB:s7962rJ0U$F#l+IUfG\^(8Id\5N+5HUFdU-rVDKptYDg:ELJF=6)'/rkUM<j8E(uA9EO<P(J=ij2:oH?'e%bk[D[-KD`%.\eDC?<VFUkWC"PW!gGs9SB_S[X]SHNZ?]5ULa(;B?t+FD;6_4]sEsgm?t&DmhI<V4ShA"bk7+$99YXRLk#Q5`We;'f0VHUFZjf&%p6N,USrlJ-YudkeY3U(bO0]MARD"Y3>FDU>$QZjE0Koj^51Wi:r@BPX_]leWcGG8l51$RsZ=`&r/5JW4g"c/3KaeeI>@,$n(Y=hN%35leOV^jdH:d&]L=6JGA+G'mN1S:A$Z6s_dLi],Aen6.pYc+ZeH&g?M3=BnZLuBo/"_,&*[bPSQ3q>,8%%RHF9Fm`C")0=,T*pI@%rF/<s$`DS42l%uUD6)6g6M%LGh2NqkgtPl7ei"48c*%YHY@KJVGO@=g$c`+;S$#I;="_AS\1TeC#`mklHZ9:SP^fW%3@2o]3T4dM%[QKrBG"S3%jI/Bl7m6aV1diG0\[`&%Gu`8#:mq"(U0;nKH>fI^"W"?X`Th6.o8"5lS!d6.D]NYuUb[kQhON4%hpO$,ng<"4lIf'g%EYGLrg+GSJC7+Rml#KheJDACir`SLA2-u4,m9-EYh)KX.hs=X5/2QKPrmg)VKl&X0[#C\)F6MsHkfDR#bNI4i)l5@S9X4g<b+Z/f%THeZ)/>#:Beu50+VeUV&k0VdoctR]J/=Ak<g8L<'B:^\7Ih&#t"s*7'/tYLDT0\8$LfcqQSUC\_5$q?P6`73uo*dZTJoq>i[RkhP%%<XC`J[`o-qH:$qS>@$Eash<,FQb2]MD6hoccC^#[804lqR&!e\?ba5Cs<\fDXHJ2.^B'oMpmO+Z=.fCo?%qHWE_@'@'8MZR+5`D%^S&`>iil[KY<MOPbsj\mq!=?EB:_l3g8Bd2GKGsBk[_60l&p23S=[jaPVhQ`f=[?lCkj@"_[ZuPkEZIaFXW'F``H?jChu!dXO0(!%WAtCSH/40[h;`]OG%2a?(J7@@62pkH(1TmYF"hia>aVN`[PGT:LBH\)LbLa'+LE?PW.mQ;`r%ANDVVcX2?[g!.1J9\_U;CG2c"<`%1T0&E<-lf!HVgVH*C;/[VO3YaS'l%nHa#e.Q@jkh@UV=(1`V+C)e$u:'d-2,Y+$"Mk42W^.lJcE>o&ec008rRB"G91^6b6T%(t=S%]*e#`1J1ss2?r$L;]X%,(cSFJPQed1(B]/9AWid%4b(a3nF#oC*$tD@o(Y0Pjs#^LM,&iK*"m)M=BTj\a5#UZR&;]pI%0p[B'm96%J7>DGreh4`?B/KriKme'aTOYQ<6\rr<ZZ<.b>t0tG!fLu(iQm*ba1+d@Apu_E;7XI]XpVQh>L2nX6f*EA1M50]'ifu\#Nibl/ic%%.eY3@_pp1#4Bps,R&A*O3C="sLlK\iRH!A=>ub@dA>QiF03AiS'.*=@Ni^<1-b7$C&hXB!AK0f!q#eSjT,%6=nhG9fB%j@tFEGf>%[]n',Jt"1N1%/4W7+mD6F3.p!7s"'BSOu@s%+/d120@h&L_cnPKmAGX!fiQs2jnZG>pB-gOn2jJXEJ+*-'QkiGDb)#BeG=&ATTtT%C-IOadj<QhZTC&$h#SrrX0B\;O*-B)_GP(=7P:q(efpmMn62e#a/cJd@"#e>]Q=8g)Hn=m3A`5:g*mJJ$&ab6/U0B^g*-W5BVsb)%L5]*Pr4GHL17XmWo(1Y5k;XdN+PQ#uc?:MGMNWc7L#p\g.kI10NOodg:ZdOD\)K*P98<Ko[u,pQJ",<#[_p=#e2adpSFu[5fH/Ge%K$+;=On7\Qo&d/:oBIkn(V"9Ia1T"&JnA_V&+]!*6;H=teJV7U9J_Bn"%49BcME\R_sYLLV-U#@ifRGmW#gON/-bO8Zd`>_RLa%H%k?h@UgcY=l/Y3Kn=;A3%\5h_0/J=a<Im0BJ>i2RQiKhe*F;&6LEKLRAHp/O>O/us3XZ@P!\&6Q1ED-/`%/Fkn[ficf+3nAb&SIO7%YY[M'YDZPoFXhUQ'kGn5!Tu.Of.iDd.T>J<PV$1Z7&%i*4Z[XPVhYbc?$NI;F-UWK7m]8gF6=_dd_WhZlX?(AKmKNT=fd39ep9+g%"7O=Ym-aq_9IHM3Q2ENk4n"+"D-2*:fFuW][qaoN6PH_fN$rGbbjD88KI1X9\Cik`GG3,_k5+(bdWiTFBS07+i$rUH`q?jqLA'=O%Y%RQIGfO[<"n0%=of-N<o=&F:L0<COY*a4?D9C?XXkhQa7VITd";n1;0;_P^nBJsS%LEQh"MA)Q7dBq%1K*[COcfM<Z]^8HE@nbb%N)Wd&$8PM!^=Wef0D&ik)6'PUQe+KlB!8Ht-.j=uQ_r%KA;&S;hLo,aYN+/L6S9+6k@=*qlaTTA;mW+_m=WTZ_AOcq7oJ:]Z!4LJ%F-B&R9!;J\'oq'8oO*$o/tWJ@>8:CRRP's7a4nYiL#&HodtTRpDhN<oOm@CF`4S%G1\-plC>jk"<.h3"Gk[8u7F?ei)(M,eYXQ0e%@I!b:_i$MkYa,D`CbAsPG.7&E/!!mUH'jXQ-9&9SMneT43LlABN[i)%0!a[1boS5!0i+HLD5?--n7s,/QYQ"hpo?&iZ7Yns`N+>m%jR2-`j7buKgGcjnc!^rC>l\KQ(Hm%<$Lro?ZuR/R%_q6\Wtm'@fe$U"!!]W:?c3,:b"U[FA8>[G5G$"E]*4WB=5OcH[frDk1@3T7%02]n^n[$pbNMb9pZm]F=h2>RERkJL3-p4N329P)kkuhYV?HEiTQV@h>jhV\^.$s9):JI<9WkQMtE$$!$V1@+`P2/;)b=73VYGtl_%Sc:d#f<f;"@FJmYaI+oc]uTke]P^$ne@P*o4`tP&9B_;dNV$nJ[D8P?Kaf!?*Pe;s>eF4/Rsf@joC\+i*g2_0bdI%JT8OW.Ze'+V%>o(Fr&4G'.MgcTO0X&Y#8%2EsS3q0S$2.i7O$,o'\Sn^N/tCWOilk.54q#MJ@f;>;Jc/TnI*@juV]=T-EL5cW`K+.*Us/XtS6;2G%4&qfQ9?o34\[B:[Cosgo:AQ^619SsZ,B@C%19n\JreR*Cpt0fJS/rVh4$Ghfga#):-.*aj)54VE@p/a.3;<;=GcrEb?$2%5HHu6b%SX$$qnSGcsm4\o[e!Z$[-%'e59!dc`jQ+j'e!\klp&21rCcXAgJ,[Y^VeeCM><F!A^O.r1=Y:_=s4@[al--/J(Blrt2Vm.9nj;#O%k.]GIB@C"17TPpOB9l3R'\bEn2P$8<h(lEOiG:Q]>WV%p($<c<1D=Yjqik-K9kTbbB=Mf-l"iD\988pq=-lWo-Cf+BhA'SMREZiF%_UM2`l-+24bhj+@-C`;^.Z])0flV*[[X:!(=YAP$']ZOak+pX]flRui<\)Im1K;_cX/p-JMJP>^!g62HS]E>(VDIh0BTgfdZKZ24%f+hoH=aEP<RS@F9^8s#XcH8&Zg2&f+@]8`@XtH3h9StZPO)K:I0K7r)5imF!eKfrR5#UY8RsJtS';+(BhD3Y%UNEd-HZ`;SCo*'O%hQ&G:T8Zk$P"q#jgR?P^VimJrrbM)hG_!D1!bUoJnla9KS^P+1R(CRbanBj;j!1phFX]'&/S?t`Z@./PKYuGa.^]9"/1Bs5WL]22%ZJTY&,<FsE,%I"J)p=bln)C$&(HH:)nIco;(?6^4\MJM:cM5cBr'TM9\[-UsdOC;r"h/.9&)Afs+Pio1s2p:;RaN2%gt>dDonVrN%b=J:>UNkW3^<G0a1Ns>>Dm#U#kZh6!+1%G`Y"i#bB/)GM;2>i'g'VkG:0bbI0^I15ZT`TtEuTI>]fsi6bFDnL?m;0=fO)h.&p!3;%K/hZL(HQ3*\I0S`lD.^fA="rc"cS<oAE#TjFR7g[(.TC4k*J^,;PKj]7hZB`@COW\=QWsj1_e77?[@\THI';#bjl.H,D=`'Mq2Bd%*Oo"*a&P:o]^9GOf`h%"])tVV(7FN*VQb+o4/m%V`*1"H"pCQ#qpbui&o56C%_a2EgR@r?J5DXa=ia=kf2j?<a!s'@?'_;!*a"TR%qRotb)!X2X9,Cu:&_%Sb\5`sF+`_+ub`pl4]jQ)saqkJ)>pM28f_]m1q&cUpBM&!X[AChK>`3Guk</DgInKd@BA(n:aeNro^_!Om%bnmF<2MfOE#+$B;,^UE<+bI6uA8ncg(KU.E*ON,PD.rmbh>H_B0CluNH04/8gQ6d@DRl,)gu]81^6H*i([h'&c5*P&5&QEF?_$[S%(4Y;gik8F\NB:n<bS+Y5f\L:KH2^r<@[CBGaIJ*pigQoQ=J@*%-.[rh9>?Wb1*8UOQZ'FXI'gL:a6c#k\=SDV=k"H(pFAh:]f-=@%1=a@6l`nQM2bRVso4!j>D@!D5o=6u3',%M4Q:Z$),YQtI+(-^bR,F"m\^Hj];fWp1PF1hgk!"br*G!XiEA1>!*QKU3UbQ`RI_#e$%FJH9s%(#iu@TU-cK^6HPGFr6GHl^P*`+6*fj4=r]:>5LH6e!F/^+HGooB3VAH&jJ,JRE/@CQl@MfDJ!_Ai6iH'mPZBMTq'$o>TDI%Ubn:URZj""pP>gNo<GVjd7oX:F(0VVeN>T\+m*1(ZntOH]e0$ErpD%irE8<D4PQrMk8[RQ,r[?k@neLp4Qljo?Li2Gg7C&)[E3YE%9fJ:N^#NoLEr0b4c[j.*$b'TcOP!XMfmPTcQJKn7Dj0LYnqfq4)c&m%R,4H/C0G(@b%5;A"oAeaVI_sHGkMoZ:;RD-80@bfF-skD%n$#s0Y*Z(Og-'NO-!E2VPi'fiR5N!t_^6G>[]CBagV(Lj^SVnqR9W^Wj8*CYB7PBthql[K?Q1G\%i;TJ_F*D?Po.fmVr;1je(d0N%j`o=B?EB=ZpiJk9GG,UnP-Ai2&p_*qCil]k8:OehiPjGnhtT%@g6Q<Fj2p\[ca$F*_6<&3*SH.8m:=`Wi(qK`":L:X4u<'OGV?E&%^`F$L=/OPu?:kakN\r.JQ$&uEPE7![I)lVbW^S8]f8iZYiiYB_>;IPlTQ:u/aa8Z)=3TG(:>2;a7F8HbAgSj?$]3-/GZLM<Q<c9=%mhb-qXg1]<.SlRPc?JNI.b[%;6JGmR=H]85/jcTiViK3EMK=MQfd)*%39=oFX>G\<9kH8FF5O,UA";-Jj+B;$%_!HgdbSNk=[Zt<%qo(_GkDEjZ;=^*Z;g*.ao5mRR1K06I2X-8W2O7oU-C8/TPg!sf$bVm*Rf>EP':HTVRG(<<DN.l!Rs.%T2]TD*J4hE_o$jEE+Z7R=%Z'+,*>s?rden+7:?>H&7\:d.HM&h:$5W@;Z3khQU3a^*&CFRq+Bt:O1YsBV/dC7ShI[o!"3tB^fY=_<&b%huP=kN$L2F3,AY0>lW%XfO".=KJ(N[E21=(hZkEcA_O2AU"=;*:aB=M,u5S\+p]Zq"H<T^ZXN:@su\>r&Ig&H1![HF@eQ$^9cDb*4V*MR4`pYU&(!92K(&f%bO9:H3JjPBP7$OGUp6ur_nOaHfJ-7DojScMGUq$eAWEtX(p[rE.Wa$<k+S/P/s#lqRX$M%VO6Cj3qH1l-6^Wq/o2sW7MMorJm!W4%dNOkXk^3nt>o'(`;;*K\h/sL+gDiJu3kD7QfeE`YZW%^5gDiJ>hiYH/VS,"Q!,@hVKsC^7joE!=ZEY[1M]>!CXXW'T$d``#TZ=f@%(80D%5iSu[24rrp4j)sI7CEpnb(n%.FnCG2jeJmaJ+-<!b88i4qC%sf+'[EnI+Za5mKL6L*p'/m^-DB@TAs]i.s[B*rr(!9*p'0.%KWPS%bPccQqW!eY]K>5_>kV14AaY;Iht:25(2g:!rG34%it^D[Ab2poqe042GQ$=:.4t:s+-guXr7t28n+t^AKm6=>d<GQU?hNII%L0F@X5F[psV$lH:TA@0GB?q87)JU#UqO%jqIFZZ`VW:doa7&lXc_SU`6.b($5Pq-gmoM.;Y+M/*[t5D]Cu4ik*tWLN/b,tc1JNU*%r>*PZSEKDQ/G%TX,gMm.7*R`]Hj"^1X*E7B.fP18lF2AH1`'b4QT%`$^?]F8l>fbK$bu#J;VNo5HGOh(lt`kTO)MaVrN'`?]<f;b%I+Q]Y(=.lpos8k@kS^AC^$E^pRYFoBaQj8X^[%e76do-8fR$.)J(N$''rg?d/GlTBrMtCsY$C6t5PotHXBDX_>sJ3frNm"$-/\C%%GB@!LMU)+%T4nkMp8[#un+!sZ%_HtHDs:IgPkXrRn?/Cs&FVZL_r4lcHP`q1g31;VrN%8inuA>@[eU*aoeXd.j#r7B^[#Mcc>3:"%P4/8#qjZ-F31#'F:SkMq(!H3`a1"U$L=pp$bATcI<PN,%j)_Cs>Mn:FI+N;>Vt^Z<WN19q:C.E5Gh!>cYuNn7B)emg4BZBVM`L\R%>P)2cdsc"7p#<G=Z1%N@D!RSV>sJ3i+@^>cn+t]F613Xj>:'_Zj-GFDrE,]^>WGT7=8d+9fF$L.@p1V"lK;i3GPSD69m@J&MCnY,%T7*ArAfY1J>sF?YSD%k'0:\N%-i.,`7I6<k`SA,lk=Vp_qH^j!gK4=hL`SC$f?[bWKY>-XGQ$k36OQ]Lh!b*mT#c%0QK@#s;[7%9%WZNOJ/bQ9=V%Trb``M`6T-M<Unuc?Pp/O?+m+MX"os6k&bd0:lJ(N$7E9KuP"NqhsSZ.U-VOS$kQ^C\F9"j-EijrQ"4"G5j2VZnK%n=E9WA6./M=_#s6A(A&HK"gUiP?2uo'*5!;BIQc;[6[*PVcoAVZe%r\4Pm^8HMe$<l-AgmR(9tt[eA:0(^]c4Wo9G*`n9I(%WD3Z%&EMSlWIF\Q]3g?PmCf-.G\?oR*kplf%u!pG.k[(#U,eopE`j+!_er2I>\9`tmHEn:W:f%4&B2qASPS5@<6bh08)68cG4PG]g^2H$%E;-Y"'CMW>!T>bR)\d`Yf?T):Q\TeDoh(e_Dt:f3n9,_[*08.:piu?lg`Fe[_;0A0RL)Zrd[M?j>YQBJF3EU)G2(R=l<3iZi9o4W%LG-%!J%4.PD"mN"MsJOUk3'4'D(Q\k$`s)+rhDl)o=Xnl:tuAVWIV]cA<]'#_c&nMh@@^f2h#21dmgR"+m'n:9<U*(359PjJV;I?%0:K'lW$`^QG6Du4$Y&31L`!H?iGIa(3$+\\_]HS;=;/N+n;b/(+I)IFH(k/m3Yj4.BDosK9<&;dX$3An]q82I2fn[<`65>Ja@X#Y%8pBN$r5bKA5OUuKY@OrnB9QJ3J\H#?V1tk>4u=:WS%dh+=i(u7Dr!^&mG<'7[o(AfI?EI(!C2]oiQJVb8@q$;Jph"u:i?.SV[ld7%k[toq[.0>WeoZ0A]NY^FhqSc1"`_0$D8\j[ea(%pbr<Y+j7/I/dV/o6^)i,nO,lHrl0\eWog8S'/V\a,De/`D5mYEgpa\&;JF_s*%'10I4#0CqWmor"bp_m2IjoSET$L]5Q5V8[/J[iM&eGB0d$M!2>E7c8`-ANuCpV.7UQtDVDm\PP^!Bl%Jh(VjUfI6+G!oRR8KrA<'%jWAF8e__@co`?CcI2o6jkFu#HJgS_!'B5;5O:J$iXq]7L;ajmEW9>XakT'u'U[1""l<+Wi^F!;D<,a/CYO_[p%t2,Nd-H/"+sMW(%,CgCn13P%KS1hYb1PhOO15I*EUT(pdO+V"(Je)2[obLUJ,*N\TG`q*bfAA@[oaN,FqT_-dL/A&X^(@L"FL&QYXh84Q?;cj3@_AtP%RJRh;h3N7WM(a`t'":-fiK@5H<UEdLI;;uNA\Ma"lD&4VDJN4^.]tLNS@QjU.cl;bc;!i-XZT=77eIn(X7lg/Qt!uu.gN(E7oHSc%\umTfH6]*m]g4<Tk'7Y3'L>,]&(&q_\?bIj%t`H8*<jig-]uK_n`Gb:QT^LdYf<+@)1Q6o^&m]>7&u.#p=cZkhY)3CUV2_3pC;R7%L-PQGmmhgrkN:NjIl01!#t#(K=p/<YatV+&+h[j%&UPP8HKBGUZO44O*8^<]$FgFgs1Zu2^BU<*@'dm]'*lVMR[qPZ4Dn%+.6C^<%MbD%Q;]+o^h2"*2eL21G&?HEfOcU)ALIQcFMKG@>a3@=&L``Q'"=tLlGm!H`6i]W![*8Z'S@X&g+ZrYY]6J$Si@^%N=r@%[8JLnr%N4brJ.`XW-L\K5@e\^)8@2nW:n)\n3K<c?M3;QTOc@U:]Lb)B%Xi6Op<=Zma%WeY.-+`$NM]I[+<84)L-_j,t(o]i]6[;V5*i!"D%:J/Ieb<EQj-sl$*U*BEc-F,6=,-WNZc]K953!?36-(Kc5#L]+6![faKNqLmEQSP`EoUj(CW/lUZ.@uh96T\;Qq=5\\1k)K&Js25Z%&\Pkr5e>$\=pk)226Q9-G"\_(!g<EF%jh&@okR(!r!6m0Yd@b8_KpCk$.RJF\V9YU7$Ss1NuuWoW/Tfo[Oc@bPV1tOk!MEo$2>V0%M*R7IGD$7sj""P!+BF$B8sTUm1sSeTGAUQ#4mc2[Qd9N,OhuAb`_pkBM'8RKl/;(^PdkSsiism9.Q<RtMMQ9.WcX=u0$pmp+.1H,%]sl%8'"IOh[Q-b/Qi)4]66c[Q$R/)9.`jd&q'eVn&:"_M'MZT!"DlQs:P>:%<`rqH`LrA:M4!Jo!ErtVhauB^&Z2t+[]pL_H_?<g%fa_$Kks39p+A,%!kEAt9iVhj\/%jbV'^R9bdQnM`hrf:?CK+=5<&M,"*>'o[J9GsM:Hgnq!?qZ1dd,:]AM+T\6j+h<?GpX(KG85m%O6576/-uA8oV_2Df@^9"^<K(Q\R;s"/;\q'1.;ZReQ@jU\JS:,#flW1NYr.:Dh;t!gfCX`%Q!m*H"8TP<lFSRN*\ucEmkgV`4M.R%?G.W='bR7nen?.-4fYSagEGA#C*jBCZD"^"k8NI0VJ;F'Ls(e-GA:EgH5R1P(65Ch$*i^d2N.eKamDKh'=,:ZbcK`;(lCn8bY'P0%f;O/[Y:UoPJDKNh>A3m=`US2^`@-GmN3I@i%%eA>.blioo^$)OqG1jLW`JZPkGst-07K#BR[IU'e[P?&*E-Ld0]-c]YH%G_>C=PP%c7M?U9[k`Z.[%\)?\Nn"UfVP1m`A=[Rj8TML]C_0h3*BgHlAeSON/h(*s,!15m?!;#q<+I[4mb&S&oX6m\'u.H(,G*M$+2rT"X7(%Y]`l<khnYS5eJpY-FZ&Km1gE@"8bkWb4#NEbpt_9D>16@$]X(^U$S4_<Ob2ENij7;3`;jhcbP0O(b]=0j]Z@\cI\[f.nB.dd+l-W%7b]q#62_C*bbi5F3b+&lI(F%.Q^BmPW`Fi3!u.j&]j^Aa_GAYo+rnZ<&c=`)2jFZ*3$s7.RrA9l<C2;sjB<eE1VW*E,Jrg3>U.)f%98!R@">^\3#FC!l6A!5V3U7J+Djq?Vb;3^:+]Di9"FAg\`tN%OkCY-#$*(aLCL=Q<"<P=l'$SpX]RM^PPXV*+s&Opubs\!'Xn,Jl%Fg)%<"l'N`>oI=hP\dCnetQFR*ku8$,b/\-52]6SN/,EYd#Lr*no`Uj1bU1UcqADQ@1]o-[YB<Ao*tl4:2I'sYW%3..`fM49.VR!%<='@\?UXsu9=*Gk^UGXP3C'dk3NCFVTNC5a*%%>^9=>0d.tW"j"8'00BGgTG1n.6_n*fGR#AOts5@4T%/f.[CkcC;(?#is/X4!/q%BIpTIT"Zh2C@Sm7h8hN_nUgVs'?W909CCq+C5iDi25Zmk$>k2D7hrC7+R[i`E%].A]#K?F19Mb55`CV#?":=\ckjc4>UKf\rg>DO%[p(0>K'U2jZ`Cs+Bt3P_)V)CnCkVEq@80AHn+qmbn+b8(.frq34("Pg@MV^D?Q&=u_`ca&VU*oL<"8+$/]8I;RL*(sD8+&=`TCBR%%?ai'%5d]e]RRgKP.@\.ImpF3Bri35P=i'Xl6MYcol,b/OrA54!28`a]9\8H=ne$:aF[/COeUW*P^hqu!uVD(1%G\q\<.BAq"eMK%I(MQ8pbgC7O:Z2CFLt+^V+"o6q_f*X8^M1K>^Nj0JI@fC1qpU<Z(kp.#k;GAMnXCM\),#O"c>"R);8%petA5,MTn'KfCRL'B4DIQ%3(S7K2n3k`E]t^\dV"R<?,cj)BHl$/XB5qT@adHB;6On"Is#siRj[aJ\-&)9d>,/=N:#;TijN(+$mBc\j:#r`[*E#gntp@*PjfbP%(1U)4\$qBo@TuUc2't4sNC0pSG2IINe9/3;M#O@<ZQIPa,5:a-?:B(B#DL)4Sa@HabFA5b2)M\`R.PQFK6l2J"[9YaU6!rfUojSl%7=0pRac'>2F7`F.Xh$f$%"BAdU4-`R@#R+*GLseSWVC`1$ha"38ka`^N<u$ibn?NJe'T<s1;KNWGdgSrM\0A?M3X\b<-Rar]aQ_H%"uHQUO<Z(JEuInH3R&T)W<7QUfhWh[O98EhjYf?mXVD>tm+fb[X\H$"BU4gkhGRUrLDd2X"BD=<0iU-Q_meVgY2k(1`&<6M7OYoN%+3','"7KRkV!SsUTTtH>b&n('`u]>$`l.UeX,'g2eIV&`-E\mK83BrKLXuh%=N/gNJkl`^;K2YD>?bt?jRcoV;u-+=r6"ahlPUPZ%3Y8@NMnHK:d%Al6n;*HMZaX#2p)7WUX["1r9*pi\A(rZei"Isa<\oEmUOr(`U0';pKQW8*1,hQ[ef$mNE<*gmrL2FKd`#B1P91H7%jfmAR.Rc$e!nh=Ho7G'_eu0]+YG)?1d'C^^m_shBnZ*=3]'V/1%GYBL7?%I>$+692dp!Ko28(LT2N*3ba,tUjn$X^S2UXRB+;jRu%cc]4jp$cRp]:R"@6T-tQcZ(e&5Q.uih(rP.BTq">BM\(B0JCj6d0"HTk48_apbTE)MGiq84p!fTOuPEN59[rZjAH^Tn'.13FEC_H%OaQBA<W8MAI\J(Pd7EQP$!9(ZnLqi%k=/cAI(QAO)6*tjg\o7!'_7f#C579\T-#1],SNJ0Qm#-s6:tI2?rCAhT;-f<HKFS\V*As#%][Yu+$t2lMo3)SSS&::,,k[8\?J,dEW0'6&eORgn=\%p?/JA_aImZ4Y<U#,AV0eKN9uWHY^!);#.ih&@)%/QQbQASUE-PN1.\7XU%Y0eqHX5ia,DU[W!mY@uaMYhtuU[WFkMLf?)MSCM*6-(5bgrQ`*F%09^[qeOFD4[751h!aV5';T:2H(/Sq0#Wm%(Z)lIU-HObXm,f%[1-I>OI68Y3!M$t`;*QXDVNlnR.-A4Do7Hh?u`2>*4--<Xk%-HQ>n<dHU!B4]!]4)R@j"oH"h%9+7B'`hu;/U4k:E(+cLu7,blV%%Mpt9<_&#tUj+SuZ=Y["J_`4%\i>WDCH6cE2G3(PWa"ATE/eWsH<R"Ab$h&Y%?/['u!3Up3"CaM5AMI*X+>Y;3hjp=b1`l>a'F2["%>o'JThgtEW3#8$L;ETRk(#h;Trs"c'DhN;lWih"[9YRta&M'GHLNKue6<m>C;Q14"'-1R=>R7m%+7,g/C`?`4r1InqOI>a6`/ZH%%5M/U>i2rSDIX%*;c/]+Vl%++aE!c>+O'4E)*^"muq#Q/s+R:2pJql&&LJOjgM^AMA>m=Iei>8AM,]n&4d6^-2@IH\XKl+)7%g2TS%6..j&CUq$g1OM2fQ6qPibH\?Jfh+@uTadSDJg[hU82F/doa$f%B,hGa#l+gSd"t2r#;Hi>B+XG#)VhtS1\Q@tQ)0oUK0ZHdoI)B$%SuO/2ZNoVU4pUo"P!(q?[HpU!S0u_+#dL$/6GKAMPn@Ik'8.k,]/2i6Rik*T'*PjI_6jka5naC+>DCoO+cI`RBSCMsPD)`j(K*6>%Mi(DR@t[t2"G-$OF)Q_6ciep>ia@H7DT/I3d8l*j;QpHO;@A[FDL#a(FDM4s;g179)[c!('Cg6Qc>U-D:%nCh.D:A]QT`kC&V7`Q%>Ya.?DR8P>>C#J@0-'4'#X+p:Pn@Ik'*MWO`!C@nZk-Xp6?j7[,3C[I_"k8k+i7-1^cjpq+elPNSR72W1dNNF^O%-`3uaXG"G*u4%(j>.u3?s3"+Ju7d@4"M&]t[H:_G#td:GGd>!ZsAh,mbH;3^8j\WLUoK&`b75)hTHRLK'H!W*N8Q:=IsTWDP8k/KuBV9<YI<Rc!:s%*J1+G[U&+6aChH-%b-gH$-m+9&`"'S^E%oraR`OYk-m_9Prtrj@X^BA4VkMmM#$ELScpYWS/jp)n*^#<m1=*8[6%$7><;s+WHb5o%VDYh/,%b;>TE6&%$*!#!&j(c#AmoJ3R,8CIhK1T8-";<bKP(<YKPlR<r=;!cWl@l!6>-.8+BHte9>&(Q[gYH;(%crjjp6^k+('AP%h</486=S'e/fN:0%.bRZ:"jr_#\C#V5c"A<2@6i.$$,I;>b'`*#rQaJ0q3i#MZd2).i0Qm@D_&+`/3QZ]VmgKCm"5^*Q3g55Uj"3%7g#Ra.&FZq6htqL.T@hrgu8Ga9W0`HMT#lsQiJ^P8]-2hZNOjKA1<hHibK=:S;Osuh"[+!)p*^O<4Uaa&LXZ0Ma#[`ndn0O'6B6d%<"`F"BR+;`_MgWS?;W4EU3"#T7mjm1An@-YR2j&u5IM1r_G$!*=e+n+$/t).4ItB)6#I!2?BRQhW,Q51dD.NP[3Qnt8.qAobp6"d%\i%i:re*8I#nu#2>HKm$#o!*h[h:&@l9c5)6Ht1W[lA%?2)M]=UT>>[^ci.L?d"P+P<M7sKg3ERHCh>Hc"F:d=N#p>5=dqA)DAXf%^]'>b'#-6>7Skhk9WZ6YM7'->,H.,kQf.uf5Gc&(jMlF9mS$m$GY,lk`>:I>*mAGA1NO,*1d3@&\TiVDG_p9cF%0!:1gUB/j!A3I%YV]\SM_dZ#*gFspN0fW--_\fpHuoo7:U/0RlB1^^G'9s.!AP4cTrkqjas324X3-,n1"gT0XRo\e<7N*@7@_01KQ(0&mn%H3rF>LP%Rh^hpS1qeU`/-JDICnbE$.#4U-TGOdaN5qK-TGPOj0o[LqGGq<S8Ko!+G&]e&TIlJJs9K)"1Q.#;;o^]?0=GaMknd*=X9<UD'Tjd%qhrKm=[l:\JIcj9^ZSq_HrMJRV(*DD/ZHtF,f_<0[6F4?<6A;u$;><X(0'MBZ3jX:.+C"mIe2sdYJj^,#Sqp7/,BJRMa-/8%2\):%]V5cA()475,59bB'MoN$#$l7n%HPk"2scj8:>";J4T<l5-gY[`,T^QCl\)fc6JarI[S2Jt-.Yc689TmC8W#ofXh<&I8RDZE7dd]W%PV"]^dO9ssO%BDC-R[h73E3Ui"as`P2L\-N4!(.S\ZML62M+<*4@6NP)=CHI.Gak-0gj%iDTmf&!'r].Y_V$q\RnL*cLm92:PPuE%O=If6P.E<sdV+>H7/2a8k&PBajL9.Hk3R.^1_6e,_SW\E'5&a>Xoh9<)F%)>;:tm8=q"%(lFg-Z0n"hRDKg/U_qWH'_83R!\"WT9%0X6eSAp^lZ=K^P7Z\e0R..-l&(rf"u]2HQ`jbD;9Q:I=^Lqq#)W#?bR<K!Qfdj%u&+*GF;B.18Tpk6\kl6*p)K:P?@e7AR"9:5[C%R4'Tq'Qd=;T8UA#A*H['9GAtCTKO>$q(p[nBaYuu&fU9GOC;g`a.@5o2@:RCAAj@MZu,:%E9ltsPqH)QK;h=+s+q^*h;?&eO0(Bs%6hbeLQHnHF\qn2p/EQD@$D49H7r#s_aE>^e\>W=M(;iL37+m,ugD_Z)hJn"Ch3`7PmNMB^O]K&m6Hr#,Z*Am:<T$pY<c>'i%DDoS%dA3XBgck)bCRgK$dk48/X,s,I>1rhB&gqj_j5%j<qJA(Z8Cf=B9RtXe#K-p@R$`::E_Jm>lGO!(R*b8U>-0d##nr3PEn0.P-VU16%LcDXqWio6hi.MDthcZJ*/8ifC7`$K2K<_=Zm:k=/gZ/;]fc1gc1IF&*,?&-rVJ_GcmH_R+.r+`]`ARb-U0sPMIQb/__OaWOECs9_%M<+go=.[ZF)Mn4HR*?4K0G%1-k#aM\'L)miVV":s:c1EU8HRcDE.7n^WRCrHCrMQjR2hni&1nj-D=@)sMV6$dDgb+=Qu+`T.M=_u%Q@eLf)G/bBN;A@nNdKA;r`XV2$Is+62L1ePfp(@6hh=5<&dk&i#6jqmXdVX+O@;oI64MoW-VT&4Z!)-6Ge<t]F&!8Bk5<cjKpk"b%&;RN1Ha":"`M5.Z7d;Jp691qKNlL]BQl!o"P;tWdf[mAc\&Wh=[^0Z83;RKVF*d?M>@tY]&79SJ\Au@Ca2=I_,GrEO](UB!PG02_%j4t`>h!lQo?u\)@RlE@CWh9nR/JVd0P*//W6s:afA[F*k$6N7pJXj-$LA"EZ`fVVtkFLkTT"J4[a#.LLKPE'E)A@gAba##]@e]5+%2-81MQL]:1blVB<]RT2r)NWdPa!81><A\N6qBB"gChWsJ[D0TrCTVkEoUnn&j'dD;Yd;)sc*R0IBqj8;Ja^$il1%k<\Uur*235f,%/]T.S5;LP0.)!NU8"`m";DVS;4`Ie\2IF2&[mZMmGIA!($"pCX$Iq>K`&/4gnS[qJhKmrj/.E;J\;Ool'UAq1r6>RXU0oO"o9h!X%%2>C6ROD,;7JiB,:oLQQ\M6r8ra.GpKr'>e^U#F=/7G8,M9D]#FZ9^H7-IX<-nGfABYUXo7)9fjn3S<_EH`ae\fb$[2pP7om\3/a%`SCM8_iYcFKVt3i08P`hh[/'`,:_K%fJ8(u/(N%@XXu>e4pa[MVaOuKcuD+G^q2ZG,lb:HYc0s9M065G$I2UZ&oT3nDH<;clM36U%$C?-V[997G^U:=U/$Q:fo_!B27/'#'"^56?R_;C'P$>'2'JS+JSP50Jc(F-lATRbu_*[aPr)(:^MsMX>`P&B]OcU)@>=CB#1S\?O%mW11:VXg;^qFq;L_FnD-7ZnE9UuE\06;-Bc\;ocZ<3TbIj*s\*^g`#\:C@q?XAJ?M>_QQ_oNMN4HMjhP;j^]:^c&q"R9n68!P](_%Fpcem+X=8rFs%]<Npo`O`X:!jiUQp[@g-MF:i*A:2HFK*K?GK_@ILtuS7E&JMSR+^'jt`nX:P_P\5u\0fK.?a`X3UB[?'r1CI#K+%"3(\n<'fD[l.^$e[o[fmY&:6^(<&LZDm!gPfZN[-eP-e$rQ1#',3-/F%eG28-Am`Xd*_r(l2FN>`o5P3%M8<\*Md,1ZO:An./oPt%Ec8,Krh-P#=)i/]L&1s-m'$TQ<YUN'&B1E'BQo]+K'fR)46urEY,pUVq6LsHJb+eR?0SJ5J$(gt$JTNR"V0k$biJi0FFQ:(0'7/(%=Lp^fN8f^7+I;F+D!,/j"2rXdU"jmsMuuK)&]\b6=M^CT4Fb@QTsbaDCU:d+Yp'gh2c_(#HB?O,1TbPg=`+/:75WL,Fp^#UKpIk4%1-:2/;A^Pm<n]QsISBoY0'4W38?^SC^;f0VlkC?5n322XA<3VqDl;eUcZ^hU-u5[;DUhkRm8f[@ika[TF15B<<XPMPT=WiN=,Ns3%l9BM6"eqB!VoZ![:17b2nG&RA'ELp">N#'WHpK+ZZ6X4`#j#-OlgZoOU0-*f<a_SFdT$dIbJT_r2Bg<@.<"MKi3p.0ba!,HK_'S!%NDD9+i9U"NoR46^62-FH7mStiQ!\@HaUtP=oOkA&cncd"8eSh7]d.#58#WUG3_*dC9+k)pVh`=]/4i6hP(_(QSRtV-`btUmY+l!#%kb#HBMT^:SO3BGoN^CG8$80cq7ad'lBn<kO.KL@MfC8HU8tNQGm8h(qhue?Pr?FbkUMdQp9Z`'`<5n6Y\o`\_b&4]2^MpUfj6JpZ%,'=U7NkGM[KY;4hM1f-f3aloq:kLR39Wf\D'DAj@,I`=_V>75,WbnIdiGB7simTO4q3;LYM1(5(Q$6+CjQ&OGTs"+gbECE_/^5NV%W#VcD(`eZ&L4Oc%>VBWa[nu?lFb%8s)rnDEGh9GDruB#g=E/q=r"u,\$M!Q'm3,M4OD+O!LNJY@IL?:CO-b:!NY]Bub8;R2QmGF5%bGn2#K0\/IfeJhoK1Hdd3'67po<>r+B9cVp*l#Cp_o3@YJ+=on1%LLa?2,`RpiVO:G$)Gem@$2")#->jkSIhA`"'--8&(#L5rn\a%DqkiiX*7FG]DHFm$g*38"+>BoHX"%1Jtb!J=Wj3/q(Vpi-![i\^HE.')b2pI\9Y]A1loZ(C30mMqt[AMTL*Ai6CNfgJA2$ggn:/N%<7@"2lNZH1"1F4Blin1cCPeGecCj!nZ!')b)#;h?dl@LL$0f;9qQV"&3!4;W'eF2"ib7-SMK=(Bd!K-2',9d0X*92::/KrPVE%K9%4-r7u_!RgqE^pD;Sa\\*-Mm][/ICm"0+`]43'$Urg$1=t8@;bP_egc.*Kf+CWhN?OLKD2"80U)HJD^h2'8KIWIba#g&<jmZOS\sP%amp(Zgqi-0YKRHu.2p?$G3&p6r/M[>_lVW&ase5M^S5I2\u!/dKC7U8d'pNZ1%[3k(jSaupTPmU8MAh3@@+=CHS\2!?TJBiM,j=l%Bqj5sTq>dhh@65gZku)U0oQ<#R0k9ab8W:2k*X=,NQ=Xn\1Ibh(#`<34?,USLt=KWjNY12,9eY2f([-u/<unNmEc/6ZNl<>&5GN9%PAkWT'8'DU4](mgRk]^L1J>[alp:4gXsU!_Jj$Wd8m@`ITWpI4LrGo&kn-'3MZmAjg]h&iG=&=t$tIXq,_b-<;'3'%(:9ta*r]5Q%F3Jp=FrZKJ7,5$9'_hAsA#\0Q@Gp&/^i(lu"J1S=iM@&V*l>1IU@AZT^?)P*2[WIP+B9_n$,^$Im)raH4WQ^.'#D)k)$tuj.e`u'%P:/ouZZ;^bF<m/YE]\tm,;+RX@\@u'n.LjiX6k]qZ6Q49'9WaTA,,8`FF1;dLmB\(Yi^VRU?OiY@Smeg<E=/2+KAslU)H,G/\*0G%m-M@s9"_nYHlQtSHt1[p'=sqN@IU-/K]n#>^Sqr9oE'hJ\J<k&;2kM!a6pQ?+A`54.K!-Q&=8$3!eY9%YV:c9H&8rEG+fU=l(V#b%6<hbmO6`3a%p?0+We%I"7Ka:-q;U#k^'k[>k"(1(H)]t>D;_`U:^(Nk+LP)NW97%amg"_[YuNs-?^5A1O&$s.O7@NV*'_.9Q@Uh]%'X)F)Vic\nQ;[2*?]&BH0<3l?jhcR5qJ&Cj`9Aji<stMt@]2dN'CJbF[u%H/oWNFg*$`;?CS.n1lVGr;Ior1j/alD@8?aUWm;I-7%pXI'AMUc!W\`B?`A-c3KaV$88cBHDKhQ<T$RQ\=q)5\*a]P9c@>/*^)4d]Jiib1uYYOsWK(BG(C@[NWuiW9bfVL(OHSqY's6j/s"%@,YP5Z9t>l?rJ*@IOR@V&<"?A9bG<DGE1\=LFH9U2W6R/0P3;sVF(-Pr?2@*"[fS)Zp32gL0@00L%nt8W)<@,i[\`MchDV#C6q`;%b(:'=1YHR6ipk;j5ej6(W0Lob":k8AOkqag;%i1\_SUDWI/&3b4R#Ndl-1J0BlEoaf'A:@a5)gE^`2f[HfBfNU3Jb5&'O!.kGIk>%BlVdoofIf*2s6/B?5JW^1<F"'2/IKL&Rq_4;d)CG*>MFC[Z[=TX@2SA>PYG)?gTb/mm;G`pB_#blE2cYhmu/.7sOKL`tpjbbT^br%Mi-BJA%qF`GO:<Y4qrEBiDd[pL5Dh&9guuEnsJ],mR5sT_t:Vn0O\/-HdI,Oc,7Wdm.fKa45%eVGOAu&iFClM1k'lfYf3ENHaqhI%F%;'C]%,2+AAeQWr@6,9!p&t=_&'Y/.A>&E5PP<-`Ysg))#e@KU5/:C)YN6N0A,[Zq4`MbB4&.`bCWFQ2op!fK+&MT[>":*(PKh)%Q:,5Xs,:#;>1E3j)orXlh:9gb2QgVLNc6GnH>p0E'^HbfHq7k+K[m#>$n0&%`E$L&&*(6:!:>\A?9'&#&cmCcTVFT1;[[UhC26Z/%l.uGU75'h4p1o"i;)q)\r0k;=W!,%E0;+f<jFSXXJ82W8&B;eaHQqb&D-+kWSZIWt[qH:RC2qc<GV4LU.4fCJqac:<ge*r2+]3HP%<@YL,KE3Bnm.H:3W1Jo%;n'n</V]B%)=c]Y!7S60rj:YM"0!('QU-SS?Z75*<6qD9#`13"Elti=B`1'5geZRJ$,.3>;rr'H*_BGi%@;8s,SRuT9)NSXGMOW.oj^B`;j/l]uVgL"BVGB[:2i!$4]UP_p;s8qj+*@XrBidB7ASl_+dIZ+o7C3A:-mm@('kW%0:j@WR'*Rpc%:KmB]"Pt@gg,1e=A(Jtp0h.%nXBdN26dAq=G-u1J2a-MUD;-:I('*cG%".CCp3tO.$1?]<D#4ZjgWsjAlFc;UgJ\a*b:S*:\ih@E%ST`t5dd8JTA8/qAWTaD-:$]Y4CM'B$g7/XJ'F)g.V.LKZP[9MDHFoVTK-ZoCpDqfhJT!uE.<,s%bR%j]^bFY&0[VA[i$s7U/.no#%'%On6d.S!-j72Ok7)sU`T?0k#'JCcl<t/^+Z@61*=DH[TcYjNJ$<ip("jfk*:/rI'+"AHLDaZK*SB)8L"c=Un/1u[]5ka^D<+0u8%.]bgoGL$M&>5lHuKb9nbe;5<^B&&0`&`24/?\+oi#6bW7YYGP6HadW%m0Iof!R9JE-%'Gof0;Ftd(t./JTao#N/I,!\esG$?ss#6%V\9:0FHF^tS3HsBj*R/e3LIX(`n<5GdFS+BW.Aa2S%:dD7*5u('RT<Yj!@[b=p^=sre0Nh)\"V_Y+?5h8lS?"kV.FhLaXNnTh-AT%>[e?(fag9p6pU^EM=@&RWC/_-FWuM:42*Y="GsW`!pIn<:')\(e>);$[Nr_=mX(T>+lm9:k\4!@J^PqnJMJN.$..Nf-c5:N?2ZRO%:'=p5o!IXn*UMrAVTQd$#>^Sr8b&&CMQM<_W^MY3/_:#K(dXj):8FgZ0-n+1O5EdQ=!o\''o!&Bha+CHP)J;5$H2$nAimkY5Muf7%XU9&"][SXlF+K-M"l-8fXTEBVRX5nDM^MnGMCgcGgK[uj<8<YRZ%(&!]Gq3C<OeuXjHBe6g"g$Y$JJR33/g3>fkG-14r!p'n7\:j%iGph!![?Wu&'D![k.S8>UJA/CfK%D2OIpi.L9:MC<hKLfYsfECnSPmCQ-.rB<&#j.Nhj$DntI'n,-G=Z<iP5(DOFZ=4cSPF$53_H%5m=Um-0f^ds8>FIe^d&:Ab!=/:mN)Wg)@:B9][S_Aq$jp\+5Z;l>(40af15>DHI+V`qV$`)[Go0L/Eqr"a,eV`\bJs._>#"ZGuZG%1gg1(mJ,g7Uo'>:Okj)irMiM]aC6[2)d@'t[o*BY]=L+eEUZV!%$67?iJ1\%Nu7jkDh1%LU?]Ol"&2F7V;CZc6i("?`ag<%h%-Rj%WpZc3-cEHl1^26+'O<5W%M@ScA*mr_>uF:Z&b\jA5U!$(YT27/8_O8scCn=a2%ZPkZ;]"IImUaJ&BA\I!^-?-Zl9!"dZ4$j3*e3f%k\^l*`<1J;)=?C]g]fSG`u/!^W1o?+B$*>r@6FY"VEgA][)ZQKT8>u%XR9H3f1W^Ck!p7:H`8EjBJ&@GNGgIj9#>d[H,5rZN%;Vt%r?EH>V,D0rneP;briGRiA"sODjSXnW-^oQSF$l(D^WZ@$hhuo9%PM#S24RQRU5%q6?"Wh8jJ?7l]VC61EqM0]H+L0KZF4OBNQZ\h%?I(O@V8r95pigUDIJ)S]A2HY[rC'bRf1gkj4m](NRStE13$9g]^`Mq(lE\/@+FXA+Y'X$R9A\^-O!.h>pG2`L=JX*C8LEcLFUE0m%Y8?QX"8,Je*..FVL17\khfoB9.[X7uglAM7\hQ(&4o]c%BtGgO<t=)&HeHR;KBDD)Wpb;"j4J@0k@ITjds*:8U*DsH]a$K]5Ib)S%&HMb]``ZX<8B'"Mq[%H`p0s8&6=ORnqbQt5TcLY0^8i%+^(8uh7eXH\n#[&A][+nLZ2pFuQ/G4H"#0O8HQKP?_;4Ta)RO3[K?*FN%OR(262?JQmCVKDf*Rl"B4(F?8-3"e.s5@lWlP67T=%XgeQR"h39htcLHGuPd2XpKKj+lZ/Z.k^jLP*VA[l4PbLXXuE;:1m)'&6QA%]Bp'#h?^:j)\iOm^[[2-q!&I(LZlL.IsGXt+8"M3FlL:`.%NU,^X8BXo\g1/roHk!:VBQ="E,6.F6/P5hIJP)mDB/`Ru!o)hOZ*_%:<%sGC]j`Q:]4#6o</'B,Km"mKVa+7^Z"]3m%3ChF70uk/j3?U+R"6`f6T&9\"lDA-7-?gS;iB)1oaa\,fM%nOdo"]$t!$,*rgTN%Wo1QWF]Zq>?X<aVs2uo"hGZapPrEpS$-c:>67eU$-.;9KaJ:*R>P').&B,'GS6.NmUb`>G_kBSdA5$Gm$_9ZV+c3H<WXHP=PWF(,%?jY2aS.ubAm40Y"1RQ\U>:`@')$jWG@t6/MA3;0i*/%]j"H]<R-kP=4Pb'8l^BBCI!EMPO]<\<:GnAoTUhZ=_&-DtR$'<g]0d*J;%7*5p>%fm94UdB"-f:o`fJ5\VWA7Jc)b_1L$=ZAhV"A,n@^^uLb)1A'[&8Kc5*#>Et3s$\G1c+k5Lg!)jD\u#P?ZYGCUnTOcJs/qb%AE#k&DXET.$Sd7,oL0HN%"4,>YeKraMU!aU0LW&RdJ/'b<P/]X@3_L`8G8G_b@ED\S5iZ9m(d]e.nF1Q-Lf>hF/VK-LF)3.K7_L?%<74ec?5afR9NY=hZg3p0;;55SkX_/<JFp9FBFBJE7i&7Gmt=/*ZG:0&]mZ)Xr2CrA+]eZR8M]m/1q]&6eLZ[9l7(p/^Y'>E[7uiA%)@IclC,`LheXahsi8pY/1ncWu1)(M,0,9mZYR6ADXKiV?g#?BB93DW`TAa1.Pu\)Al5Q1E&M/B`i'DC&W]md=daW*<@&eG#k%6pU%L<ED@P(ldI71alGZ7p\R1Du'!1E`-GB(Q1bK@)5,UN8='VR+YYa1>t5bt9c3)pQ_\1p-FRTQZe+VV,XOijC<GYU'-@A#%aZRa%kI%f"^s%^6;,c#<`G>=Qq*c":YA?SkHC@RcSDoF8R3J0r)f8Yr$'W'RS'HBb4U%57/i!K#o?:VHm"X"2.LOWoXQn0&&ZX6"IR+2+#Qi%!D%-\N4ue>&A8*"eAc!,qA)V;+pV7C1mHi$BoQQJ&8DTK%5N\?U:5YV$S+`G26"c)T5,5'(5H]2<mG)aN0GrQ0d(4XUeHdm%&C@%%9'le'q@PEp!KoJWiF):I8EqJ]@!J+"R:CCA"!T_c-tKag"/E>YUeu[H&KG-VAO0jKj@B+K`>?lFKsILsRW/M<E08]^Acn,-)DZW(%4:G`YY>e41J/0Y#`_>n0K*'PV$N3ep!OOhKe[m%]i^?i5P9pt,nhLZJ7"btiehL![`K!Y)&(pEO,![(FbD8/`JM%r#UR.5V'G,]f%Vmq@DKhF3k6&C6AU&i<OZ:Tce.L_XZBL/+]J3')F$sMcE@O<=nT8::f's/27T5'!V,#(6&/5&pb=9@,XoMs>+K7FO_+Mp\WKYd_!%k\i!QClsNr!)#&s)G1!6-N09Qq2g@4<WZA*^gmV&!^M#<53\hM!)T7fq^Lh]ed)H'N7pd*53K]e0-u_&!Pj`D:]f:Dem3$\"t3kO%AG#ssRlqu10P)"+pQGd_:-ot06=8oOQ[B*I@jrKB3[$L#@&;ED,ujlZ_Z23^N\/*<#\+1X:(-hIURNr&^_$l6^m&G6&E$)oDj0I"%Go0p8o\O>(B7p=u;X\C)`FE>,Q,[2'M5:5LT$b/A+n8CEbc6*AkFR;LXGj+O<'d2Y:bJ_1<6H]jPUd,00;eeHSlC'6Q;[c3:DnN$%_#Q!\do.?r!=G35&C;]"!N8+2W8463b5_]>M-:JE$8=^G;q>!'Jj]X44K7a.*J4@n:+F7-khi'jXnRl[r[\oUZ?kul%:CT8"%,n1%3/)4&!iDc;QbqgWJ18MIBFG/c&ph#91`f70BcJH1eW300OTXmh0Sd[LeK^X(@R7S]TMGn&dDQV8JHG$:%C<t]5[?q?n2R'jCiNPc%8/L&@/.SV8M(BPMdtLO,9f.eoO]OP*fe<IrU?:r)TJ!NkGY-pDdO(_[)b,rE)b%b#$<]&#"V1_ud:<qR&F^sI_n+XD!s('Kp6\0V%@=XWm3_Z5e5ep%A*0U.*AJqV6=ucZdS?1:-h%7U/&RIe'H`3]Z0Yelu0+NsD!a^K!8[.;JXd^"7#6_](8agpIi";6HV?@8.S?1:9%%>Os-S>=5jlX->Z1/OGD!KM>jk`a0*!%Y$kNE%J(!l.NE?.;n&<c.U5^s-i!Qj,g$<aX>`!Y%F48;9k1XH\><QDAY%f1L<2i5o.=%<J?S>!=gK%1&r`Ck6HO%@f8BQVFfYnEL;L^<^uloK>mom0<5M4'%RLWKU3I=5u9%]!=3r8$,`/.)(8n7>";]$!FGi:$$C'qp<(2O%/#@>jU;k@Y!KS3Z\qu(E5^>i`WMH[5#(eNaK$m)E=p[;&n3k\p9&\i>J>F;APQGV#p(\)i!&W/bijR?!!)b;dCZm=*2C)i^@e)d9%QVR,F'c'90KnAG6@j'i3"`>fGl=Nl[832trHNfPdmsG.YSdVjOLnk(KRP--6,W*V.rN=<R![ZCg0M2ri)#"RHe>+!+8QEc^-j`J<%$tTVc-#j6U.?aes;B+GbW1/p:<gA)g5dWh@"`)P^5k?lL6u_X-;CP4dVrUlj??dS=#7Hd4_uM'GFdcGn/;0>&"i3n+<h[H2Nu'^d%SdeLgnctPrCCO+78)UNgXe^[aJt;!D$O._f?SR]5IKcm)i+@c]6+7hT0R?-T[,s4WPo?%l``]"IDFj(u!U[+a]K@0mG$1UX^EX3:%>o"l(iP@J,9p&m%#RdN"'e)MCK`\!>'s)DI"k0W1'^(HciOVB#aZA2o..*Otg]/=QE_dtR&[3D34cuPq!%a(P:*aqMF"l<.OYCcM%,Rhs)9mU7ke;9>[:`X1WR[+$Uh;u_.#`dKIL8%&&>'.e/"/>\1*Gub&[n4li`.I1k1+"6gBHp,`ThG5eYV<c2=jbT+"[m=NnOrai%=;Y&%5'G1m/nS#`3'1&02U<^,e%&.=[2@B'9EM&4laTWF*C_Hn"Kj7J)N+)cZ)>dFS>:Y0XlqN_*#PBV"^T\2X;hYQ,TWTtc8_2/%?^GJ2*=&A,lZ,nj3X\i%lnWdt1-jR=/uL[5QD&u?[EDM\M%N?agZ:9:oQW?4BpWQ6.gIDG8h4Vu;J:S1G'5mJO]_WUgXkOD7i4UM%DI8_Z6'HDNL!qr'=n@(50\XN!;eNTPWn>p7c?[D0C&9sA-3r!OluGSa^(-lSlZ/H&Fn8G`[a**I!D5&*F%(i!QRLF03R'-?)G")n%p%?8@FDJN_q$;6_D2h'OQ*Q2::tdNT;Z\TnLS9C0d`[k3AVAM*H9')-ndHh_H8"l;K7iDHI[RXSF"l=f0@N*0"&uVsb;(s*/;Ub+%.kI:nd+3W5nj==h`4@U!**WBB>Q/2.D.Ffsm9^VWKq/<UqnG'5AN>q&5g;eAd2S;R&PiF1`DVR_j.WhU5tY#H2F(u[Js9)n-ib]O%ch)Uh+Q@/:Z6>W/2hQ''g*7bU_.l(@YXF0eMFsNW%:EpZh!$qc@$82IC'kpk,?RS2SBonk_R(rBFj_sq7:l[Zl\s0A=@1Ug0H(];%V+2f,=A#nrJk;9$Wc6Ad;GMBVB3jHR(m@tuP[Vq-+"R[]^k%8<irm2W#t!_]#VHqGXce_SmM7'KMPRu\FWVA6*m)<UIYl*=$+?id%9#Ct4o%QQkV?R.j.o%fgWb3FW,>He-!#WsZN@:J#N4,-R7jbOaAl9Y?W`SJJ^MJ_)(Ak/sQBYFf_/t*h$J_NZ[+;2llea-s1WcVO%%%,U)\R'>r>2uD82@cU"S!<K]5_u;Z9F1<^ejCl4N.XuRBS*W-Y[CWNQ.aQ)E*=?K[@T1:k6da18S,#ZUeV\#lY*RF$H^+4I8Qk@%1^;I]S7jT3*JoIN<gKF1l$o"rY4e>!eScHtH6^V'm`BuM/US09&#7k$$C$:f_FU;YH6isbCX,3c.8DO/%Se^aHs!&7TJ?ZR=#DGm%`rQ_#nRs^#$gM62,W;d*`rPeGY<+<>`n/63$!s&^FiZOF3*daN=N;5>rY#ic8/d">Q/QuLRcb$B[>$s[G@L(G\6_W]d(e"G-7PuJ%%jZC68lj?S;KX[&&J$-D,9TUu1&rcW8dT[8,Vk^D@p)FP[;\CH,9e`l61V7ok'r-QUS(E`;P%E1=q9'6S^Xl8duXY5T&Q,:KQ-d7%T/a&dg'pFPqRQc5QKW=0^qT6RQ>'D;&+"'qCfsC8T`KStGqCPQ5^i)7\$\mk6YQOb1[5\I[BI3K27L!m]rsN&jeVlk#1W[fPeG8c%0!Wm]FTqelfL%o;Vbc^_N0"T!!sT=20La,3+f%%/;5AlWB=I32IT=&n+1%kGqe<[uDVMR6fiABJUrir?;&Gc4lNd?mE&KjiM`Cn;%;+R0/\&Fik"\WVa+)*st:I`.olPgQLlpnm1E@q^s;:(dX_ocZ&G_R+6hL!"+n43"eV_r/fAE95mc-39J572l.GP);-(Od&"(Z!N4%*t*\l?3U+$'V*MD!Ilj??>@2_5;O#QH0=mopZJ);34q%!T*mjjM2Q1ad#Xp[,Z-b`O+Q?P>Nk!@7`4uJ)G%bq'G0.V-<T':?20h=%EN9@nlP98Qi42`f[K(dk5::==!IkeMcYdM6XIqcq5u64F!:TUUA?j,dfT1XMH]L)Z$U55Gh\S/H@,8$Rq(iT^HAD@i3[Io&(!qYW%?e6P)O!$>@\pmRToP81V3p%.S\gp(8,iMhsk$O>ur*$&jNZ&M%,Xp/S'b_1o%d$tM'(P,MF=oaRVrQABSiHgLnS=WNIBS`i?SQ^T%7JXZTnk@bc]t1_c?Qg`12QFHb::7:Ym4TVr?U;/>R[1c8(%53S$h%eacf5pVf5MAl9`%7M_IohJr%kLj/A.Pl-7Sc`JsY"qOn,,g%f5T10lcK.*j.tki[Z'Ht`C]g3#DWSJFC3cPjR3gVD58MmWeQA)?]WdX)buiN4d7Ze'(i6;^&f3)^U:euDH1ZhpoC@UL69,UK5>Fe%OmuYN*BPUjI_kBaA#/IXd\\L1l("\?s06gsH6qhSjn)fq1/e,b@0r-Ns2&>%+-b9)d)MBWUR'=lH25c,b94U4"KbA^3rZ!=rZ[R]%VS?J(khpU]2/7M89=b!i.b!nn+hXTQ$)!/ZWao=dg\?:)+coLqJ2J>S#LE`cB1R)U(CM%8,964tb-cdGPG',pJ/1oL^D?gJ_M'K-%P]OGZH<6>97?"tRJr&>::n`."%'\]EloeP*g4c.1H8/b,Uk>qS9#F1'/!ZC%ihD(KZkF8_iLFU>#dj(2%_"^!KMh1I,98=-Y%+2Y%oqbW@K^Z(OXT\d^gE]9hDM7]$"X:LhZ"Xu<`9p[%<u!'alSJrbd((5-m(Gl&mVg9^(ar0Vf,YO$Kk=Eu]2'4V<Chep)l^pl29\tS%I=6=W7$#%0U!0]*8U>@_GX3n"hJ(r')=c7(m#HoDHP^s[\8%\a@g3Z/\:I,6r>CXFNnah-[]GI)kSGf;W0B%;ctEe&d=/lt@L=/8%BJS6bfbVg#3]<tG(?m(E.W2dhRL2))[qLc4b^&T"RkQ]*`*?'M.KXWCS5i53^c.g*!1XaP5S/2kC3dPCIK=!9H8Jg"?Z8>mDJB47%F^l1PMcU1;+"-4n:aFoOM3WgJaQj>Sk5kq&Q1RiWS]k<K<rrC6H,X3lW!L'OFP$X]DZqHL]\U`=fKgnV'JDub1`rp3m0)=hKa.bC%Fea9Rhm,QJXad,Gedq`"k;?T7qE451O7jAb0Bt4C]Ceh\Xe!h6;u-M\k]N?RF$ZVYH8_(hi?7eaUT>a6`2#@Of:C=o)eg+.U3u5-%J_9#7B_f(E+SS',GeYAY:UF.k5iJhM7*n4mpZ\_ZVtt^hAQ5;Wf-'obQe*S%G8oLB(d9NJ&P!YDmdq2W=.I%c;@)$h![)bN%Tp_P%odf+o(9H$^U(l.4^IgaBhEnbW_oUghPg=bSBCV9_?4\BG\*u*QP.t3*9@cs\G9!G0GGh]L/DW)H2tt#Fr#HFdJ/hihe57rC9?NA'%OIoamg=oQu/*,WS/s-!9ECOgH*Of!#DCL$?a2Q%M'GD5N9s[@%pNB#V4C)Ab4t(\;XtojJcI"4G$<R<!F%a(i*>@JALsmipb6=^Z%:(0h6aN#k_R-kJW<\D=.QEm8ngtqjJ,MW]BBkmPF>QHq\mKs*YC.FJ9/(8rWb:<LgoP$Z-epUA6F_0IM0,jcC]+Q;Mhhlr"j3F\I%n4i(F>2Sf9EriAtlYBAfoXOtANN?(5A+ZC[-FbninZMq9]b"'F82fj!Z_gd.Bo\AT]#uS>Nk[$VO-NZ!TYc.X$/+K.@DK6]Dho[^%Kunp@7pgY/m)"0Z_-k55eL5WESK8a3?I"4t3.Vdh9=.=/N5K\pA^@G`.,<IDKMUXJemNol1NHr)1lr^1$>QhTjN*j0JLt1Z43.Jb%(!B]q6,8=c5LBh#'AL<5<K*FbpNE^,33c2P^k.X]6[0Fb(bo#qfg[d`DJSWZ/+#'J1;2+rOZcpb=&k4Gfa:Sa`Q4T%OS`#d*1D&6%2SuW4QL=;?Q^+3Q-g-etTHKM<bP0F=11fB5)eL'lTn[!.+hL8CkSjFVj^PLL,oOf3MbgsgcDTJAcO%/jgX9-d-fna$hlBk`?eXh6%[MU^bIU3TU>47iT)Q]=2=siS=s4=Jc\%!f,K>_&\!W)t&\rUh&!uf5Q:*&EO'+fq!2_XBfV0ge=2KhoU=5>%*K4)!N`KS@IGI:6k%ftj#W=i+*2>)J+l>FK<D"Cni9,1o19<e]7D(tbi7'nQSi8%#]upHBDMZrbot^h>B0c=AN\&4IpJXJP8*dm3G*Z"i1[T8J3;dY7uW%-#'pK5ql51(IId&c<D$P\,)(U6DXcc&TL_@"?QfOW[;L((b(dL"+ldf<RsI?;IqeG%Z6BPTEc\C-7[ifMBr5/'Id.8/.J?;0Yob$%'H20,I+(E]C^7p:/R;,[KUaT:+JG<!=RnpSoZBoJrCQbHKrj_UCtm!P)oq!ZW/s%9e")XYH@+82b;[YdU=Y3`Rl4rSrDACD"+hYA%]3`i3*DHU63b/[U!iUm33X2&:`@du2Ae\*Y5TB'OD*XR1coW@,d8n!`MWi$n'N(TtLgDWI^1![h?3I<i4)2.LoRE&<1(/b3]15AT%&1StM!_TCThZj<*<9ik/)AQ53/h"NJr`LE-9<6es\YP)U-Rl/)-#lo<+LiZ)_B=GTnA>J63E/2)%N74CGn"U%6SD)OAs*?F2=pt7%^/rCs+o`Kl.NJXT`.Jji+NP]Ii).9Vq5hQ3r`gk)cUX!1a7a?Dpksg&K;+%eVp)dm9UZ1k0SIlS>Y(RogYGqa6r359h]O.h;L+Hg%8]=6hgo"=Y#=[D&kbJ=rb,,MO4r9a'WG=4-,RW`0co4IkDKbk2*A=dY*8;!;l&JLmI)&))^ane[+_G]];[4]7dQ!6bf9_YOo3[SG%bO?hfr;Vs5\JHg&lQD%Mk#"(-ABR<eDhCKjXG(^u$fOu"4BEB,9C2`u9^2d/\MT8p99_uU.$mA#RY$WAalfh.90@DP/?6cX]SN"Y%ZY$V5:rPu-/8ZPG`Bg\4m5V2%K4;C@a`U8kbJg6X$:N<qoMEMA.cj_ddOY)R)Ff%,j?U[TTSV@(&1A,B%6'<D^da:8imtE^]V)&r%Y[Y4Q:6!2,loeEZ#6>GFb[H,6\Jl9(#7[u(0qfec5iT!gR@lb38"F#)hGjARf%%!t4gYrV9Mur)Mm"h6%+,:p&rlG,-d"GR%2Yj,%,&)`L#@u7b5%69gs!r!J"t*'N7;m,[ElX?ui4453j5=T7-Sm^oU_ZIA_-f(m#;.cGNkAaF`r=J9'Es?7W,u,HPK;CKioO8.9so:M%8XacuKL\1IXFh]Znot\t7WB,DU&^oIi0#oF8WIg(9ZKPA'IRRJmKS,:E#RWOAblRm*T\`[odl`T\W*ZufL^,u;*0FiOL5>(!LL5\%QDQZ:%16"/Zl?-BA'8k`j5VtE/r0KN):5Xa5PUp/8/)?.M$=+ino>V@5^ndP4FYV9l.10R9+#AuL?)C",!RbqDqIkP7b?'n-,oJ6%7p+.cATD.HoQQC]$%*?F-e\`d-J1Jc5pSg:.bk8N3on"0HjV#CK(JCo+N]_.Y(<B8E2).n,T0M.2:/=a3tFB(8MYr*.OH@8jAR1!%+agj2OpEN$)X'!`?OL[J)tZ`a.!buNnZ?1Xnh<8t(i5ug,e6d4>&1@+)`[_Sp:U6)_r?U+qAPZ14Q$^9j_JglSbKWi4@+NhEG5*s%Nfi88_.k'R,fcGY;h[b[g]RI?"$p1V%H<&.L8F\/YR@-JlF(,q13W.P6jf4L2pKJsbt<!hgY[gEXV2G[5:;"K<(I&?0[UDgbu_h3%Lo\u."Y)?_r1+@#8;c\,IkDE:64S=jNlXd.hs_d35VGA`!l.?ZpOOre)-S0r$Ps9^mGOJZa67iY#*OMHi+$j?"N6!/-4L(QE952`%"\IG,dOo#45X&F8c+%5U*dFK#JNu;]4&l]r"%uUd,Tl61(BifOT"?,>*E[_)!p+C[%-rY!Eo;jmR&)QATr'#';?DWs2N3:l%[V#L%#RMIi=s6]Of3N*FbDqmZI8q^N&X!]@,9YQ(5-.R></fmj'FmMr4b+'BOJVc7-4M3e+G[Ko5rur=55(JA"6l,/OaOr2X9*r\J1RQa%,T<ngY[L!X,[limK+KCJYi2-HO:4.:<Wr%]f@;\t,X^H'^#:(OYg%L7S2T<.m]\tr@-Z,od0ABY^-\J$Y[k4QQE$p=)?`Z`a"'*m%aTREWA:dA13PQ":NI[uXp?BE@d_Q)pg<3cJE&;`7!h,92aGBt)+2$`pJ?E+5$7qnOZhd)uFDu>F0EO@E]3ufgR&XSf#C&(M_a"Wp%<#$'4OH*HE5R[)&mtR[fh]0dr_WAP?#;n4qqIiS<P+0e(S1=_$^RlM%E(a?Imas[XT!qW"3-?EYJ`G)Clnh_\GqJ'JCMSA@qm3Ef%j99o=*V'94*<$@#jWqBhiV%&kTj?H&,jA]VqjFU<E;=#!.R8"J1&^KI\GMX`__1@@P;KMRqb5VW2dL<+^iU#:["+H.1ouc?86)pf%"H[$S[6p#GV$&R(#i?iT&1N84dTiF8hEjU_1pG=22;MrR1hd":JR)rACa0YrAUp(PTgBQ/\Oj[G=b'Hd$`X15/mc.i\@t'0WLbN0%W/q&q`uh9A=Btm6Ykt%#`VhH`e;b=Xi2^h,[Gf>0?'Y]BabR(i!Ro<.*\dZqkiBY;pjdJW&OlVJEq7\k.0,odUaT'NpdcNsXuh$'%%nP<c4BVdN[U5("UCP^`B,n=3QHhNLGUKbrUKg>Ks3a/(TXaJ.-p(O9o;g/WqZXRoYnaof]&hW^YsNKTF1)+=DY[S9jpdYmIVJLV%&3ArjB%Co^k:.2Y\`T7\'nia#T"RI0cL2\AX"YQ99Tt"S3R>0Aj8dj;d`F,"_@&uV]::)K#]=j-\Z<=OT;5n7Wq#j)K6'beTODfB%nbOd.1KQfZHe-1b'pB;;&et]?27T^;U]89ga[VW%`3pcQ0uCIjLTt=O&+gau@:)h///o)N3u%X-dcGAhObSWi]p)[(+?J(MW\f[[%F]/i/SBge*^X%Y`\]/*OL4s[XjUQ)ff6'@H3#lbULakdt]8;[h:'V\J;8^8%L3a'tFJ6loN&D\m/@Hr<ghX!`Wt8QP-E7p=C8S"5%37]PikGn*GH&%9nX_+<.Qh^ALM4\,6FJ"\q@<AJKl3bq4?;%J+@CXg([984@FD<CJp+&T;]WJk`\=E&sm]rL-_U0PH7RnGt)?s95%M$cXP>`#I2Y*;Ec>]B@eTDpgYXFSL-]tsL.B6s^Tg"2%:Absp.pktnq%6E402Q`382]E&A7OOZcF\khV8Q?log<?g2mUff3$Gr[0%IHc9C%nJXkUh_+/B;Xu;*U&ZhJaPjk,^[(Jr2'$+PT*n+'o7ll8TfGSIfHP2pS[)U9?\Zckoq?DflVg[[j\6rcN;Ko^?V`lL=9F?%gZkFnbl3<pE5Lfs?fO)O/?g,W9?SO[ctQO<$IN9ORKCl6^:nUXX2i=8SPT(_jX+=A!AqkAjaM95qB)rOdjI\;#0NJPs'LoJ:hu8I%%p0h:Zco^=(Z89YAD7;'a#`r1Xt'H%p(hgq\n=[C\CkM_++5aU='JjcLAfd#<d5(\M]5uc<3WmkEJP8.F/b6"`]p,$n!^2P35.7H%2\XFSJ=h8@Oh4tn"0Ma6.mu<YGQuiA^uahnTF6d9:W)+>?b`*)m4Ms2ft9tsk]ijZ"d82286/%?H:L0)iH3O-/J&q?eS9g%En@bW%EB;p`nTUL`2d0+srgq8Qrhd>;$;l"o-nlZbCt7:ET,ABY=u3>nSU*kA.qEAJD$iV-J%uGq(nLY'ha#*<e;pe3YIi=?\X^F!C1IuS%SA/OlnfqTOS*n!o<e]c$j7)SnaiS0r'nWcQQIiA`7FV'%)Wl-,FHc\C,f#+$D[HUSi)0]L#[Dklac=4)0<$G`DSL3a$SFYU3?=<q%?P4(ZmQRLI*J:D";H:qHrK?.m=._&$esuOd=8OXJ]Mu'JJLcd1A]N`O@uAtpGNDJT;6ILj?;a`rc?r3*ebOJOmNk`Li63uW_r/a_%:VOF1jW8b%Z[;!adF$)V/i`1-@Hj*<FV0-kIaq^F.L_X`XbWB@U(t3Lc=U*#\E,#6`R6'Qa'h1-3dpSl?J]h9mk+Uh0>EOP:1)fM%#Cn=RHMf(;mSe+eZC>B0E+f)JQmVNi%#ch7fiI#($ZsTgaKIZRa8DaC]KgS_cePV)6LL/3<6`U`>E0ujKGUN!<Cj]M%B"8rip?2m%d5>R:MRd6B"?We-.V'm)R%/1t6A=WfT?sN\OA<?$]L)%Jo<lE36[hY%h_;V#VaR]tU+:[VScSm4n.W(E%_;ak4t*UN3o?iWV&p8o%pB'oY5fEa?FoMIoS_<S^__*S<!iNS[`D%-drrJ%YhIGX6!o3H@D)So6iYu.r#0I\<n/t,V/"VYh48(I3hYXE(F)PH+f^#fIT*oVj%pG.SDE,jU>oD`"-p=T@/*;&$=)!?ucEPRlfo)m=e^uDS6O[6mB9-.t#JDuHqPDB#=\_I(qA>7')mWWI`MTahqdXHa"G>'d8MYNQT%VNX/F`sn@3%F:gmk(&5:+IBQHFOS2hFUW0!]X*4:;<N?Wp82R7*,N4VBCk(X3:LlE$UP)):.9lp`krUk&D_TTjVpZZ*YY151\"%L%*E0S)d5>"[lknMu*-PV]lB9?FXr,u3Srua&cLgWCBDVB_e(f=I#b:+nYDg6+1>YXVcH^<P\B6eT"SVlieaT#s8H#Qnnuk=WC'+&Y%2od+-k?2#B<[aJI`"?G,3WApPp8bB8^O"tQimUcEGV"b*oYOq6TQHm^WhP6')nja]',]NhZgB<kE4OIG<jG[1/i=W"NkqQ0IR(s0%X_r"V0t>eIdhXfG%X-,TEPb,f2Ue5:`3j)oYtM*S\VlG]nm:JYkt[j1D72]MYaL.MghS2bldR^r37B89q@/(0N=7<?2]L)W0O1dD%GJ?3))ooX(I>;$T2W9/'e(m2:TI0er>HU5Di,#/_F\Ihhfn;X+L9h>UTO[5&T:oO!M>8nCS50su)<^t='q69=n)mK]1u>QBl"K7'%?1Or'd`["jKWD4TO`IjN?)0UJ]&1NjJu-^#'UEWEEQPTnq$2RG:18?tMG$]aHNV/;LF*m^EQ]XBDHLo"jg]]Rif:4B<eA:.?V95K%\I^C(,Z(k+;k>c(Nkm0"CK@.gPiMR#=IaDfTfX*O3Ha6flWd1EQ4n?OXuY3.Ko0Z+QIitQQZV=C<MiL:*Qs1!)".<&?Qu`6ddO\E%"6It'4.`fEFQlRB*7-r3m3f=]m%C1:j0)-X5W\Wee--kgF+;b0G+T._ma&65;\c0NIq!VQ%U(p>U8VQ`ShpGXVh1!7kS.OA5USdC%nET!<#o]E5;L?h!s3+D6[m<345Tp,.^CEM(58U:4.5!iO`&Fp1r1l=kps2_@/cZ8F4'5#Tm+gD_&Hn`t5;/W.RFKJgf!?mIo`'?S%?32ASN\ZTo0^4+n?!'B]#/DlC#i0kfEt*bkhgG@ei+))CL=(_,WnIg%OiQlN"ed05:1Z`L`lk>t&D_TDoS1bQDu40)S?@6\:`E/R%IV6^K?o[f?OB$mSkkV.lUI26PLakfJ*_j+PFQiHSO6cSe'Z$tcFgg>?!90XO@bH!pFSclbg]dPBVZQe88M+U8r]Eh=2B;`41$U_h%!3l2<'+I3fX?rQ]1k7F(d`dKKB`L/!E,*Q6g7Si!VX%nT#_TIgPn!b]7ou-$KDqTR+:h6>#n6u^E2mbUaD$8?m1M<+".\]30[KuC%M_n!=@&(bsOX@jr"qCHt]D)UTAUh[N8FQiP^I]J'&U)&X*jh15'deK^FTr:"J^B]71d"<^l9l1.O\iM>XY@hL`_KO$P_+43$B\*!%dZ'!D:08I%YSJD`2:XCB#ho!L+J]PsI'8q$"%r-@O?SaVd]l@de<U<.oKl,H0[L2E5CWc+.u<o#O@Y'GPerC9s8"P<RZMu@52ePo%AZKpi#``5m_%=0V!M)h"D6mn`U_3l:QO]0"(c`LYlqOn<"<4Pt4D;Ye>l^#l"8e[6cq/kp.??;W)%9344%RemUh_)EK;$#\&dKXB%1iWYnS4)4RV[`oY@b@Id#,7t8'R?A,.RNEN:YA$3#9u2"WfY[6!te_hU^d+e3[i]i^`fZgl%$TUnf)9,8okE`JF,(ZJYCb4h:um]%GQ)A].7ZpmAAOpt^O[R:``\+LE>F^F?o,D)rr5P+]YT[JpB-R((j@21`a-Z:n^*3Z\>Age=;Otd/q?EQHiZL+%mVC`d*d@,b79Cl%i*cmZ$@1Q"KbBc+602<Y(HMSt9KFR_iIlTM#`4.3C@%r73(&krB.dps)s[J:9O`QVRt;>`60(Icrjca+3rlD;_*TPh;uHn9632YW%%Z4)uUpD1t:gg"%(.(;sFMgX"7$2#D9Y_O*"gTrsD:O8=9S<MFirpUb:k^A>#O,&Q,o%a)JA&0+7f"9hn1'78#<Z9X/B.9VEn*!j%3l=iW<"(%khO&uuPGm+PYu#G''f`(n@3d>V:?;p4;5%J,M1D=68!-j)BSrqB>(oLYi#O`BB<D]"HIT&H7`#8>V`0R!7p@e'E2,QG%`D@-X,NhuDC5#*"1du#/J$eBgm3<PYK&hkJ11ed^o+Lk=Sltck8:8omg+."(AoFl(,W6>:9R9*FZ0WiWk*nKalBo?kJHG;<66oD(%/cZW1MI\P4!AL9?B'[5HTOT*C"u`l*(l4EM\93KjNf4AA<QrOHq76g_@oNjNb,C(2GMJ%>dFR[b".:pK1n[+.;?e!"$@u(m,#143%P_pX;]f-5(bMYAc'lu]QB]P<_=p:,bNepXOl=Lt<3^nL$K0Z:BSD`-U-W8m:m)=$;[R<keK1)BJiG&qF'=_:9OHEjNdNtZ2jUDHS%P"o";1;NjgUeX`b'bZoig;$`t:auS-Bu?*3)45O\`$go1=VUq$bLjRobLf7opg]+^ka4o+!J[sJ+BIEJPs#LE>9GX7ji"#"mfis]%X4Tt#AM!.gY*EKW@[`m)b)u"Z/+f^LkO8$K@6=:*UdLP*N[((:A6BD4(tV&O08F.jVY4[>7'[domT:SE/I24L%U-He!%ko5OHVC(%GRE*!@ue<@.sQHN'g0!_@09*A*,n/(81NbPd%Q(e`#P"7a<hL?1eE)0+>W*C\rd&XOuXp2BcnjmKA)Ck3\>D02955eEu`o:Y[J_e%Nifhk"as<DQOAehGSHktD[nLD%3mIBG1o6[A<,^YdiorV:m]Qp&MaU4bmOEn;\Q?35NE06PW?6D5m'^$**D1W6'<u.eIrC>diHit%n>*o*P/KAbTW3X=AW@!X8V)?QV@'[0FWH*.dP`=/S#h]K1!Tu[$#WiX2Aeb1@YB`GB4*V)6rIZ:7th/1^)8niV1V7p3/>e]"retZ%B5e6t!YqF7>tbJlnn]W"^a),MSHFpD`)D&J73*YuF.SBP3R:%^aIhbM5;s;o+,#h>B^$H.e=],CWO)JPU5H<p'S/Rb@=PHj(8?WL%)G$k63>RF(&U^s?M%%6P[3-`IW]%6E+G4.c=h#THGUDe[NilfdJi(<HON=(QFY5)aT!\uh*=(O*AUfD)p@.joMNR,E?2k:!Op=k*%L6:Ck33trEGRtXmOARq[oT.`<+h>K)69s3hjkMScCt>rX+Y!Uu#<[+K8D%=l:r@aZ>32N$BGa8\GQ\a*;$4;3@6[\u&qST7mY1n9%,:Y1EH,Y%5ckm2oklZO36:U$`W/(==4TqlCY^i]]5P(8`E7_&qW3Af7qWS^rkqfVX>0-Mu4M!7PmM-TH$W<oV=V1kLkE(A36:U[m%[r\o^ko1+9#ZILmYK>Hp&j]#8F=Q_.:RU5(_Ag_iOpFCcN]B+A5^*GP`6`L'<p2M.#p#8g'F9qbVU,dX1fc)R,n0r&FG,68[SoJ2%UhGAhJp5TsO[04`1Bdgt"?3>jTS#k:ME)]!XJ1<,Pr)<DOY$V_0;]'8Vr[^HZ3@d[5gE7McojmZ2$F$2F&8i60p+U(L?/d@r$-AR%.rW12TS(UO.[4Jjd:+U0"lXM:M.Jt=pjgZRQjB=:B1E_N&jGt-XP[C34pMjh2Cti#6[S9$[E\Y_5'1X5"\n<a<7%5L_\!RHS``0n%OIX^)&"<K&E->o1-e\YI5IB7#M>gbaZpp?tga](MjH?rUfb,!SZp@_h+`^+Xh6cEfiCuE#c^I*UaEaQjRfpSTO0nk&hotK"Drt)7%[t^)<g*d8G0U\_2-h'";H)0g-6"Dl6UogfnDn$X[:$d:\a<#1iMH#DU;7TU-SN5E&Y`VZBW$H)M\0F.B7E>aO32!L.jFfF-GgJb>%KJnh([)i\m#BFUQGbL,/HkqO.%i]*c/`"t2GD4*GD;:D^J`MNngnLl[A:$3Sa4Wb`4kk[R'o7go`e?>\Zuk!c0T,Y9OPJ.4FqlJT%\XOUEBEs%L%Nb=Om!UrdNb=+QXb2qbZN0IN6#f"Kp)C-\cWgT`'Z<`i%m]\N3tD&LTV\tehb.duj2hNH3*[,I>sEs]V(/EoQHgq&%E1\.-enG#dO<#UY1qk0.&L*t(*ukb\!KCH,B*R^c&A(Tq"rG$Mis5#qjn*p(.Vokn"OPT@pjH@b>@HQtI#TKni=;"i_]j[Cpnh6t%_T<u:,<H)EfE\d*+/Wo@9UcW+qBT-YmueUZ321NRKTKU#g2KMI#7K.lTIq-RY"aVb.Q=[.g5;%[#e;q:krU4E%`]A"KNoK:T8%oP%PM8nFZ>aYL6,Ug_[8dA>(EWmAImM/pTb\ON*_pe0#$ID?BFuCdLITWE13JKl[K;Sl".e4$Eck&U0sPk!+]SY=>ZW%*r+F0PN-D97%U^E<r;[B@4QHJVk-EU`AZ"Ii\^PIEr)dNAG;+jp$a2Lu:_LmQJV<t_GE3P%kl4>INdtor_R'DO<7LGO&-$DJO@n_So[UGIOggZPG%@U^u$W)5#Ip2X5bX^a4gZEj]iL3(r5/p9$eB/Xu#ns^t.b?^SD&[<%9R3k1m;Bl\.ErU%=Zfb@Qf(3j,[Q&+q>eK1dmo(S.b,l]'%dr=Ip\$igU0]OCe3`Bl,36O4Nm5Xm^Xa].B"rk,;>fr(XA)'h.QN_MlEVkXoD3FtE7L#aT(t_A=3ZSkaRD,mWV?7*)Enaft.Lt#a%S^`NVo=.d4g=A]+]Nu_cNn[mPjpH`dh"KGW)\2R=AM/cpO)ThfK7QGXFA,B(;["kk6uMC]CcL(gmANh2E,_!0QTGCX19""$iZgAj%=r!KRA8-h=+k$Bbic3.*X6^Y07Gh\#j&UhI>?U-u.=g;1ium^s^o-'D0U8-e'bq?W#q*/I?m9g>=t5b!j=V32,\af=:iMN):G40<%f,&5PiZH7s(]m/S:>%mWHa#d^RP3?iAcZ)HbCCd]W\A,)f@@"QA@mqFiX:Ru.hLo4hc.K+<Qn"Nf)qqTRM^jt(FkGR^AtS/L!i!J%+K3-nW\Uf%!Hb$_#o&!!$Uu&K<\a`\5odU8gHWcPU^WgRn2(;pds+6s.R>7$'jj@$\-@OeHm,UbCnMAun(OadfmeWNI#/g9';#Y(%._YmsOFi'd7(T[>&5nN:,S/:>TM^WN<<[9W5VGmRmo,mT(3uYZJQaV(3XFH$,qgXtU@^_bU-:UBlL76<]P:hPLZMfC#h1#%cJk'r%D`s<^.o!)fTECV'W0h`/<$0i%nM(bS&s)Fp+@b=$'@&EL",U*n[LNL!<tc/H8bPKF1E-U'C4>SBi\_9H&j)9f#a4D*W%Mb.:dD]%%X!m2&58@A$SJM:._g_1ZMUncK.OO0;7<0U,YTRhN`lJjg,&^e@PE?2"I=l&F&UdT@'M-/:8Q2:TCe>$7,&GEN2_59)P,L^A@nLSs%9QWs&<A>(@d/^[;cJ*kF!'b>"iCV,'J4*`J&g`/7g`V_1j^Vtka:Wl)Udsos3@UY1R!_A^`6JJSMf+WHIeF3kZW+?IWee4bllp/e%q.Ib(0tHs7<Q3Bl08V/(\%O,gR(;Q<-]$Z#_)W3P9^Xhe%NUc)c%301EkZ=hMOF'A;S\Sk>uO]R?##>;'p1jhOq^HiFIV8HfGnYW%:[GQKqJdUge9/[WZ-HDs;pMa&b*E-8>%Y\/<(A.C?E6?RBU<W?[N'.4O5)T?^IRmsfa2'8*:s@$>dJqFQlPPBYr5;$2Vj4Mak<PD%d]mo*l0L5t/i?n2#),/;RW\Lt5g6@=08V(B<(tS]:IRrp2>tm^V.9H*AVFrSj]oRlVa=-;4Bu]`>PcQOL9&T*E\$Fnh8hX53Qp._%U/Dr-),&XI\7(i2PWcDn(,M8^3HmbG>BpeaF=R!Z^s^)Vb%kaX;X[F:bu8@[.MafTSs3+bbuOPo.tui+G)muLXqrYUce=Ce&I$Ji%du:-9i.bsc_Dl74e#uS^KT,a[jph>fi!==Y$<`g"B9%3M+Ih1hBmG"j`U$?#d]I%MbYji/)(i4(QE%sO/#$[o;Wn=uBl&n@f8EZ8%[5k8Yhf4!1QU3m@1ZXg0T6O:%gRM7LD;d`QDA_(B<_RY[g1VV!<"i2'54ElTi2\ia9/S98/r18nK!4f[VgBC2^\#/g>CFG0QH;N\%dGGpI(-qUBnEddZcuQSegsP.&GL6_?r(Un:$s%J(d.8<&m9:LST"HT*qh6urE5bHQ)@:BTi)94X>.Q1fWCV9bgbXJ2?2s9ioE!4'%DmGZ5ftE^('t^unrPB(E+R"1g-O64q?&>iZ.aK4l$HM!^6117mDV$UlfqEN2\mBmS)s>^&Q1pT?-u!QkO#lM&G=hApC/Wk]dR!HX%-!^VlBpVeG.s^^;,uk&<e]-3,RuB7gPdBVAp<J9P)_<,bCemt01>$jmJ@!f3ekj41CL*)[:sAS5@:Fr39:&Te,VNHO2:-V_-@nm?%>2<?%`(Vrr&[KhY;_^&U9N<h1URC'"[JMW=]g(V,5373-H'<>>RYHr[Au_u"2q_f?WYcUeVAd//:,XoQfh-_nV<%BKjHF.e&ccI5%OecFHS!e$WATh[RNN>J-O\;\Y-BHBsW$(/`9;2WR7uf6k!;U->?3'Q9k^bp*ZGn1&&Mh?P;$4o[QZNZ>F'Ol.%*W]_<O$(pRAM*7%ND#^tM)11'PR4cX0?OJpS6'8L6_)cF!]QY$A;_*b[+k`ppg>p&m[C"rPl*14Fpsm[8Q@M7_Bi4$`!Mbu"Tg&V'&C7f_#WMjlPNa_%P,_u!KM/>&M%M@s$3Wi.,c[7']mRE)52#n:mtQD^/NGu-bYIRMO_L$1<pnmieJWCAC%d=Gl%MbU'AP7E(C87REIk6o(ms3DWa]@b%RGZK9qsqD0/eb<>YA^PU@rGjX7DS^S8V+\Q1<nKFHIqIAY<Cd+5-:VUm'8WN#^gP^<&*mV,uqpSdk*"`:<q_%%6$tNDFmeMn@?p_%_?Q&?=(-`rc)\.dgTpQlR!@AKW'K9X9;7:iF%^/U+Q-d'RYlZ[AZCKAP:_Uu"?s7>W`X;HKe3VN/Dp1;X<Qkk!g.u]ddE,uWp5L[%AT-@qGF;"7oN[qXn,U-/Oj57;;)-J/36n6@UiW5+CRD%=Ssre)d^kF^CcJEMG5,F^7IT*(J<JVLC#$.W^Yti0jbs6bZ&=stYW(*5%?gu(e]4\2/Ws/tVjX[`\L")(HZ*B#TE"91XXp&90?YV>l@+\_2?AR9liOK/a]0N=.!OZpboFA)e;M/SM7KP6=Rc;!j"EbWKm:PRX%+kbHGVD8n1=G>*ko6c(GTY6C%_AN2[\=fK]Q=d,X#R5CMAVj,"'f[]XW4)0%YBuA8-"8<^G"3!#%)'h4gX?oPrR?'k-=E,`eorf)%7?$<k.H,$ZN#)A^1ALr&Sc=mhhAU(l^2)COp@I[Chdlc;^]*i+s6$TYf73X>r;*%K-/<X;V[&@YL_0eG<^4RWs3ki`j8\np^\Ppb%qoAa7O6>,EnR):lhu8ULFT7\Wr2GY:\rYZ]bLKALpjM#^G)`.Hf0=t9?i,?L[4ZsOVnjSmdQ(3ef<(E0%kYGt#Y,DALYFMA*n],C%66&.5Vi#KT\6<fXEK(r!?YRn?:c`/:7u>!66-]mk`%Za1(#nH)p3p`N*'sN%NSA?\V0kJC[>H^%jkKBu9CI/6RkhH)f7qH$QduVN%.r=kt!68\\lA)Y3E^A@(ErJojp9g0cYTkBuA&Z5h+nhVU\##h36I\sbVXG_\(rGFEPrl/`jCcJpjt_S;O]@@H5Y;G8AuYLTRQC06%klJF1RphEGm5baG:]AT9O/qV94$+.aV\na'g:p*U^If$KXkoeQ*k10G_iOsX%,^#f-akf5[VHjL`guEF`p\BRbBKQ[5OU1sU+=;Y%d;g^T0RKX]o*dnNpG>OD&Gf0R+fu<&iq4trptQs1NW%@1%'JQ(j)(Vj6*78-IAAHVmPOQ`!*Jf8dTsaf%qf`S'kX#.W3D0Lm6FCm%0XUr,2MnXiNU.13T\YXSXB-W%^+fRJs2BK^0A#lHrMT\n++O5JJ"H7=r"&hdTDn(^s1<dXmsk;fB)V0_s7@uEh7rods(qDDqN([U%5Q'DIs0r"Vo98t^s4`$n5*Pd)hfo%RIET>'YFLsWqB,UAisf[*6majM80h!tS'\OE!P*WN\8K^*]:+e]"u_C/^W8ib?Of$(C"U?Z%m>rC&J46fr(d7u>-MT6)1$UW>K)l\8RQo0+ZK/d_lLR$JHTZ2Z/MZ-UA9[X*]kk,SOcfCJ"r=WnE4^,0(+FT:DqdKn`\@tiE<7Q,%eXPqn\*piSCCf4>-J^c,im<[sfULMrU-1D]p<#S#]?#uh&dYVu$i%^_LT8@V;mg<mj1),bjBm?>_<P';7/2p4WLSd=-^:h3aOAe%%]LtRmQIRqc\F]7gTT'\93o`o5HZ.9qVS/)_7-4^0cgOa1E^+jW6_5Nd>\5IT$!a=ncXj;U@,</2'9>(B?q3W@X@?PQDtTQSmc*]q%`UYX<\U"<1p/jFp88Rrp5MO8;>fGRk9:5s/!G(BGa^WLV^)59Yp>FnY)h@kd!8GXXc(?YDJii,bG'oInG49+(SZIXj&DV+HV%Bu[%06U?+hq5pG1%jKbEb+Y7a3_"?T.%:[_mU_jfWettU9ctB24me!a?$\gpGbXN&P&_>.D+t3VKuuImb\&tRi/]HIR?G.&`^oOhCQ&0%fcDL_hOZDN"`cde$Mhm&/r^2E4k\^Wdu+/(O*-L3]mh7[ia9EmG[FY1\Q!Xr*9O$MNo(""FUMPYF]J$16%%paG9$^sqtB)6?8Hpm%[h&LUrOPJF6r#[h]KMOqOmEj#GM;P+!'I2"ld@LC#ILYFZOaSsro]AT&GIiM&r*)74*H*WZP+,h9[)u1s(=)hbpuG*$fs,44)d]m%Z+o9:D)VJQ(]W&mkZKF#Z\2a;cI[G$AoB)SDg&R_/@h$QQ=c2gKq<UO/a2iAblAJt_t7I"c@.e;$TdgU-2*GL;`Ss];oPiWIc^OR%QkMXYJ:RRDYohW41_[?Dho;g&9-B*+H]Maa80mep:8=[T5]iWLD+ha+s5tYAc[th8P7t9BloC34hNtHR.d'iE=nCFFZco]\WM%_D%fibR,G[5EhC#r&K9,kcUKB?m"2E+>mS2D48lH`6Jfl;q.o=>P#leun%!NO&i<Hr&<$fj]iD/qUD?+@dLcaj*uUMTNZU`<U[K>27]%ah2g!A&3Y"/%alC88(B0(uM`pN"H-4BDSGlP0?fGG%eH*,tUZ#F>u@+(@0+@\?9*PFi7hA^PFl4@m'OI:L,hQ*_s-p=kGttr,$sd%$2_O2gn@JsETdP4mj,/lY^jH66Wq[!-p-j+n)N,A)h[PnQ+%Y#Pl'5<2*UWG:Xk%@2st,cESn9e6-fVr[9(rC++$@MZTb"pfD3>Y%n*U1Q@#:GCWnBI_i`gD$e*grtccuJ,oTYZ=.E<&"JS+8dba@9_1Zok2f]c-2b(>TA%<e!^Ys[!_q$kdL#\9Sbo?A6emNJB4_rd8C%Himdns&].6#Au][Qr!;Bi<$lgc>[gnE/E\i?6<Q\Mo"Ddn)[Y1hSZ#M<U@\<H3>L3F8dm)Q.F/1WJqk;3g<3$-V'f\WS03F-DkV'%B=iD\M;/pP&'_'T5Xh:8eIIit0pMKVP8;ur4>ko,^6!2CM%/0@4SR=5h[R@Pj07pB#*FQ4E1cN*M&dNbTY6V\HR42']o'iibq#],%k,2Y-'aQoJYPD\?<E"`;qWI`RI'OKAhP*dkNucc=f]M<nh,#7Vs($YOn$b<W=a*%k55+#\!sTjihT7r`7`S7ee2:N9)E5k!Ie9bO%Ph;21].]/D15,)c>s76"'MT4sbAh?EK#GM,F'fgq=F/Tpp@%LRQ*DJK1UG\R>g1DHpl"i`NeaUho7eW)-EXsBQq,49J:u*Zmpj.E%FQD"[hNp"eYo@`CK62V=QkP=:%Gf._MD>,G]?l_55:.<=CZadn>h+Nt'%hj2)-k^EpZWMCLbn00qn!o8B$<Ncgp/rR)F<W>S-O3t%%*POeBC+%uY=F[u@-8TF;`Hp,En5^9*n*,X&hl(pqbB5YE[Z>\;dk^A#80:jFI(?U0&:dcF<VMKS^4AR5cPgqWeuqXo!`T^T6.#2%/,hGE'KDf1LJHK)*3_5Cq">2O^_M[=%68-U7REFBOcKSpZ>qlrN<N-jB!9,M3LKf.^'OEX%=:UmgkjaI91!9W`BsVeb3REJX>[S>%1?4()&HEZh]q'thS[%5I0p%YfC,)2_`VJ9828%[cLBp<`jGBdL.g[NTFo$A-l!"A]\D_?M\mQ`)BLG*Q)&Y7Hgp_O#Bg6n!:H_sJ%<?bKe^)f/F2*re=Aq4ddg,;+$]=C"\kKr1b]aG!H#j#RqdOA1)`Ui>%`Feu4>f,OG]*4q<\qJ\9S(8.r);Ceh&M5-]bVP9tH>qb\%K6<eP\(L(q'tGiAP+.%]A@/s>6+8RZcdGOKGK2Ld5[I6"mifUBJ>+AX$DtiMJQ:RgQYC1$(J&Oq$R_>3hsHZG(Rd#:P!^82M8-`B%i]<34!b/b#5Bjm2]d&MJId`p"Ln&se6,*9(0"mYJkkFb^g@qN=mRR:3jB5<3RfRiIS,)m3i/;ukC>h<:;m<#g3HV2g4bjA!a9b7u%"=4$r-B?cj_%I=&_CCq?7S\9h3s1V,OQP'g_*5>GgW5'BMaoo#O88>P=oL:1LnYfD4i3^;5gPcfp3^'RC'oe(??ClS(3=D&+ss$k%4dPjm'8XB+Z5*c16%.%;OK#J#VmWK[\-ufDL79Ci1pV+2Rl)i8+$MDip2g@(fU\f32#'/1)#e,(XXBF"Z,O>kM[p4)M9QDF(`&8p%HIR.UVIg`A(Tbh1Z!0X8Kiq"*">Cp.h4(CFSBol<IfSOc=e10[j9Vd+hTU:"GK0oGkiC%ar;gBA+1.%+;BA#iA[n8_X`XPG`8_EP%(UFA$EtpdkbT:]bAq#R[^JB*G)"KK@4<*c4Ki'%Pb)f/[dM\XA\L!!a\jd87#XNo7o5(M-_uanP#9K9XU.5-,HH3HE0/KqlNo56%%SIiso3eHZ`1J04.W,mtGa[F6=G4q4[q:EPaBR`YtXb:!&DMZA+lUis8/7b$5.O8>_Qn;_WCSb_p*&4nf4G*-,<4YJZRI`ZOlbp&.%[l-#aI0;cXN_ioTVZe>a),rOS1Ldr!;09FAglZQQ7^-s-!>,sAZZFQ0&4;;ojO@4A4[?<D,Nu\=RB!ll\03U>L5EbQM@P\-O[iDP%l+$qWKhmg6*K&dB=Lp_\i5<mc[,:SK:6B[Ea2B\*#MFOlH@WqSEb8j+]!uAaGklC+T]QHbF6qCnS?=r'2ZVAj$1@t;0`uH$p-/Ip%O&W"58oWTr@0mrY<LR]Z(CUt0A8p@7@pp?=pn7=]`keQlbQb-V"QD6l-OIA2i0b7rUa#$jnM$MBkK7n9+^#nI@%7_XqnutiG4PVb%>/H)`==M:X"Q`,Ei.()F?0K]MH^O5DH]IE#Z3f>'TC@8/pVeMmaBI:=o6t!)WC5ggg+);B)M+=.RZ:52Q6^BFd.P"5aHdNV+pu03%.XCc:5n-+u'pZAHY=hD#S\Lm.mT`!a_4JC8YP9mYG2+Hhhq*8r)G"E`Z=b;F6_]jKBk<t]kDG"YEioE975Re2@MX?XNhjP-^<IIM%9HDd9.@AHE*_Vrrgu?9*ARr1oV!c=*40osB@Q=e,.u;.ITmq)Og!`XMp@Y8Yi=97,mjf\%&`"XrA9u$D0)IFE86k:H%X4m(MuNm:%s2S/XX#M[rH)iAA4,]4S.RZ"lC,M]LUr@9\6+W^nUZRY/c)h5i[hl<,eH2NoE[f\9]-`[O1o4_5DXDsllr(,(cfrf2WcBQAL?E["%rrh;M)iCVJiZ9fhLJe<m;`k?E"C[>#F,!qBq(^FL@Di?'1Y&:-Un(.(Kna[J]9h4?cIm.VFP9DNn`5e-YY4%C(@t6_VuR&XRg`?:%P+1j_"#An]^->GfRe*%D$k%mpi:?\DIJhp3B2_i')'tr8*@.Bng<kI5>J?j?:InthZI?'fI'5mBA64F@^c5=XOE3a"n0!k\^r^"p%a6Z8dREL]F:?YU3'r(RT/9_LAKDhr?2gS>N+ntFdOF[29E<FF/!ZG4)03;Ic2jQf9)"N?S)_ZkiR-MIOCcNWodp@fq+:6cFjBRrG%)%=+ERgcm"qEq:'n8Sq#UdJc'+Q1mJX>/;aEF.l.EeilDp1Vna5S*_4CQOX%i*q1Pn)Il<lqj)C/u5"1#ZJ&(dg][8OWB;8h!Y?k%21b:C##*hcW`:424qRs4cY4C<\hV<b2fW>BA]V3*hD8hm5e<3oq/u6OAj73dZS`DgL_KU=V`ANMJ@0XG3R*T[RD"Oa*bHV-k=67X%%.;_Y#TPeT$,Xrp(\4*25<qEAZh[ZYi??a]_,XtLdA]E[8.5uf^Q_r.\Kd.rd;@B866boESB>3QIN:caiNGPq8?DZ,$\go&X0]6B%r,^_DA+kbqXh7,_5pV&`mnZma=;d<`"[h4c35o0u'R,O6KN*d_MGPZP+JOEu(#C+V4O8nTDKr;H+:'6CO$`HN?&cDM%7%X6lPFV;%lqogIpKIg2"sP"#?=A3B50Q/EeR?r]>2iK1TWcHk7js?6keO4.X!+O5P@2_FQaSYL0I5s;=2/Ur4u$S4C@i_d]6X$9VXeZQ%fj\b%7mCHS)ri$UOM?Q/,ZVOD&e8p1In,cYcR%Xoo:obP/qsrM+h,mEV-_5&.T"BO=;G:tpbdMIh-E\'k0:!@qJKp5R$us@=Hu(og8e#s%&RqcSLcd4<7j8/=#aU-gNkl?;=cF#=7C\"Qk&8XKKM,bVj:%@da?k,>@;dLa+!lAV79C9j'O_6Qs"*"PFt2;V.tl="]gMom\M*ML%`G\f><WXagB!)_:`M1c'4D0@L!/*N$3#eRG2_p@B^6,b+Tlf`SKcue96q1K=C5RO7!h$e.#o5HI;4.G%!6EeZ2QAi/<^)1,#?KuW%)!^U]ds5=j<ogtjK>04gLlET@6Yoi8q#V,4!L,IN8'#:*4*$&"Qjl`$26.haBL"!@-rHK;%Md"@af3K%fsu9U.G;iH+Ia^`(4qKC%G)aYd\5(o9hTGH%gKqI$#'_nqUVqM^LkJ*j/PImlbIj$t"/W]A28_;?P6ndRGd(fC>n];aqg9gtRRBCqQbR,T1kJ/6%6S,gC^(93%(`me5Qjb&_E:I9'H\$-@#k$`h[@<6>f]2+A/ZEIfO>Sje4NTo[p+'T00msY>+hbRPJ[Z1%WnbI`ThZ+sZe-eFTAr2Y!^#5.mir^<%">HRrkU1sY%`J9!p=#q:4gB(eIHE%?(]Da3NR-ZhGl2>$#HQjEGSH$W7m%.Ck'K*aeqcU?krI#4m[Rb^C_%*^]hl_ed/TKup:/KL%3-6ZEHW_ol?MM9l>]/3+8_61g!?^P]rV(i+'Mo6Q?#q+bN+\P-P4.t%E"g?[d!<&$Cg)^`d'`0G]GlWs"0ZpagN=>(cA5EKkGC\)%Je"WG<o!?'2FgKm[i`,/2rOL;>),!a80k0n.o(SiOT`YbhAkNaJhh5>UQ/:>0Bg@;'"](Wn"_6_G9aT[7a=M\Md:U_E!D.#6E&+S%!sQiahG@81QXE0`*SO@5j!5C@KgXOKRh>$t0Q)&&+C[o;=O<JL^'F1k,8?A!YBAEPYQ^]RMc`AlZ2u*&`T)3bi[1HDgDl"BFhq"8%Lq,rR=tqr[._iY/`S:a`[[R;DU^?D!ZUaW\h[MPa?]X:hGfYR/+W7ANf"a+PhK!9FjN,H2b.]3r9B],a7e;el'bF.[94nsK'6LiH%j$`GK"XokV:gVj*=iTur8It2KeZ6b4!6e%Mk6lW*^)>L#eihH*q1cB5MOY./<)8JL\Wonl\'fjWY@1%a'ak-W2.hbY2Dpj),0s@H%UWB)NGV9=3!g'mD8>4cco(3cjg(5CgC2Y8LnVO2Ifod6JH!]b)oGkEtZjOR1E?JCu$meY!_h^#b5ToUf>or+_3T.WB/V9+#QZcmU%b@%[]:68YH[3Af[G6[%WiMuk;F^I#7.I0A'R.\"B<d:ZDX5X9K=YpYQmWa88PkV7YoBZn5ME(X,I#oud$e$S$A#>@/cuf%d+;_h]%\V6.&r&]\8!mdsP5d%>q!D*i(\R(;HZF/u@8.6&pITGBd>d8'9K-!.jiZ";1mT;.:)H\I*X$!bgM4ZEC`H+@.;r]!;oiqTZ9[VJ;%q$*TH'MM0Tk9qkD@^E^7d@Q#7P^h8P\V^hVZY\Cc[<)HE1:T]>-PF4r67f$]b"B7#qlL!,D<pK4%Rmfe3c`J5ZdqOq]:!KGfAY7R%A8JY%=k)5n$;9d1<jXo2VOB%&c46D5asuq$CK=h4M:,G%?@<@Tol.RtRNIKG[<P#Idn^F$,>P.2NX2o[KG5B?b'kgX[DC0uj=nd8%2n6#L:`]NL3Z$.u56]==BdE82rEdLZTkM"HHKST>_=RF1JdSXo.YHYe]NpVRgMLWifsK'\!1k0G'=p12%S#C`ART%"SGg;1O9'\;%@C\M'%$ZAFqLl"^g+?bEZJ?c#:Ys%-oc(p3Lu>$n)9#[.*'05Zi4;"ZDiAi<Qhti6Gc-]&r@R*TJb0jcY89HaM%TJHau!R(09DGK%]mubS/U1HDB=Fa./dAgL04&[NC`_"=&5k$+)d1;jA7m.Zkl65R-e)A5edE,-f1+^bg6GBVh#U3tl0"]PJPb_Q[-UV>Wkh(&42+LG%Nm]SW4Q5#%=6W`Y0$4Y8.Ks:890Yqo.1iOr3jf>]Q`#"X5e8]UZjSRUs![/di5I-R&9]l,1ZSlc^TRY=6eIG=?C?KN5=a*W&/,@U%`!jb06d.e("LL\c$VN\DoC1r!%b'J0g&,<%&*+-g>q^mj+%=>6]J[V9_,*tPi2lPpQf$'3gdCOcS"XTto3'QODLqr`C-`+cpR@>-%iQBuQ^p6SROA,4C\DqX$aC%Cj<")>+6c_No:rVTG=p?@+Tk$^B2jFffr2#^15Z3@O1*i7q+[^45'J_XF$S?uUO>A/3$TZ+i]/JaN%2j^I&QP9g*`$NCN'Bg<iJR+kpmm9ZoUjHV>:FI3g*j<pG>d869HkVSAeuiSoCkW/%$s+j6TOkW"2$>MK>QdoW$jN@FL3+isWDEnX%SMEWq4&R7"Tpc#7:^OfZcku4$AdHWl`=/I/OdI;SgW`k;f`4C_6U=)\Gpm?nl5clB!^P=C'+csQFGF<0;sT7]$=ut1=TJ"149U^1%nl)@nU!03p!EeJ*g)PtfSrbmafqf+N]5_"I-M&<Zb)gsFUETVJ+6r/FqbUY6__`9@mP*JAhhe.L@061$<".6?JDgut%9*a[#]1\q%\4p!++[[Bg6:A1/Ka`1hBp.BeEjGb@-lF5K6mVpijSr@G9'fBcCI$3bLT\WV0:7'I>WnMZ=Gr\XRVIFu88=f/+I890Or=uignpr?%c:`>J/g/f.EF:kLpP#8TKuB)M.$B<H">p`J&.?;*I`>o*8=3=40UTBqWkPFm_+/M3AF<ds-S$r,0>J>Y#Q#7d(MXnjAgN`\a0l.J%4qPnr9m?d%K9/T;p8Wfh&qI`SCk7.&&og^p%2Qr1J?24A6kBaAhG*QK68m]t)J+[c+fM6L9-oCf:40>7dEJPN>q1^,>9:^'C)gn4%LukDPmKG&&+E@W@`?#iam`5t!;NHb1hEs5A#kJjSlgBcq.`!Mpnej+shSn"KR`#S<Fe;pDgOP9KEfIA>2ip3&A8`e2c3QF4`*C0+%mi@nHP5Bd*@N(\6gu4M`;'@Kk.f:!:.M=g#kIf&@J]o;Lbn]\d?m)ff[POI-eifCu@m_O]A^<XImX3fOIUM4C%/UUmiVHfJFpL03%dVG)d^k(:RQbB9^k.M28G@L97m[\K=QuNH,-lX8bAUhVPB<"j0,U.^3p.o`C_4+8aLUS/s48H'.c5SPg-L0Ka$WfgL'"Sn0O&%?8%mmqBF"d)`8P%]`>[V=c75r\dFQ5uGH^*aiG-GE!sV@pJ;@7)5oEd<YPln+'[YQsaEFijK@6Xe],GV0]WTd7DPI'Kl?GGWk7^@ZhF%QA\RM)na1B*m0TSs18I=(]bm((!RH`$UG$ock'`H]X's-R10KZgr<00'N'U8$b+cX."dU&I4@s/4G3giVn1+5BdS_PKLeJ\^4]$%%T3tiBe'MaGfI;4QOgn\YGg^49MB%QbPWg=B?$AJj5(c,G*(FTrPZ'n9&-WtikOQ3Om%eBK5\B*RP-^SPZAc$<JnkCeQ8Kp+auLVF%Mnb/X($!YX-:AhkP\DN[*J.2=&X-D^3XA0G`huJ[iBXuk0uZmf#D&D!gT-FAK9.i1P]`e(N*XSf+c:4n+RL;9\PFfp?4<+UFUUA&%[9Am-6]dbg8o]Vj;.gJf:FFD%2'$$JE;UjG#k&>i%RPN>nle/<pRnt4D7-a,\&7n3$A7[1aR/,kZ5^?/p*8l3OIj8R/>M\.iW9Wo%a]>oV@<'aG8G\@ElT5^bhET>ePI_tLVj"aq:e1h_VXV[EkVd!i26o0P"VQlo90=D;%Zs8O.gM3W;tM)+d<7pN49ZdG_O=FF[nAW:%OnhFJ*#akt^'Q9M)$br<,D+b`GlTl]Q.Nh5k'[*VGsm`UFWRgK+$,IpBKY^Wmtg*):jBqLIOI<p2*^^RZ#i26*WVAVZl5%U@hPTa%Gm(/TTgt3J:jNsG$`/UYnYU)%H3Ep,;NL-qbTge3-p<0!L=/GN>+.%GQ-^bSCa_Gu",GH;;WJI:"G`R8%g'o/CLJ@WD,Ba7]KR#O%62s=B+\;"gPhtHCdt&Y*p#cg5m!NCO=7`McoEPXn_s>ilB=>]h+AmDDbi_)]&B7-\0WXVCZB#^q*g@2I<($$_;!.27&$tgD*jrT+%lja0H&ddJ7fG>b9\q;b@WsA$N5mWobh\[U/p)P[WXM*!8%^eJc=b*u-7YK2p`Bkkf6H\#_7ZHm+I5+&AlW#_r@mEqgHJLuH=Ygpg%905hN-jjk*<cWde8>=VMm4m%T-H@W31?t7Ua5.X9MB$e9L?h)@_rbhSrsE9!\PA!CNKY"I`%VK`%j2=Y0"]drQki+df^[<CCdQD\%_kc?U5WEXJcP,=c,X$\S:^Te?;q*o?2pTL<1poIHXua)Tp_G32dqeHc-inN2E$=rV'GZr^[&Uqf'EPCgD*$*E^.6cY-1i<!YNcAG%,kS/X\1^7Ygod>1m.N_9GHoa#q+sC<]PHtsBh93`KDhX5):6'9\o=jC0'"W.RFf-[f`m*q;/0t//a,I![fQ;dS"nKibo'PKrCr*p%+bUXQRutX-]PT12VG7HiL'Do8+LQ`8n,P0DH>bEjHB`b#oh1DM.1c+%8G3bj;1+lEBBol'F)\7@"A"'mbA;g*V!('KPU'0jN(\"G%A3Pkpam:&$]#\JR[]ZmgdD%\`\2b9^L[knn;YFq+=]36L+gA0b<DpD&:aMr^"]^_4APaZZWErhEP1'#Mi#+kCPhmZB8a1=`P9fL,%k,pp8/CWqF<rO6rRcXrC;L6t,,c,Dh6'B8/Th3B\,;_t0;M6C=6Ac="Ab]*g@;^H6nI=C@49JQ#Dp7%f0jq>/968$:[\?=8=Pm"#%<bnXu!n[]68K"[8,()8*+=SOO:aK[D%FQL4TL"s0_(l:[1-,VRd_1Dg.77Ic-d2a3dr\9BhtR;<aHsXk"E.ms$EBm174ff&eok0c%3)cc=19*`;2"saB:nstP1.DCHP/hmA9$4Zh>%0n!5sbuk5a7K6RPgfLWAn>qJZ>N)YH0%uP^9+KI2#7NKL.(YMBIfBP3f8aWKQ[G%RO-,q68PR'mbuloXM3&H6'QKSab'gS^ID'Hh4Z?O0^6mS"G7LPTh2g_7HXN19>_kV8SOPK8U!eEcjg_Q0^1L3(`Hh_`\-?pH`";5%+"<[d9#GQ/rcD/gI2,K)SSBkB5Z/.?=jl\h0XS\.KSbTr3EU=,;u.da2M>Ga,i,0mJhZFIobV.1Z*Q)p8]&ga6NS%?V#,lnkmmBQ%PHc;&JgT_?XVXAsGGr1t8eQjiAgkG;9"LqY$_!kQ"CGB#rpWM(!X[d'<L/kQ08*t:m<.ts'$L3F.SNIB="6R8lP9=KJ1H^a7>T0b%q?rG='RZT7!^dPh'dfd8$Om_N(;c=oMjmX8Zfj.!7c#S#\lD5ObH-)W`$5(k.GCS3DY>S;1GSiT64ao3/V2";0g-A,8O@Ts8bnN)%Q;m*O4/SnM9VGS8[V9#]>+*"E]L0,log]G:0l-SqcAnjkUg:PMEk1ELI]3ejam@V'9U_gsi0+L'9`U#]"fA:n%8^/#"s4YJ\Ha>M%$JT,G$O`&`MCe--136.3Uh@s]6^Hfa(;ET%UY-YBjHRM-ePKX8X5k0fOqc!27sEY7n[egS&*q*/_."^V&%b,^jG$`EbWhde,,RGT%G"GV\@X5G^?@%L&RYZ5>2JWo5\nS>o=\U%Ys"oVaa8qp;`2T.;((!!')V6ML5*BEU/^l7b+q[AF*1&85qNiE;;q[([Sk,5\FjFBi%6dsOIl\YEq[V-8M!Tf/@30"4Tp+Y>"QBLqJ>JokBPP&]])$>f%k_\OcF@(i?47dfMK8'.(V"af*$pVDf!2'^Gk%g53aR*Lr+9/G5%m!o4J)-krr66IFCo?EG8>0^`gGc5l"9k9K],a+n%YdoXaX42H5W=n?g_RZa[WTM4P07f1G<:g$%7N3hF3hC#<d.%B6C-.k@c5.$+%+8e!8`dlaG9LlR21!P<_*Eq3q$KVa@'l[!\j7^k]%>]*/V'm_f*pf1:#T^]=,h*-ap#:Rl$TE(h7ep;!F6@sLFH^pC.d+4H7EUh"%N>1FZ=uec;LdNG*l6;7apB0&e=-qD^T.am0SR#."s8E!Y2@lg,dT/qE;3O\eTRk.,=j>$H'$-#*<Ds<:j*I.-O5*_o0ggNWL/?Gg%#]B!1Rj=iqL-Xf;*10\aK_A+$&t?rsJZ,<-IOrXTWc"DmJh3:%;K@u0Z?7ILg'Jm5SU-atr'3cLg'0Am:[17>AubbXZH:<>\XAc5%2F3j"EW[_s01!G&#D).emGbrYFV@.s<&]>NV(.Xt@%<q%$!J7a)aJB&G.MgiTlJOskXNPuL%+4RR[[^I[BiIbWtaCj9#'/g1iBg6%,+Z7YNC[>iU6,U>%k;Mc</dp"eeKF/]X_<*P1#g]AL!]8G25\%$3HsoeD8oZ*0KSGPp6oe\T/tG&9eIM;L]?r8a:6V3%aYpYUq%n%r:pOPh?N(#60pjc,NqP8reRPh\M&hYJlZp^9e]A+h\\;;igX>Y+MJ/.$OWCqJO+o%1`8,0_6?4X@l,/^3-PWnE`G\E4g_6MV#9@M%Z%qtqWV0/HF2^X!+n!j#U]T^;/Vfd"C,qHn:[No&cqV$4XY"Z7)tFH[:=e6or$LW0#]PC'K`K/l?-$r9rKRF3ki#M!9_oUsS"Q,l%^Bl5*!Z[u9+hn=Y)tKKqT^jG+eVC)M00bc(R,5iB'\5gLlt)M'Iu5AE]h,?4Zo9FMQMeaFbS&g/EqotaZTjCL[nq@611VhP;KFDN%9e(sq]Lff@j>WqHQM)Ze^]U=o]kD=hloVGIBl2Rn<:NS-o87`<]1K--PW(&8eWD\k_ps;pWOp]lRQTX/#a;Q`'\#`u6V,p4J&Ho>%\%r_l1/]L]9a:6;Xj.:,c.u0!cWHlo2g6=EhW:r(h.4<!ar<Z9!A!8+L-\1PPEF:E87bfXA->re)a[H=qD1br]p+M$no/[;`WIV6%go929oe:S=h[bH5Pjh`1;8TpZ/e:cViF6%k$%6&Xq/T_&)+9;ZJoV,j-TjmbabtN\Pdi,s4Geu:aHO@%*V-!YarsRGU)`m6hT(Aa%>k4*!"RR'"cDE5:O\k<e)[RfBb)oNsU)XIc1@gRsbh,oX,m%2/`'ES5XJt;QI8LK5;Ae6I@srC!PetM^9'M68\D?X8\2EW,r!7Qq%UqFa4%Va]>'HH4J/&>'m[h9Z,Ph_H5_ElV'\K[Zq)ejb_:`lU38eRp7"(l,$6_9Nppr13UWCkU]/?<N"QNV;"f3?p>jk'^-n"4Vi%'So;Vb[6k7&pj0U\#(h-aJhpLTU&VKdQhA<l@:0H#ML#+;)6n-lL$!*QqO(V?<BOjKjc94fP4itKK<!0&4`"oSK++XrSZ==hJK8A%.FjEaTH`Q_3i]f^"a,=?K$"W&eeE?JOANJ>!EF:j=OWTa3,&k=-T3QtfbHS!3h`lOW4Z2*$!$\g^(sYEMZ5L>e_:s75aB$j1fW/+%91+t3JM^=d?C6JiL(Z'q%#=/2_\J=bA3D"=!id*VW1o0cN[h'@$E.FLUkJ$9&uldn-(t[Tp'Ko.<!cQLb*5_jF%l[838bKIV5Ok:%We]l=eAaXhcD"p79-G:..k-1)J1;bRPYae"QP(bUi)2fTJQZZbhFMJ*V_T).ngP*LMW9\X.Ki]d*//\gj.T:FAaC'CWf1CR6C!,F%,md3-V_ZV4qC)q*69pgP5mXD?*!l4:`rD^(ngGR/;]3#rHKpL*R<g>MD5<Z%H7B#-cqe4HCai5nPX]6H.JgW;\J;B&YIq0(dbL[j%b+MV3V`[?Mm8Sgm+J?$M%b+Dpfi^r>ad"]=M1o1BqPbhF>:H9Bdr2aBlA9Z[,/-dL"ngB/3\A;';Q#4V>7.\^TmBV-Km)\VXPF==%E0?YWlDZ-G=9tOq!XjQBQXQR&VX@'^Pp^ZT=bE]c67Yace]9LN!s5JM-!."6:Iq69F(q^TMm61s,ZKh_Y7P8=nJ)rdKN;.s,6UtA%.]foV8n#]o?"Sf'r@uY5;eRK)b&\9ueH;LF<auE;7')m%.VX$=XKFfn6R0ju@koP@W"Kq<@02m_RCgrS/^]hb>@sK?X3BEh7Fhb5%U7QB]F-YTS[?mU<"Ck_Z-/k)M;e`lk_XqRKHMoS#<OBHDOK[8d<)ZSMXj@-#+n'1\iRF&0X@q4o&qJS52SQ)fVVKCS;i?@LQf9OZ%<>(L-l>]B2)IF\NGK>UV2dJ;*%1``M+%7mF!*W\;k>Y(T4&nOI%rKQjp=Fh0.SXH%LE6f5-\cA`66h3>'D#toQ\CU%0J>@O3n2Eq%k/GmuOTK^c^*Xmn5noF)CmQ-!-?"9b+R7fFG4X:;HD^ajOu?$]&G$848BS<[PRBQ('hf?Ud\2rP3g%Yr(Ck;p9k&>W(CoiFO^lEg%="0BX(b0C$]FMTD`6S9ZBSOgi%6uN"KM:s36ln9liq;N<.4iU[O#bu0(;\d.]YP&7!]Wf0cjc[jNo?[022"qhh>*_qd$@%-T2@Xr%+6UeZ*@p5k^!OS^4*FD@e*]KMR(UE[1[X5VFgo0K7Q.GaYMrlU`3<lUj#1>tZ`=?FO[A479Eu4L*?iNQmP3=C+`e"p`;rJXlSt>$%^qKXu"dCVEd(l8I&<de1T_JXK.;l#F:2a2'QC]b&TJl@p8Ql5[_B1G&6Bo9<'If5KmKTe.5#!@+B[8/7>pc=29hgRe8kk7^ifH@N%<5e!=%UF<UQc2(&!TK#[6-Ou(EYZTGMK$\VK(;"1Wn3B)`N1XiVsn0=E[A)nlZM%&rjr2$(=%%=8*8jIaKe8H_V72'PPr&cK.5/!%#W`[Q._R?AmUk`m>RkiTDSVHSe7'9\K7Z(UD#@R$q>+!fZ/gn2+tE]".P'^T_?s:5att@m8P&]?<,QN@00'ZSRG*Y69NS/68Mu8K%,UqQ2*!q_4*YaaH?05\GO:Wl43iGRPS]H!oe;udAp,J1S6E2K<CMB(U.7jC2<MmA\++]i*VX>[3I[aG,5n^MB-qFV4SH[97l)j8;%pfeDQQOtdien"sl13P+fP%e/jYThhTc7GK$$e2h,a@Dh$K/AW]nrX1BON9N6+]3B]%T.jOFbmu%Tb!!K97b0HRJV%Ib1m[T^Yk)<%61UfcA11s18"Prs,]!CT*$gC4a7UQiCf5raJh&GWa^\eABPAn!\WCf'6)*(<$DJ<&;NMh80;1IaC-,]b@TJTZ.K9p1?4-aR@uo]s%T+loKG%tIt27aKS,_,fh)Iu;1gMdTn!)(C,,5[I_4=U6Mp6Nj^Us>SHH6e">Us_V)cEnWaSj+[j8Fl[u@>EQ@m$j^1",GAN:T?I=%4F^8\OTL[n[2`q&WTB4*f!HD0$E%i1Xj2V>BBJVnb;BNOkXV5oBRF@1d#Xtl=;$cr"<UUqVQ-HXHZa(abBJ#]6BdMDU0C2[;Eu`=%M<e_!+A(\\TJ1TJ^`M`DLYCK$lAu_0H5o-cT0PK$Jl6;Q;EZMs81HnO+A"0KODroA&/%a9k!:TE71[#9?_AHc"e!_t`#'!OL^hI&%Nl7"fj[b?Fd#Q&#$LL@mTWT<?_,Koe(_ot5neC1VN-s!4`5i2N8;q<1Nl7k#mE"+j,;GL\G,/k/?8$!fp##dZ?Yfra)jGfK]uQ%h%=d/=:ZK9"R%s*m=ZDe/OJOq<;P,V@TPO=X&@<nj$,B0(!nI$tsqs%W[\kPiHER43k`8@ns=-;s[HPM1iP&#g[&+BYZX@ttpdSpEb%[X8scq>\P0OH\QH'LnO5n'M=r7:)_u`5Hs?KsZ/WS<I9UH/s'F/L2^"j2MK`gPBIBT!N$8&*5o6I?U2Ak@u5r`GDZ!%X,i3b_6k#%L92W[$,GXMTXIdWUaaP&Ni\VsjBb+WV`j4C]6Mo]0?nH2bfE]H'6B(2p107-KKWnLEpf;sQp#KPiR3o1o95U2JSELMd[rl_O7U`"%_TNPRI.Eg'VeTgO7Uc"]1QE^P3guC[AXo,aKF0,_MO7nDRei)EhoT"iWdY"gJPUs<,jE-u+p:$?VB+1]6muk9DbMTXYd9X0a8'8s%?Mm<]]?FlD3QS%"QrtYH)m6/C5')m&`DkhP5V&`Pd!Wd'pPPeD,D85maqU#S[$9sFC7hqf$N_G;b1FU*qe%C#@4g5GFtl#=Eq'd?%>RkJV'U<uEo1#SOIr5tHTa/n(PpZr[GG%1L]mQF9ek3LuKL]*22HAqRE=Q^;0kIL?e);6*6[?&If6ZoQe_e"0Fh,dp)Usc#:F+]j%Zo%T%\^&""id./Hq=eKOB&>%Pd`:?iE9]eJ1Tc`h[I<b%OLGU\oTf7d?MI@qR4c!%rY.:r(Oq<uiO_eL<Y+ASn>Q5q28H#Pl9Pr)%L6+utS;UI7O3@611)t2gZbZ0R!R'c*$W_:+D!IlTLP=59WCrjU)GPu1>tTlt>%`jrT'(h?D$jqLhq^qlE[cG6B@ifrc(C.Td+ZWH%ZDAODT0l!;bd8!,%q>8^*.injVPk%\-&2RKdlVW$Laboj#=6lfKhVp1Gp*aKIpC9Ppg3CfPl-m2he,O,eHs(tJK3R:.eQQ*N]etA%[QbXY'ta<QoKT4&:WEB&p-&`jGnHW+c$Y]=%l4$-<6Ei;.LVYJ+,!,7&4Ri*PJX7LjfA'Z(f)W.<_^kF2RD!1q&u1k<B[BTk6deT%`QN+f2V$b]jj_#?N+^V!;RV46?Z*c73)M/LG!2npZ*`ggF.9!nDrdRolA[oZn4EjG6@G-<b4GUeMNt+8%6\-kk*I\f*nFsLr/e/*%6QCjA6c9:XHAF[qn'XSU\U'St`Yj*u(cXnO;*$AUX[8i5b()Sc0B7XD%PLJ:a5LT(L<)gc.uW%F?*u>bX$KBRA^-Aa\;#Z:qi[\B%eP4ZE+>S4>>STaE5[3nJDl3qVeI,*F&6c#lFO4%TM^d7P=S5ibWiBdYI);@1LE45]6"kk!J/qged7B@!7GJ6eWdVFU?tuIq^\r/Y%e_U5/V_T!O\bb!%BRR?Ss+sDi\l<UW<sdTQSR-Lhs5?kUq0Nl0>FY]SCR'Re1n]Vb0^J+7[Z6k-gT8M6WL!+H[@/fqfpV@trD].e%BBBE5:hD.)/'U0jW2Bo,!DF6R?4:F&l[;,*(XU"1c;u07Pb>78KMXGs[.Z75ZkPfNT(t.M9D8`8TB7&V0EK!qltnj9s+L*bXnamK%L"0RmUa57m8WfG'8\JQdq'r0L&gVa`a*1lbcW1)2F]MT'%/t#]g55%$kM(M&-_X%Ek.:mn:"UeFRJe-`0FeLRS%X\(B3Bg-52pr-%@mM+q'WdaGVQXZD;.6BV@o8-Z.STgR<igt"Jb^L;.88A=8%LpUo<:OKrKY6Xoq`X0$_9k9&V+eTo)<4D79J$M8'Mn!M*QG`)eIi7%8fN:=p$daeq)et:;\_0eNAlOG]'W]'<tL%mWn8(;:DVLJN8aZg7h@nI'5?<1g+Pe6XU:K4o)!Vc+$A93RWCh#!A!U6Q;N3O+b!_e%CbnJh>!@g9$]39P^1g$,Kq.qa%.4=tPQ:QD=o$fXX^k;2P>ZX-aFg2s`IZk#(Nj/mmPFJc7-Xg=E>@X_U6<jDihlUaS_;<Bhfmj5%O?LcNCOb5=Q9[2I`,EQQ+LXq<(]]=Z7;drMG'Q9l]b`r`[Z/<7g_)V'c$T\AZS:l]gfB_][+`:$So1at)[-a?=aF?Ia\l:'4t(\!%S1S<rp74f)>T6`)B[\ZSC1FED:p&(,'W@!OT-C[20$YG\(IZt++.K-mZRUtEREc%%'Pk6'ijrZ`q3]3_9]q%?R.d't.n6!Al!4A5%4Mg(9<*WkcS?+57CQj.bBO<j1!f25D3/99`R-^8U4S0LHY>Z%eFAj_a].`Q1NHB=XUeRIP6/$b'!?.);`nBg^\(k[`c"qWXG$d#-%SfYR`TC?C2)-*#RmdL5CP"@e(U6_)m9e<g%&s:tJ[QI)IXj'Y!:h.\T,1\;0@t%>el!86*mE_04H#qBJCq?OZ]teH=,8RDMh?SVK%bo=7RKU[HE$57=V9dr]Eq'S2.8)3Ngp^T57j-\//(B$An\)j$kj*!r*f;iHR*`5eObr]#2$!gSb(uaVJ]g@D,*((o:\G;5M!Q**V%E2OY@B/]:.@;KoW@9K;?h1p;F#'Z[^-nsl&Q/[CBmR@bb<HjCtqhhW9^9=,BIK6uM4gXt]@.tjX-F#[SY]Z4pU4P%-q51*/hlt-#%*=o9do:)rrdt31T0f+fVi"SVnkrg<eg,$d>YM'uR=8VI[/,j;nCQI01DK1@9"2;3TQ;b2>INN2\j*g[WZ5N,CB:$lqLZUOu(O%l%%hs>r=%o?gJ]\@7A57b6C%.ebT%tA3[I<Q3uAJ<l1017_G)%XpQ\IU>Yp:S$%)dXdn_!hu8=UqVFms'&7*CeYm&$Lm^m,:+hBk>GI%G9:-Gg$e@l%-0j+VjC:Uc3'dqe)!kRj5ZGj07$k'Oei4ee[Fh6H=M4nVO1/!/]`$'ma=\ZmB_/%-^2b%\Q7f3JD'YN9C3b`V.M#!%C<K-39+=NbjD*N=[:b1>&GaQ(\TVP#^u<kGSa/P<J_Z*@)<=^+YC4FZ=m4cm'6s"OA(j"_G;$J^bj\YE#I:YNpSobG:pnLId>B,D%J<`2HmbX$s+D2I#^4?&@mQInI7X;E9N^dR#JOVJ#aK;JM7W]_c7'iH?#9)!k^3ec?(q/6#>Ot#-q@,F[/_h`ES2G;\p"OPYr8?uN%+1OJTPr7YFm<t\'Qk+6/PJ>#uFAH>[Dg^VH8<!r4Z.s(@*oq[0XVLJ*[aTQ.]:?id(A3KM7I%a[ja(qY3'8gk*dF"08]eI9^lKD"%GLFg;>\=U#.a'pM8'T0]K4i[.0l,g+EF@A9ZYT@+0OC-Q<Bg5hmN/FP1$gnWl<PX0FZB^SZOt+9':.HjkjOg;1p(WoNer:oK'.7A%)@XpQ.0!sD>"f*k>jqGSQD`BOQr>Co2^]X"Hf1HZ=OuKSI+jaW\X:u2G??Z.Q?+%h;usOs4Zuur[QB97LiSG7(d`7,7sbr\fUQ6o%p&mS*bD;Za"HR,6CU9,V(0;m&W%A?c^54u[JuQO$"Yk![(=CBJ?@+4IS2VhM(I^9!DQJYac^p2/1M]J0]P&?g=I^N,l1qSP;r0Wg%JJd2)&J'QQbRlfMXgiE%s067ZeRiFMk4Gao<]g>&/7PZhe+8V9^7CjB=IY#n[]h@<R":n$G;,^c3?=%1m*-<70+*&B_m<=;hCP7q%-G9k<iJMqt*guVFp,9S3UB/]!Zghpg^\h;]g?ST)+V3b^NWkF8n:HK=GM_^h'_Bre03U8/hcjK._nnOh3"M&Z.4Djr*a2Ig_cN]T%.pA[$;cb^@g[64&`BJ[3b6pI*AO3^U9FDV)$f!PVFp5*Q9FX!DZE&5Na46:Cih8<m4Mt`5G?[P`_N#bn<IqC:o4kDk[e]ME/-+m7%.]\/b3Eo`?CG(-9.6N:G<lEY!d=AG[Mm";UeK\\LrIL(!ih89k*)P5@2FD-s%K!hb%;&OC1L-6VXr1]lH4r-"C'K=;pGntXcF/$m%#q\nK(;OBX>IBjGR)$BO?tVA5+5<3C8($+L0\\K(J@f\784,O"E[i;lp^KEo6"a6fih<f]!Z.GAR_$IsWHiLpb%sk]<6cfLCFZ9U%]VhCG&[V#3'q*c<T!U"%T$XXWbdXi!`DSO.ZPDYU\$1Z,b%C1LMgpTq)@@-d[W,C4=:&iQ"s&s`Ob7kHn)HB0-A+o&k"@]e4m<(R%HHTlg](%o$+X;(M`>fe_!XeJf$X!<Y@[V+@lLX@(4Nu&+A#R._H+u#,7'+Xan`Xn\BGq+bDmm`2bH9G18J,,?I`pQRKVT"TV[BY5%GZl!Znd<=HhaBT,jf^td[fBGcdM_d_ERP5e4^-e1:a%$mL6dPO>9\:":5.NZ9OGaX\AE%gXLR.j")j$L21o4^q<kU:1qltCh\$f0%:D%tQ9cB1'R6Os],&Pf?9)kZj>6='PH'a4M>9`=_=l6,JS(efqo,9on/Wo\\]FRK1%7h952^<0REbJ;-/HM!Vc<;^A#"3a\^mDRl%"?<n?fTlM-8-I[t7&CnJD:;*0cA-%cfmoT\`WB>gdc=h(S5!U-QpJ*Xq^k0Rqq_or>2j?^m6R6O#j4g;Ze5`pTf/Nn+l!8I.k:^@%On6k#S'M0KC\,ZB@VlEfDJ]fjq1KHu2P79!fXBHO6cCRG!)TcAkJi=cD8%U0>*]g0)/\tjGQup2K98(\"V>A%Eqeo`P??4rme)SA%EOO+-DlS@K`uIsbc(e?#"*"[fibVg*ZFS;6(u+3FZ9iBq3?c8J3E)^RRsSP!YAI#o=cCTe1POJiPOUM;]8lBL\VZ-G\JL+lg731t%$"S.=#d(YTMTAtZOj1Dh@E[8M]AmQ^#_X1%L.4:@Dat(f*8[W8^Z.Q'"Bum:9@I4fqr)BO_]MCe1u,#AO<Yqh3V".*iCH$&n0Y4R%aJ"uV1;*m83duVcJn2DJ#i[id\]OBrQm3Xb\K:_e3Q)pZ+\>/ra9YB"lA[iK34:J0gDe=rCkkMHXoRh1::IBWSW*Z//CWu0&sYOF%)Nj-sY/Xm=JKkSE]4K;.1C4&DiJ@8!jQD%s<CC[FAXPgqAK/^SBngdeQC4&Z8?N<\"NEM=D.QC/H-@tbVO@f6DeidH]iqqB`Dh"C%rT!F*GdR(%<lD0\&+k+:U"q7Y-I*%g(%l+YQ5+BKm7s2FNlj:AI.%f63tl8gji55,;#@LPEL;As/iP('1273DIR/g\aO2:8H?b@(%S9T9G8kY-qM$],SfXW/FIKm>)EIKCJ*AJ.S^D:"gkA.L"A>eBdp&+6$I_c,5&ndPm>7tSXnLXHm[t-,fZh)9ZM6hh\<g5e0/,QZ`%)0'hBYnqERL>%p74&#%`'Ra^Kl,eBUcBS"GEi#N![Lb`Hm27,;N^#i50i[3l`,d?S*lL(iBFEf>OL08qKkAHG<Q$kO#XJlB^'X=F%7sNr!^^>G![>be(3$LO0HK4MZ/QUpP&ZF'>SAQ`-#QPhc^^(28M"&@s(0962&]bMpE'tg9Cl-IfZ2a;$F`.4]$a5%2+("t$rZkRq%*)#l#@?\GjSDqoH__8A+mQLIlX#'LkH"l(4m]6K"qqZON-,NNnHZDTNSm^Ko.LTe\#^pBu\_Z9fU;Pami:<96.4\p%#`,G$mC+nC%DHIWbd.pG&5&@8FXc.7DKaVC6?fcg70mc;Y0'$7Q`U"0^a`,^oCqZ<=Pa!P#^[#X%4[LJ>WHJf?W57j513o7.ORlUnB9Ml^"<L.V%"YmVBOBLBF$9g<SUTB2i?]qHuG2FNgA%o33#5MHeeE$<Z<l2?KX0jXnn)t_8Cj_Pc\-L6S0HN[F=r@"(\JAf'NJOq#L6iYbc3#i,%-tXQ'&@6^S`gECSpI\I[a90Uj$fb\9lmurm!*@&(8'q%2Zm2RIb^.IO0RJIcZDg9;k!m@%+j;"T)DnpZegN#THaH6m@J5N.TXf?T%-7PuEHcj;]*luY*KS);DEYs^OF%)%C\$;\^+_88G<M,Pck@VRaBk,Y8L=eXIZ\;BFWlnn*A>UE:g!JY>1kPrfP:bd7)3:_+4(1E`%=]#cAGG[UKT_X^gd/8eo(JMRbJK"oNM4hH18F$*sWY.W_fbr\^l4TUM_C#[Y!ZF[B[<+3GK+s0t/WPDu(I=6Tq&<8I\@$[N+j1r-%Edhe%Rg:CInel7\cH;XZJgt20n(^5H<p$MA6N0&foUq&L%OM;ZK*=t;`WO@uo=,*q>9[KZbTuj$!JD1B'4`'o8j(6[_?iIH@;k.)%2A'">JdO,:9'BkUbdUGK(QP.,lt+tR#(rLpC3pt^MIQ[P"jb<^dEPopANO7Spq-S<TCPS!JOj06M"B<Lk<Ka7OX%1n4W\_2c3=aW%Btfc5J\?S/Q#Z:!Erl&oXTd0)2kf<GI.DCoA]f[B%q1g!N)b@pp;XtpQSCD\Cs^#pZ\[2KN!qc=hISe-Bh#JLB6UnODu`I2L&/d`%WjL8W>>,^nMC4!@S50dD96ZrB"o3_q)_VXW#sjV,AMt@c(_aDthIjQ\oMHXEQGP7H=/7DJm2kVDg@DMHQ!4R@>d9Ksfh$+,_/j8J%Zj6Ra@s]C'&p\r$(:B.+g[\MG?!no96prlh*o.c[0LJ535MT1^>2j1#Cl`gK+Ss/2hM70IJFoA6D.>*T!3"hJ0&?(qn1SOpjp6]G%O`ln3-N2B$_/A0*Y\1eEC7u'bD:U&NM8U3W%>HUnhGE:tl=pu@+=bk4OE9t%+M(YZ52?RZUW6QGG;,-FTe4uE<XUDmAuq7*'ddnY%Q548$jtml0@RsCE'nAb2*EX>j1rlm#;HcsAH;Y-[0$5GiI*`aOQ%Cgnj^SnS'b;CBo!+SJL;sfMQW7],@5I7^&TQVa:C868Mh%jm%aarXbHO0=AFoc7ga)7%"C+7oT"3I##+ft&(M$tui/Qo@jASJQC_.Qi?DJCL)E)O;h;JX)8QIT^S.URn1K%4a-Oe#[urIRriX3e7-%6I@(0USY4D-0!K9ol"V8G70<]aE'&:*=?,,[::@QDA4(b?cBPXfT`LlR&d]l;"q\FI;(6^;;aM]a9m=,7Tja"!0Y(iIqR\$ABpXU%:>R`h5'tM)/F>.sZCF^e-KY0)U>N5O7a^[+S#sbUBXd`?C?4-Wh@]Pn0t9R-m]Rl-D$"_]^1.J0!oK\3=6SC-l&'jM]9&0DI3@eq%RWjJ!@ni!#hCb$oe2t&0ML+`2I^Cs1UW0u7[%Hr#Qh4M744XCBh"tA$TU9pS+]-D;h[6+7YnB?"moZQ^W4+?q:s_:i6Y+PjcP<9b%7Sl5<]bp@$,o[2;a!)#t]jpSgK&3cd6t("<Tb9Z[4dP-*KB,[M,HXt2ei;IoH@+sDd!N7PMMc\+K0me/T*lDLnTKB1,Mq;4'_1&K%%"Tp1/!Ul1`=bYJXB<?<FZ3)a`Zs@g,NDQH);=l[2(a7t9:UB(A%&C>eu6CS_A/a#cERHCnD/F+1lc^=MMf>57n#jUSR]lWS4**/%T1:GR4HOJ4nVhis0(1o3jeJQimB#L[$069E*_*C,S.T."LZjO_O:_umSX@b'VnFnV[H+dEHhM$6Q[N4ZQ;1t'r)CYp<d#7W/O)aV%4d2g]N"El\)HL(nb]L>AC5p7>o"X?'chYl\Z!L)mP@Z!?,bqR3q-I&AP/YTgH%':\91r0ahTSPLqMj,t@H?&_:gC5]O9ue?,3jcr%QP'U7>iG_c6Mo)Ir8pU^^N`Kkg)"=]A+C>f+#P6oqdFb^M\cmkqnA.o@f)nHD(?OYLCe[/GRjf%I:%uXk^Eft/sW6+ICHjUGa4Q(%IONSenYOJCgD?^+0c$pa%$Zq40Lke(M.h@SC=ca]S>,gjgfDGcbsq3ZIpEK>LTlZj;lDmE`03ZhIT%Ia;-9b\9.EYu!qoH=Q#rMD%`N>]=T<B5Q'S^[`m3/:HYD%o]l%m,JJW6>mVF@?oGUpXe^q3_p0;k1a-rj0*QobrgAZd)&2HW+)rdK4&:N_gdG#?,U#2%bk0?Ab;%4+F^N?sDmaquq5(Sb&c6MMBaQb@Pp('KRif46LMu$6,Q\d<2fN(1F,[P](Vrh-2X0<^><U-^NN7kMdY/[Q5Hd2bV$R"\[BBBDb'5%pj+?IZ'PXAF%e:`"'7kV"Y8@fD-1VB)lI^DJ2PC!$eE-O[ncJdJjj[Leh'u<f>Qth>B_m?gK63IJT[T6nA'?$T1etFH1@F!=f09O%Kp<semSfYp=-#dnN,Zg0]:B2/*_HtC(>_JrIFlP$U<XBSa"fa`Xa;0o,3t%SF4)li*mMcP[^CF3h%679khIEGDP]A!Se8$cS81Tq%Re+k9:LWqO,*!`+L@DUt*)/cc)/K5Ghh$)2qCNK.At1Y%SB^;6mgEo=4aVjoWEVdJG94,5NNMB`^j>]VG>,/NX;PQM1LnZP6gGV*%#,TJ52k%sHGr)atX%-cub'=hOTmmHrY&5giA3JNnY3t<ZNN6\[`B!gc4YG$iH:DRQ.NCe8!5!?>ac%?&C)S;WS,2d`q81'%*c-mX%.oTD1,::^?\rX]bXI_RU:::cCi(.H_QlOZk=O2eb1N8Ef+dWQ!1%M2Zm7p3#6`@YOCP:6YGdC"E4X3;=)?/t7E^nV3%Q$W*71-M+%ilKJm[O$r3gI@,n!p^_dF0LrO2A^[`4o@i]4X3;=d!FQGYkfKQl4d:F#a7o0UBJ1DM6%5jX!4j@&L(kh1L#Z_;nnV[WGdm(qR%k1%[[oW[/p/dl^0t010aT:\gJ_@*N2PqT=3l\S99l7dDETi%nG4!6<=,jAKY.=LdO&<Z7G#T(9:_gC)(Pleg//L?WD(-NHVs&B?5G'g%>823791%r^KZh>l8`K#ce0M7N;YZ2nJ:a/J@^<L)/V7iY"79`*4I7M.5)/oVMQVj_Njhr/4X@"J*feOT-SqV.7N$(k9-#Z,?"`+j%_=h;0W."E7Q!c\MQlrYcD6p):>V"82H_F!oIJ9K(l3L:!Eico"p^S`bP3fm+R$r[CBcSKQn+[Vh&o;"?7GX?<C>#E"YW^4k`[H0?%fo%,)N!i0[1+$j9%T<X_Qnc5*m:O</,&Hu'I:c2\$7o*9ch`;tE(%/Slu=iP`#_5pPRIq5H=<!uY>k!4@=6Z7fZdf*)Nqa8(a,V/%!OVJ=`r[Nk6P3)#g\npRCLLj-V_]V1P&d)u-P512J=>;Q,.&=85qC!X-kfj"Ye[!22;Pk[G1%VTc)AK36HUd;Ro+kjKHuf>kTAD*%eV>huSE$3Z8rF5`+n?[r'4_PMf?C*ITaIspXQ^UH#1FKpARGhKFI,.\%RK<4:"KYhNI13lTs>anPU>L?oZg?=-];u5Olf#u[^8Ys%n+!J,:ABL*72`U'9\>$FDL!<:B26\-(V,T`;])4(W"&-W@]gl-9bKTcM9I35]h=au(au(d##c?iBE:^ZQ+g5OIj8[jXT-8s4s@Zm%fu?"9Q&UPr'&44[$<#Qn9e\P8gk<$MrmCl`MHnRHM3o\%7;6U*'lGn>J5Hpl:iSoK-=\)?TPN1n(lqf)^9!_(6SJ^9/940-;-4#o%XKrYNC=h:3LW*`q=:;):;&DhY9Od%W(P4a^"k%@Z]88PN_B#@>Tbl`788h<JdN@h1Ihrn*8Q9[1Kn1Np<gpOK_X+b+Dha"nh6=3R%/.)[L278;0JAO0^Mt.p,+]&5LKkoMKKD!+,l0>@jfoGK/Rb/.hV$MR,_I/[L'!"";1]0!(]RkSTQGkQq"C0A6"dmo"#Qg0!Vgofp%1G0kEih=`$d1T\R[t=XaD]JXVd?PRG=@mM3)3j&D4Es?n"2QeQ+/5F,!1@dDV-t\ATPL#$>s7Zf"Pef_GfYjI8.JroP&ADp5-8)"%Q8/aJJuG1M[)1f>eYiR&1]oNH0#<OOAcWn168O-9N;QBY#hE1!X9EKP)V:/R_4iQ&+B\G.%O>u8J7N[E>g7',k\Rb<\`Iifa$aA\%_m0WmZH76J%Z-!;J0I.:Y^CF*UOsb#N9(++&[%8&XI5=W!m/97`/GEZ&U8Ck6l.R]-<RGWMJs/;;$[:t'M3j`<?m6%3A?S_.C5,M%Y%#?+#4O]O+IVF!=.*N9K6bROf(H1uRL'B*91`tGB$3r%!Z;Z4=\0/UD']MJlX@-&L[E!u-;O:Q"<!E$=](7hTHmPnqA/"f>1F;3%O?N)rk_eHM?K5NF3%GE#!LskogPW9ZA!T-=#4ZD@dNH($"W>4iX=-UDIM+fVloVJYIPoFW6h\d`%hr+:A@$T58D2f;8WFodo+^ZQ%oL+>mXsD)E,\/2e4>h_Bj:4(YO$cCRK*CcZ#7H^lXeHp_-B]_j"C#jZ#P"q+=hhQ07;rfSc:o9hT2:X*o+I0#?nU-7OU[Hr]4ZaA%#bVu7/SsJg*^)#B]N42aC7UXTQI?leLpDE%<cS$*#TP<$1@A.C*!FYNiZK<$,7QC0J6?Rt;2X,$6R$,EFFT/[L<R4n"_*bPT0a5Q%*a$E+IReRl70Om50e*]BoXBl0C[=hO!jGi%V[-r^3oDBE`R#CXMV+-hr!%kO8TdJMg5u*BSchigmnrO&%1B.Pa@N+m$<#W$0+GDK%cA-7'gJHS`(s?dC2ABPs)7X[;]T&!-KX[XAa/?U-67Llk-s^=p`V7)@HjpgfW]D`<L.`pg6mFnu,KeTXD;5RFP[-n'5N+B#"<b$$%*4&FKN/u`sN.DU)V;b2Xf4K[K4dTUe:Q%CkK]"?XPeKglcjfD#(`1ic'_ViGfbIi`r:Z=s/i,dpW6G"0cULldHK%hqFL_du\J/?^%$EI6*('S=2!rFs]&ta>j5U@3<KF5Dg16Eq-[-?3'TLi6ZQ;J8dHpEg$\6pY36;5$T&B"]Deg?*<M7#T7R=klZ/bkHY9IL)5d/ka'%b(N[^*plXh[,=R%G-m%IR=qDs*BbiF*RGJiCJn6[<iQRD'P1!n0tKWh4(U-*k0Hm.9glilGHn"76CJSg"IqXk.>eR.!CIjGR"CV&%$SdisD2P*?3F*c+8b(&`)=sLFI^-#-pg$XjM+DLlB2T^:Ykbq`/W_u0?[N5lcIu4]4N<83OoL#]P)5VAgF$-=Rr=h`hm#O9_B5mN%:sJFAgXQ+-$CZbr?7knGr(`JJiJu(fJs?C`7C4"e2XfU$YTYegPJRcs$]g`B',(L).3K\-^4CN2kWQlh%L&fKb/Aoo&\!jrm.,gt%'PnGu(e=Z1+k=g\Li"p*(HVhoQ@XEkgqO^%5g6$3HY9<qf\nik>=^ghQc_^b'Q!>F_S,%k\fu]n'Q!0\W4tl#B\;3F.\(GJbhu74%Nm:P[YbO!dTgAbK>6Hf4fZLb*A'8aka/Mb2#o2uG"[LM3@(0aIE(N$Q_@;pZp4RT=BMr=&jX<3.ZX!>i.3*E<jX<7X[LC?&"A!WP%!rDLX6>YpHc)aJ;p)nJf;HCQPM3'SDlNEXjB->XE,3<OX;I\/*b/B`6+_joFILt#IO\S>>7%,N"Os\.^#>BH$4].fnRb0l%;%kEG%H<N=Ook`_Xe3p)\\j\=ei!deFkpUc4`?@=U+LK6#N^Rh^@i#8+Td7.Gj!1dm21Z(WOHH>F6'6t-:aFe=:HD@MMONl38QHmBn44&h%7ZM#FS"h6@c()m>1F>jC-t`TQG2%$e6!+e_@KshKP0)YKNKnH]c]H($(_U7f+c5B-hZjs@qQduYj<s>_L)&-),[k-e1pUePSLTbB%0lVf0;R"'(@jJB,?7,#LR"FulP9@q<8D,T47:II)!pisb>pQ(6Q#IWb:XlO=B2CMpW9ZF"E4NEZKNr`XB-KEp+T"igKF(Gh'DlT[%q?JXYW+/mUqR;&CTqrP[<[?p0+>LPCQ82,ap?J`8&?V%IL3A5PJ<Z.K6+(,f&HpW!.Ca-%UBFO'@HNT^i@8l:!@4]mZOC9^Pq+5m%lduRigmF2rRcBE-iGp)!Q-p)@5hWOr`bh\RJqqk&[/+0_)gF[\m'7+bIP/1SDmn;8l1.Aq,TBI<S'mdtG"?24Gj9&_MXpYAOCN9P%ROegLRBsB=9p.M`="9?t"7<$A_ecc!NB4QZ"(&iR1t9NQM$p)Of\Ff\J@M`%0GmKgM^6t\'FJ>\2G-YK@i2(b3GT`q$n7Pd>@^ps%P&-6e-#)1N\iiS4)TP])`_?oX(hTND(fN7VPP-?f1557\C8?jOAI,o4a;Fbp7hJV^G>'0!XU#'L/'Nn'Naad#2T^[uTh*(>YRMfd%:`-LDW=m'(&>YRMi.eAHfhF)M9hH7VK!NEsMt/]57gj7Nbs#?pDT?T>MM7$`R.*Cd/A1,LdG>i#Z-EkK+_hRp>,D!]M3sM?28e/#%`A$A*$Z9@mF5LpU1(dJ&I<+D'_5AG1'',77Z/U=X\1ud9cB^l2MXiWB2fW6<%<ml1_U+efI\/2-Ks<PF-So4_?M;!q"R$aN'2$3P%-D"gNQ=^Z;k%r?e3ItnC0J;P$%E!3=KMNsbLskVjf.\f^-!Zd%C&GT%)+HA?E='",O[)jNUjPER=^8PR8>%[`*&9D5BddA>,qKL+%jH68NjV/%I9]Mg3Z8<+0B*#'/j2r]&9aKRWU*pJ:-^(;<Kh8bZg;W;)RN8I6KlCen`o<;()k=]?P/]'X!0-'t.U`hog+^s?"HMUi%lu@]p*O;WnfFCY\-qE=[-9_n2?u5&`CIEQ\XGn?&#`beO[3>$K"i81!Q^B7#J-Ke=2dMYaKtnVg!)a8E!0@8U&Z*K%R0\eSL#-@*%Z=TK*Pj8b*q"j>O(Fcu3P]s$?k]1mI#3>u>`\#Le(+ReQ%,`^\:4ZJrRg5]WGb#'i'jg(.d-GPZ@"jToR=@I!`e^qYm2jBOV@628%M`m65`+CNJRhaL)!&WgNDu81]Yaeq?XAg(M9[".PQoWpjb1D2tf,:5!;qq@di.V0UXK[/m91.VS5Y]I@q[P*n.LOO]g&.oON@6rM%Z+Ti#ka5;0!X%T'g',c9T.NMWM@q`LjO5_fWtR6]5:^j1aouj;-5cHmg>skb:c'A`?%nt$c:O.lnW8hd1np3o-5C0,WXFQ40L1Ir%TJ/o.-%$M*1rW$9@Pjh+X)Gfe7:p?N3L\rD'fd10C)l8EbcmO$1iE)40,_&!:^GIU5\@Ga`fV,C@S[D,]>r:*?tRR'Nd0d3d(lMW%0Jum1:N"bD?#2Bl[N*#Rhr*nlX;`A!7U9`7&G;f9=uY4dpmX,cKW@FrMG_&!A]55"SSjHe9a4m,'?c7V8rmJ`#`H3H6FTDLL"d@"%8$YuJ7"C9AGNc>Y?&4ZLibt"N2H:6bBr#p*dO!kaerHu03n+J6W`g!bk6R[_KmZe;>B+,N(!>gm+FU!4KT3(nSN3bs<-V!pHt'/l%b/W`_!_7->\YQJoX9_dm2e.8njNWqSepr1K>[dt5N]5Oe8]&:G75>>Oku,SM*2jY/46NhOoHJ&WrWfEQZAEV]J"Z9o1,u><oFh@g%GigMbL/fMfJ9F]`+JOM4pQHnIIS`+3mZIsU>7q4%#d*<-,_RBLY;5W*@E0[)*uA+D0geL[\]U)6nQJYc#"$mJ7*I`L^e5SN6=r\4%9ZA,<:Z5m?`+19Fgd92?'Wn-=-Z-<U_I!D_WD+l%W1MoaOYW!')q!p)KUj],+>RA_g[#JGh^1o$)/m3RO:eHIF_T]j"j0I3fULu=%8)b!=8Eq-,95c"bg^L)%k8-0K,^lPQO9m)Be`NE)]Lc'h7\n>)^r(uk1EnV]hl;Kk$e<#<LeLN!+sXP+9k?Y%W/+A;1ZJ,@(Q1Ku%8BK@L6H6ceJN61BG`4k''TWj*n>J8:0s1d);]RG$5fUWD!\tq#Y_8&D;nO$#_8&?ZfK]][Oi2/f'-L6Ph#^'ed%Y=90i6D6e+3^`%<.C<d!&>aP>NZS$O>/^t!?!@@kH.iQW,>`M<cqXo67.B2,HN/[HF74Gl:*3bO)jTNJMQiK!=0fH*C:<&-7#R2bDaL:[f;6*:tg2Z%OW?0o6ihJ[X]W^eUeB&MPQJ=51dM_A!@0'9ZTAW&13ik/c?Au+,fVF6@DqK"O7E1PP`LB[eaYddL([-4p__m9MgPp:f\g>X/L2KM%3gc=P4"K:>\(4G@`c2(n1).T+5/tgLI]Zke3egUY'X/MGCm+9B`Z$<Ij83pEJX2)L;jtuJE(Z;q>u,jl0VuAVSmDK=La6B3Yod\g%-D3?n(n0F5[fI.)7\g\pXE][p'2biU9F.jliH'#Q_LsN\LI3U^,Y@V.E@,k^'e(ZF*C;EKJAJqTNlI665W9AVihkYNFu)\(La:WU%h2rAT9E`Agj?0]hXp?15DM\oY+VB8+Xdhs-S"3q]]LrNNa`0OUUQpp!c*q[8S*&J$bY4m#nc`XQ/<62Ck_huEjuLeT&;1Ip'BnFf%>eqk&_-BA8;VF+$IC>A1DDUDVATab/dh4H`-6tajL_)"a8=Ls.E2s__-9aLQl68gCNk,LD4`3`gP;TVpWD*2k5`l[^*GLoAloK!m%!W\_UV'*jcDVfkSR">WW_`t//_N:cij,R)IGTdAcCZor4d-X27dTC+n1%Je@OQ%/@FE]8#bp7$%#N*cP4i?VT00ASpQR9j$?c_0p%2]"6:5_N]/V@%0\T+m4<1AP[_V4t<n6]hh<D;^sq3L21TZi>FON13Q4ednjYX2XlENrpZQGD)-)M1a:@PL8T3?o,(+#ki_j)U[VO%2%[9TVdTCfnVo?Z<ZdMV^Oa6mLX"]^W=hg7[3!7[;hMEp`F5/eDGAgEGAO@>L(oTqi(BgXL015T.12kq>9Qg8.%;L#=:NN)FUf]M%Hd"F197]q#'Z4Lh34a,Y#[8i[EjO(3aq;eSX)j$7o(#ih`#9':S2U,O"u-f?gr75W*McLSXR\ItFWplS'R?QN7,^"];CHF$]P-Or%SqNZrP1;i3jp_[hegC"l6A_c:#rDqh&Y=CT9gjg<M1R'lEJ`C)6RJLK\(1j@&V9J=;=kb3EIiZP/,ihE5[jT00SG.?+L!Xn[)C3h%S/R]tMH;2PNi<M\S5oe,/b(]B,YKP=A"u/pfj_7Ho%:l2'U2^$Yf*ZmWo0\2F%t%j`hnAD#Vo@VZD<*b$&=Ook^m(gV\R$7Q9`hD%]LBUKa-EM&R=QQ"ST\]ZV*r1(RE1O$Cuhs,2;ML.X5bmh8VXW'<jGM'M:5(KQ9\l\g@(^]q\^sl@?2X.BF+jp5YY_'5JneO[n%<C%';ccW]c)ep\7>h];J%_T)MeF;9!*nJ.%%/E'JC>)`;Y1Z7bA?Gi"<CCPic"E\AY;+!\P'H4PjQE'gs=GCiN-G\A[RB">1!lQaBOm%Zri*LI#6Ur971&@p_$GuY\p_($QQ?BQahadEi:G>&t`ZU[Y,E/*)f_C`2>>D/I<`'Pu!2C?Qoj"CN*%E974mIG_l^1%0O`3(oR]\%[tuaUF2S`!+ppJCrtQ5N,$a-b@j^)1OkC(cc:/BuZ,q#p9->q&Rt;nO@8X"DN3FU<8tTWcQumTt9;%@tnb@_&cQW^e$9^YQ^j@0S%fKGi0Uqf&6D"'c"'\%FNgl[Hqr-SHrRo4t"m9B6)8@3:YYUVPJhs,m><UYHW"0,071A+rZ)RlqZNM_F&/HkpS`eDYTPU\kuEJ^$.%Lf39#&e1:ZNtd/1UB`VE;$pY->nRKu*ZUh_@<h+VFB\5'i>HfkJ>S-_TqFZ^DC@@n7Wj&7:+1pIDQ`ic>kN/Ze^)L*$`jn&=tBH"%;Bm2qXWj==A3)3g2Sm6N^tZ8S\:m6sVk'PKWDXiG]$ZJRY_PN6/]kYHE0;nRf_k*I1R)*7U3BPKfa013n!t5.C%qn:-&tQ.C1ord%6SNg6!c/Ph"ClY=>SYBsT$)d2REb68G@Uh<Js+pk>fJ:cE3m-JE&.j6VVsU*b0ZBqggO]ifoDt$>Ef^<<nsj4f:2T72XD7p2/M<[%o6S7In1'(KM44QTFi3,XglN)13!%:A/'KirfEip=*k/GN$1(FJdhRg+gS3n,=A:n=]>H/+U@5X-hHAjX4]&X-:\3ufGN/uURd@KJ%2ESh)/)&B4PALlU-L!:%AePuXd"S<e/$'jM3<K*80RGTZK-J6m(2U.`ZJ.XI`pKRG0NM\;YXtQSbqT$lA>r$!ah[%d4R/XP0d1ND%'=A`?`.T/G#f0g%N5.;X+;?Qko/hZkoM-Q5N"F$FL*Am!EEe,r4A;f;$7'?.N6k[FB3Po]HT.&e-kPI>L2A3\A=f/%]Y%of%Sb#j%h)+T<6:Gp/fLF9*K-UaYP,$<'A6OePI:c"=7O3iQ;i9o$,tW,Y+a#u!a8P52PI[`po7e_='cppFA62j*5uo>2bf#;DX7Qi(&>:4a%$s=-0"B&,Vc@^qF1Ek0o66rW\L3l/k,_8;Y%#"6j#&1o/7$0`tC>fc_^d2@0[p#3YO&2QE)L)jk'iIspFuQ5::l9]LnIPZ&DQlEa%\B3$5/3M)C`ia2%8^X=hnK+jOA>5+q!r!6fdV9oCWkKW2d1b52gB;]p0IOXGZ""baE5XY=]Y6g`"lk,reOt%h,Dq.Pj\Z4TS?,97%]W[/"KJoh8IYHJe8\>lh6#7dA(9Wg0)R-ibZ?t!L'dU>mh2P]5!YS-mLlA?<PZ/1j$@a3sP_2JUKu4HNZ<\HFR#G8Ic01"[(HjPi%[0/XtD>0jIF#a79+Z,Pr:s>6fnB=X\<;!7=GQJ6AAHsSbPRuoU7Se-N+sc;@5R9<#'Xj[In>DKX-&^"UD$gSFEXV_U6'0hp3I'.V%.>O"@1cXgfH[F*P#[V`GE'XM6#:GBUeYL?p))fl!dj@X>a`[j2K)`D+kdHTe]4Q(SZ4VjZcOMO[,s@h^nHm+Oo?4TTe"n068.kX2%@RV>-OK'APb(M!)iAuj908d!Y6`:ZR4DmZN#9bK<HlJPhq"H4Gj&TQ3e$,Sdj.pa]#F8$"'0,8.3!#8Dfc,-%p;MOr>CHWt`g37$%GH$XYkmMFTOFWP?U]_fZBun:1\^[lm7?#:3<T5tgP]j+,,nL'MlR>>#>k9c<,$m`0S-,fg33-K^+NYN*=(H`qE?c.S)sd2Ef,/T2%\"s@!f+ZiO&k.hsh@iS$/,FE)#f>)8NU[,FB1*j-"-eGY2A<@D@p#uQ@`7]0Bs=O\Sh//kq(`1EmR*u$6lfc"L?Tk#Q'8DZi,0.#%F=+mjKmgDjRRP-bDPMojE4DuFK##he)QjI4TJ0)7U[GK6M&$TQ'hM5H%1A$YqBID5PTli>hr:g6g)WZ36fCog?N\4`H75>FbRkKV%\!+qA@O:$mgNHW-N+e65M\,i<.4-)oYBc"]LD',qn#T%[4;=;?6F%ODiAN?GLcA&OPUr0.TP]u-Rs.N8G2>-#=#HT:h*)-YMo$S?%G"Q/(_A'.%1Lt%aW,C<d[?u32/W$A"^'Tt,m%J+(-lT0FgEP*f^aA&#hDDPnLVS%Jc!iE,ET.N:kJ'IkkR_K/Tqd"ilBkR.d\4UD%g$56\10L,49A7f($XK6f*40IE'f0=@)(WpeH%7Nu">pS-Oar%Fh6;&Po6M`_\#c.#r3H]hM&h*]kASV*.J2aa*O)Mq'$XSNa;j(O%'hVpA=_!`8YL>[>>S`;6Y;-2E/HP('XJj0VC5dn$AuBKRH#@8ae\W-uZC-7VXbq[\d]>])9S*4'3:.,c@nQ*s&a_t7=\^I#-Fd>*%mFG6VEY_941[=nE&#D!>`gBGS>S;Djo*-Kn+FFKt\4"nmW`r"'hEhls\I^Zji/u6>Nf(]sUnZgE#e23jS%QTeg=bsBRjsaY"dZG3%%Bm<N+q_tn$Z[#m"K2[=YX$ndf5\*JQZ7RXZ09jj="u#3AW\btdG9G.E)JNofSY=i)d]B$j1;HtFP(XYqN%>Sk^42()AdD%JCiH9%#[f'Oamqu7(I&BGaB:s,H=i?LB`9\u$ni='UY*1&8a9"&,X8DE8.ItPPZ[Q/93OHLjq`P_;:+K>>+MC%<VBG^R#VBs>`m*0NSms0%A3uHC7dqtN3N;5rFl/N]j'PW_-l,(+/n$/s]J>2IL<W0HbocU1\jTAN;;4)N;n62pN8[c';,Fi/A#,\`-n#^3Z9mK:$Gn-A"b*n$%@<5:'DMX%/+Q6s0AT@>r(cFX%OC1mU40-Rcr6qm.4_HWU62X6Uh9$GSC"UCrP8bZ^RK*^UCq$aAec-VUC$2&U>O6Mt>C+<O0bd2#%,frD'&ljLrlUgCkN$=EiB0!q)6<_&[A:UJ@.I?"FWQ%(f6=Xl;KoKrQ$&iS#K<AVl-q,.bam*\DH*V,1,,D*f-rVt>L!HJ;geaBF%F1@oP9E&5#A+S@]YN2C2a^"K_CRs(6L,>0u9jXaPg"tek.6'"T:AT=`6RVh".dV:\Lk0uQmdp,1`2;F&;BJMhF"FgD4fDQI7?lZY%l$RnMdVgU;*Js7_=ni,ibe&Xpgp1Y[`2oB2ko"!^HIL(a=b5dB>>CiH:c'[\D-\u<-D?(:WUMglH$e^ZQO/DbToOg?G'<?#PM.oe%d%u.e30!<X%@tKK$%jMI=iZ'3"DP$%:Krb?1;0aDLJGFX/u2d6Z>&W1'/LnM@:TI"h=ql1`e(ETlTA<*LpIubWbtOo?Z6oq<.Hg-%5P$V2c4bsY57-5`5SfkUC/R95$\PnQGsghrN'#J!?>2qc\*G8dTAOcap+l%ocKCDl"MQ8-FqIJ8q7+];6XP5T27a;p3"O^ZT5W7i%ZHl["=/HK`APpK:#M._a((RI?E*Z1FcK!t^W`uUhOqn>8*8fr$0dm>U@*(j%#H!ha+KNd1%4e<!3o58=H1ZAn5hA^XgSDd/Xo#8b%Rp:4#:cl+ZP]XIa`R>-6LVdIt2f(Q:Fe'@nfNg6"&Fa<OR5Jsbm[2+0'/9c$'>_ZgpdKtr>se#9b3iN.n4"`NieA3Hp$TFuZG-mG%iT]-G-4)>QK2'DpVf;Y^.,5L5E(`6-=Aj+h:X*sPA6U-d><9EF^"7>mlac0c7>fE8S!g?=hnicI_IdRCWe'jU9or+Va!N6O,X]_C%ZH]?]3ROYBe>C#Egk\^hs#-V''R&KhhYikD''HS71VWIKlT]7*#9ZU>hqJD'F+hJ^]/;D`EJMupOAq9hbGEOCo=`DtB6m+I2p3Y'%m(uLfkGKjVM6M:NY-0m:FF"^5+J3ODLsd@m)PV?<'PPDbC2;Bq4<IHV_1/5<f<&OFBX_"W#fH=WLb&G\8\:J0%8)C)M:n$1C[`Km%l`uIPh7cG67TlH29c?5egdREq$%!XJDN`Ud;oX6nhpWb$=PhNp>uEL1-<YM<be#DaMq[27\9Pd]OPkE.JG'hK0,l[N_(UtddCCV_%]BLc(2Y5Xm*#=D`,A$'QK2)!)81rRC,*7P<1_a9D9$DdX98:c[1g?if$t,#uYAUqhk]gM$X@(_$,ki8D0pVl%(RZ_nI+55Y%$YCY%A(F_NreT\"982Pr;I:n9qiGKr\J[E(epF=%q1L^OcLI.=,BmkN$2ZcUi+l`mG^m*Z*$0Z/CrdPkYpgohii2;>HhC#i*+20V7)HX<%\+S.o0>8!NoWueF*.k*#a".r<@5%NMOMo$1LR,G:pK=SP6el5u!q/P5h&7nU50hcCPJCMEWe2A/eR]7Z)h2dL5`%"Y98q<M"Wie\%'n#Z5(+.`t&M'5d^DSQ$mk(^#MHeW6-YIP9AjR[Grf#m>j$AalFS:UaKteB$*4Jg+SWNf%mV_\;nGI\-(jY+0/;_#/Pu:d18%c]&%42'5`>LT':i16Q<e48;A:D,$DOX<hn+s22hXlZ,(g?nYQTIfS*>.rZ3^K3)F52?V7i/)fs`_;UF95QM*^DX7]\Qj\CW^Xf7_qT<l%0.2^5POFt?r$E.K.[0VUYQ#\o50cg8Iaalj`sMGYGK;i\[,9&=`toic>1`EB3+B7<ddp/O^WKNS\Jboa0#"HN\[/WQF\MANE<71F%:;rF@2rM3;Brce0C63fpItTDVB6EZ$8pPNNe;j+`SuAVbHFqi$q)DlR$3W"Fnt#rD2b+a^F.DFBH()(RYQU?(maDh>OY/cNNg*H7%hVHWI[!hRsI/Aib,8"cB&R:Y1XIe2e_<@[@K"?d?_.,dSj*FVi7e3(O)&<9)Gde*uE_gQm1Qia:Oer3po\!c$gmgAJpcO!1]!IL1%$]=G"b(`'eo=/Fg?)Is+3pdN.]LBtu.J?S":,7,ud^NZ9^%s0A2oEMe)@LF=N_IVJHctAjjZ&s[AS44Z^LMH,igC`#AGC+7P!uV:%!%A;)?<B-m,B7XH<BE*>7O[PYK1)t*jS@&i2U]NuK,C4E$0F_"!b>d,k&(^hWBd\Rf-cuX:L)U5b894m)lkMlHRTW+5,V+6V-uAZ%qt^iD^h1.TiFT_#nrbZ`^IeEVXNc&)a)"ri+p[]N3Mu"0ea[_+2UD0obob`R\G74*qrOr`>sA%9X2Ei0[`0Cps*aD9%:Fg*&=:_^%Ni,akS*9B99B[#-F#!KKg/g4LE8pUKp!["fTjJV"2p&X_R-$pKO-,)\,YkK<e4M$YK1JO&f,#gqkTfr3\*+J$0/&ksbU#I%EKTIs%KHKotn-%R\^Og*7Nuf%-r;K%UR)N;"5&lPJeiF4%:Hd8^8k/U*O2kSL1%ht9.($1!s$r[@kQAeF>l$\Ob[SfE^$gi5c$HB+N#9pW%U*8t[(Q5f!%KHijVNmo>1XUEle&ZFu>(M-B$uI5Rbn5%/(GQU7+uff%4f1l='gnK>#fFD86>MK4]fCNKE#0/Y.FQX?7r_)a(MDTd%J<jb)^ulkMb*LK`R&Z#PPF7G?Bi,>@j;KBaZ>N'KV-^dh._@qWk]-4(O>^urANlYYOK)aTEimoCDtck(K-*:W>g48CFN5NpgdA7?%>cVYk>$n$?q!TD5Q&&dB%9i8rAZ96*4J(K1O*Oq,H9(q>^McmHU'7Jm4jcmkeH9JVC><th2R/nmbu)Hu.N5CGhaiXV&`=SalIDhc%8#s]i%jV,u3.B(BZ^G[Yk86W`+Q&[R(@srFQFE4`nqOkiI1A)G(lsQq*hF]59/8YKmb9t<q>."!XKYsd^]+,up%oh;N^r7c0@st1%rN#S@6gLe.elNBaY9$kS4g_qLB`10dd'<qB%(pu'fuI^5_&ts&NR_u9%,IN1^W(P@pZ-GH?fr?"R?#U7o3$jEJNhu;9%Z$K^(,&<%IcnCerP>g)I=:qR[=$iFHhHaY%ps_Zo('D)4am=r]b_bSqpVU:/oNt"rUSLB@"7KS)AOollVmi$S*K%cCBrfS3X<]DBL!ie3YY@I%Cu0^S^-K9=#Gq=L^M\MLFar4&G[pE&r+fkPh>%+t043-jHUBsNVn.1=6ai@Q%XCmfl^+,\T=j`Ja&H(b4T:@ob97BgGl')C[f.5q%2AF#Go9uE[*);=ln@p.Dn`L-gIfD!2rgJc&3;6O6AGPE:,a8</%W"]HGu,rklYig@hUhrqYS_b-L_iE0'o?CU^S;Y,OG=RgDl_i&%J!607`ScBs;$bQ8n05YueI*N!r35O;a_bt_lsts=NLl5L3?g^C3TsnNIolgNJ.',sJUCj&@-84W$>uXP7DU3F'RJ-DMW0Uin!?lc%Deq$J=;2uhiT3n&W?1)<."V0b_n(87CjWpMm&)d#P7Pldn'd>lpNo+3*eA@YK-"&-&*j9]i50DK.N_\*d`:86O$od"3=8%^GZYQj%Z0hKFHBeGr`aL++B;%6.`sB;RlnDPHI>XYT;?BK3(He,<fD'`IA*W\7OS(El9Re!&T1g,LoZhgF-[-[4n[!/ff>l3$qY8&,:Hs.'%m+'ARSmCsdh4(n2IJ,$1s7G"AhgKnJi:jD=4C/bNq;B6:UZM>Z^H4XRnbLK*HosU-4[.aDTALNYGB`*-qRKosO0d<>[dfd+B,R=a%I(&Rua6,WMh\i&IrTnG5leV+,SaguLHsZi$kO.j/mbMm]Dr2SeIscHFs.-d^qYTsP_aD1#4LD`<6bPQDPe4h#^,nGnGK9C*h/WDd%mQ5mZ_op<"_o(I#h=:=.nbIEW^,%tIn_(rq)kV8#(-akkCE&m[I'2LN\ar_i&pm\PdRs1YPGGjnm$mt88!g!#]&n<!IWX1RqHR$L%I&Zpf6a%6jkJ,<Y`ui;-j.hYklhJ]Us'>YNoB=T#/aklOrUcSGg29*!ms"cTTD`h\r\+2g^\!lmb$Y+<^\68trl3jn>CZP=r8#-^%p]&&or($e^TD[/fp<WcX^V'KFJ,O<bmA#1*n)*uqfDibWIcL.hAPHA][IsKfhtiE6ks,377utCUiksf.2]qs!X,pE;X5iY;0`:O3%Onf6'qE6sOpBu:rrWPI\[=39pjstrL<IR;*WVVLG\<&-/Y!5'e]6>4qonU!F?Wt4Pmui61B\Eu*e%^A%'Rs8L"ious0o*pK(P8GF%`9hs%(XKq8AdppO#I\r6)1\jRGATD^o>OZ.YR^6eUu!=,9R[89IYcbSW%X`pLJ;%Os3Vfl9AkRaO+-Zn40Mu*qsdHhJ,JlVdoX;q%(<*&@CtItGrj/MPI!P%Kp\)dWc[YKUea(E=Q_2"en<;&iT)J$Kf<-FhkU5\f5Pq\*042JCq:lH2HiNF7J+3"FG19a>m5"\<g/6G)%5(<%LjfQRahtcM45CNP1bL]ONo_IUOl2SuN^&RUm5POeulhW9+&DqgS:QOs-rRJ5UhtY3"Dq;Vtp8aOppuLSd:S,8rn6-Bi[uWbd%G^67FJ,8Gk5.UU=MjM2+EI%*Fp#U[/DsBDS=6u84TAK?K^28.&de,5"T3?MEa-WXpIf6Q*lX&35jBO<UrTO3\ZVOoB)L;/Kf<3Q0%2t]CRQ4&`Ji)a"?^Km/(1Y93\q9b7ibD4sO]8d0GF]e;63]'Ojg\6`^E;b3]2''*_qJGV2W'?6BIlbk*/c0h62k3qRT6>U_fD9bV%0/&feG:^>FH,ks'G2DcVZd,n!*p4];a3g3uj4jNSo%X2YI/Ge44kJG"2s8S`s8MYcB0UY6o\)*LFn=!.:]KM/jlq[>8&]`HMsF_&%+2*!oan6JHm./9E?iKUmY,C4ICFA-9mr&+8=Z[TG~>%AI9_PrivateDataEnd